name: Reanimated compatibility check [Nightly]
env:
  YARN_ENABLE_HARDENED_MODE: 0
on:
  pull_request:
  merge_group:
    branches:
      - main
  push:
    branches:
      - main
  workflow_call:
  workflow_dispatch:

jobs:
  read-compatibility-json:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: ubuntu-latest
    outputs:
      react-native-versions: ${{ steps.set-outputs.outputs.react-native-versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Read compatibility.json
        run: node .github/workflows/helper/read-compatibility.js
      - name: Set outputs
        id: set-outputs
        run: |
          cat /tmp/react-native-versions.json >> $GITHUB_OUTPUT

  reanimated-compatibility-check-nightly:
    if: ${{github.repository == 'software-mansion/react-native-reanimated' && (github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'Check compatibility'))}}
    runs-on: ${{matrix.platform == 'iOS' && 'macos-15' || 'ubuntu-latest'}}
    needs: read-compatibility-json
    strategy:
      matrix:
        platform: ['iOS', 'Android']
        mode: ['Debug', 'Release']
        react-native-version: ${{ fromJson(needs.read-compatibility-json.outputs.react-native-versions) }}
      fail-fast: false
    env:
      APP_NAME: app
    concurrency:
      group: react-native-nightly-reanimated-build-check-${{ matrix.react-native-version}}-${{matrix.platform}}-${{matrix.mode}}-${{github.ref}}
      cancel-in-progress: true
    steps:
      - name: Set up JDK 18
        if: ${{ matrix.platform == 'Android' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: ruby/setup-ruby@v1
        if: ${{ matrix.platform == 'iOS' }}
        with:
          ruby-version: '3.3' # Not needed with a `.ruby-version` or `.tool-versions`
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Check if react-native version exists
        id: check-react-native-version
        run: |
          if ! npm view react-native@${{ matrix.react-native-version }} dist-tags ; then 
            echo "React Native version ${{ matrix.react-native-version }} does not exist - Skipping..."
              echo "SKIP_BUILD=true" >> $GITHUB_ENV
            fi

      - name: Reanimated Compatibility Check Build
        uses: ./.github/actions/reanimated-compatibility-check-build
        if: ${{ steps.check-react-native-version.outputs.SKIP_BUILD != 'true' }}
        with:
          react-native-versions: ${{ fromJson(needs.read-compatibility-json.outputs.react-native-versions) }}
          platform: ${{ matrix.platform }}
          mode: ${{ matrix.mode }}
          github-sha: ${{ github.sha }}
          app-name: ${{ env.APP_NAME }}
