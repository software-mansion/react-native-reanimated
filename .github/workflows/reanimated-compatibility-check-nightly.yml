name: Reanimated compatibility check [Nightly]
on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]
  schedule:
    - cron: '37 19 * * *'
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    if: ${{github.repository == 'software-mansion/react-native-reanimated' && (github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'Check compatibility'))}}
    runs-on: ${{matrix.platform == 'iOS' && 'macos-14' || 'ubuntu-latest'}}
    strategy:
      matrix:
        platform: ['iOS', 'Android']
        mode: ['Debug', 'Release']
        # TODO: Fetch compatibility in docs and here from common sources.
        # Update it when dropping support for RN versions.
        react-native:
          [
            { version: '0.74', architecture: 'Paper' },
            { version: '0.74', architecture: 'Fabric' },
            { version: '0.75', architecture: 'Paper' },
            { version: '0.75', architecture: 'Fabric' },
            { version: '0.76', architecture: 'Paper' },
            { version: '0.76', architecture: 'Fabric' },
          ]
      fail-fast: false
    env:
      APP_NAME: app
      RCT_NEW_ARCH_ENABLED: ${{ matrix.react-native.architecture == 'Fabric' && '1' || '0' }}
    concurrency:
      group: react-native-nightly-reanimated-build-check-${{ matrix.react-native.version}}-${{matrix.platform}}-${{matrix.react-native.architecture}}-${{ matrix.mode }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Set up JDK 18
        if: ${{ matrix.platform == 'Android' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name:
          Setup Yarn
          # Sometimes `npx @react-native-community/cli init` fails at random.
          # Pre-installing it with Yarn seems to improve stability.
        run: corepack enable && yarn init
      - name: Install React Native CLI
        run: yarn add @react-native-community/cli
      - name: Create app
        run: yarn rnc-cli init ${{env.APP_NAME}} --version ${{ matrix.react-native.version }} --skip-install --pm yarn --install-pods 0 --skip-git-init
      - name: Setup Yarn Modern in app
        # For convenience, sometimes there are vague issues with RN CLI and Yarn Legacy on the runner.
        working-directory: ${{ env.APP_NAME }}
        run: |
          touch yarn.lock
          yarn set version berry
          yarn config set nodeLinker node-modules
      - name: Install Reanimated
        working-directory: ${{ env.APP_NAME }}
        run: yarn add "react-native-reanimated@https://github.com/software-mansion/react-native-reanimated.git#workspace=react-native-reanimated&commit=${{ github.sha }}"
      - name: Install Pods
        if: ${{ matrix.platform == 'iOS' }}
        working-directory: ${{ env.APP_NAME }}/ios
        run: bundle install && bundle exec pod update
      - name: Setup Fabric (Android)
        if: ${{ matrix.platform == 'Android' && matrix.react-native.architecture == 'Fabric' }}
        working-directory: ${{ env.APP_NAME }}/android
        run: sed -i 's/newArchEnabled=false/newArchEnabled=true/' gradle.properties
      - name: Build app (iOS)
        if: ${{ matrix.platform == 'iOS' }}
        working-directory: ${{ env.APP_NAME }}/ios
        run: xcodebuild -workspace ${{env.APP_NAME}}.xcworkspace -configuration ${{matrix.mode}} -scheme ${{env.APP_NAME}} -destination "generic/platform=iOS Simulator" -quiet
      - name: Build app (Android)
        if: ${{ matrix.platform == 'Android' }}
        working-directory: ${{ env.APP_NAME }}/android
        run: ./gradlew assemble${{ matrix.mode }} --console=plain
