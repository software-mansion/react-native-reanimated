name: Expo DevClient build check [Nightly]
env:
  YARN_ENABLE_HARDENED_MODE: 0
  SCRIPT_PATH: ${{github.workspace}}/.github/workflows/helper/configureDevClient.js
on:
  pull_request:
    paths:
      - .github/workflows/expo-devclient-build-check-nightly.yml
  schedule:
    - cron: '0 0 * * *' # after publishing new nightly version on NPM
  workflow_call:
  workflow_dispatch:

jobs:
  build_ios:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: ${{ matrix.platform == 'iOS' && 'macos-14' || 'ubuntu-latest' }}
    strategy:
      matrix:
        react-native-architecture: ['Paper', 'Fabric']
        platform: ['iOS', 'Android']
      fail-fast: false
    env:
      APP_NAME: ExpoApp
      EXPO_TAG: latest
    concurrency:
      group: ${{ matrix.platform }}-expo-dev-client-${{ matrix.react-native-architecture }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out reanimated repository
        uses: actions/checkout@v4
      - name: Setup Java 17
        if: ${{ matrix.platform == 'Android' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Create Expo app (Paper)
        if: ${{ matrix.react-native-architecture == 'Paper' }}
        run: npx create-expo-app@latest ${{ env.APP_NAME }}
      - name: Create Expo app (Fabric)
        if: ${{ matrix.react-native-architecture == 'Fabric' }}
        run: npx create-expo-app@latest ${{ env.APP_NAME }} -e with-new-arch
      - name: Load Expo tag
        working-directory: ${{ env.APP_NAME }}
        run: |
          if npm view expo dist-tags | grep -q 'next:' ; then 
            echo "EXPO_TAG=next" >> $GITHUB_ENV
          fi
      - name: Install Expo
        working-directory: ${{ env.APP_NAME }}
        run: npm install expo@${{ env.EXPO_TAG }}
      - name: Setup configuration
        working-directory: ${{ env.APP_NAME }}
        run: node ${{ env.SCRIPT_PATH }} setBundleIdentifier
      - name: Install Reanimated
        working-directory: ${{ env.APP_NAME }}
        run: npm install react-native-reanimated@nightly
      - name: Expo prebuild
        working-directory: ${{ env.APP_NAME }}
        run: npx expo prebuild
      - name: Install pods
        if: ${{ matrix.platform == 'iOS' }}
        working-directory: ${{ env.APP_NAME }}/ios
        run: bundle install && bundle exec pod install
      - name: Build app (iOS)
        working-directory: ${{ env.APP_NAME }}
        if: ${{ matrix.platform == 'iOS' }}
        run: yarn react-native run-ios --terminal='Terminal'
      - name: Build app (Android)
        working-directory: ${{ env.APP_NAME }}/android
        if: ${{ matrix.platform == 'Android' }}
        run: ./gradlew assembleDebug --console=plain
