name: Monorepo app Reanimated build check [Action]
env:
  YARN_ENABLE_IMMUTABLE_INSTALLS: 0
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      concurrency_group:
        required: true
        type: string
      is_hoisted:
        required: true
        type: boolean

jobs:
  build:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: ${{ inputs.platform == 'iOS' && 'macos-14' || 'ubuntu-latest' }}
    concurrency:
      group: ${{ inputs.concurrency_group }}
      cancel-in-progress: true
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Create directories
        run: mkdir -p monorepo/packages

      - name: Setup monorepo
        working-directory: monorepo
        # TODO: Put Monorepo template into a separate repo/package
        run: echo '{"name":"rnos-monorepo-tester","version":"1.0.0","license":"MIT","private":true,"workspaces":{"packages":["RootApp","packages/PackageApp", "AppA", "AppB"],"nohoist":["**/react","**/react-dom","**/react-native","**/react-native/**","**/react-native-codegen","**/react-native-dev-menu"]}}' > package.json
      - name: Install dependencies
        working-directory: monorepo
        run: yarn install
      - name: Install React Native CLI
        working-directory: monorepo
        run: yarn add -W @react-native-community/cli
      - name: Create RootApp
        working-directory: monorepo
        run: yarn rnc-cli init RootApp --skip-install --pm yarn --install-pods false --skip-git-init
      - name: Create PackageApp
        working-directory: monorepo/packages
        run: yarn rnc-cli init PackageApp --skip-install --pm yarn --install-pods false --skip-git-init

      - name: Install dependencies for RootApp
        working-directory: monorepo/RootApp
        run: yarn install
      - name: Install Reanimated for RootApp
        working-directory: monorepo/RootApp
        run: yarn add github:software-mansion/react-native-reanimated#${{ github.ref }}

      - name: Install dependencies for PackageApp
        working-directory: monorepo/packages/PackageApp
        run: yarn install
      - name: Install Reanimated for PackageApp
        working-directory: monorepo/packages/PackageApp
        run: yarn add github:software-mansion/react-native-reanimated#${{ github.ref }}

      - name: Setup hoisted Reanimated
        if: ${{ inputs.is_hoisted }}
        working-directory: monorepo
        run: yarn add github:software-mansion/react-native-reanimated#${{ github.ref }} -W

      - name: Install Pods for RootApp
        if: ${{ inputs.platform == 'iOS' }}
        working-directory: monorepo/RootApp/ios
        run: bundle install && bundle exec pod install
      - name: Install Pods for PackageApp
        if: ${{ inputs.platform == 'iOS' }}
        working-directory: monorepo/packages/PackageApp/ios
        run: bundle install && bundle exec pod install
      - name: Build iOS app RootApp
        if: ${{ inputs.platform == 'iOS' }}
        working-directory: monorepo/RootApp
        run: yarn react-native run-ios --simulator='iPhone 14' --no-packager
      - name: Build iOS app PackageApp
        if: ${{ inputs.platform == 'iOS' }}
        working-directory: monorepo/packages/PackageApp
        run: yarn react-native run-ios --simulator='iPhone 14' --no-packager
      - name: Build Android RootApp
        if: ${{ inputs.platform == 'Android' }}
        working-directory: monorepo/RootApp/android
        run: ./gradlew assembleDebug --console=plain
      - name: Build Android PackageApp
        if: ${{ inputs.platform == 'Android' }}
        working-directory: monorepo/packages/PackageApp/android
        run: ./gradlew assembleDebug --console=plain
