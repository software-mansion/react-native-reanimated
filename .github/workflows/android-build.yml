name: Test Android build
on:
  pull_request:
    paths:
      - .github/workflows/android-build.yml
      - android/**
      - Common/**
      - Example/package.json
      - Example/android/**
      - FabricExample/package.json
      - FabricExample/android/**
  merge_group:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - .github/workflows/android-build.yml
      - android/**
      - Common/**
      - Example/package.json
      - Example/android/**
      - FabricExample/package.json
      - FabricExample/android/**

jobs:
  build:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [Example, FabricExample]
      fail-fast: false
    concurrency:
      group: android-${{ matrix.working-directory }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Restore Reanimated node_modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-android-node-modules-reanimated-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-android-node-modules-reanimated-

      - name: Install Reanimated node_modules
        run: yarn install --frozen-lockfile

      - name: Restore app node_modules from cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.working-directory }}/node_modules
          key: ${{ runner.os }}-android-node-modules-${{ matrix.working-directory }}-${{ hashFiles(format('{0}/yarn.lock', matrix.working-directory)) }}
          restore-keys: ${{ runner.os }}-android-node-modules-${{ matrix.working-directory }}-

      - name: Install app node_modules
        working-directory: ${{ matrix.working-directory }}
        run: yarn install --frozen-lockfile

      - name: Build app
        working-directory: ${{ matrix.working-directory }}/android
        run: ./gradlew assembleDebug --build-cache -PreactNativeArchitectures=arm64-v8a
