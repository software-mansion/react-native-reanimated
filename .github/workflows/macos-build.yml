name: Test macOS build
env:
  YARN_ENABLE_HARDENED_MODE: 0
on:
  pull_request:
    paths:
      - .github/workflows/macos-build.yml
      - packages/react-native-reanimated/RNReanimated.podspec
      - packages/react-native-reanimated/scripts/reanimated_utils.rb
      - packages/react-native-reanimated/apple/**
      - packages/react-native-reanimated/Common/**
      - apps/macos-example/package.json
      - apps/macos-example/ios/**
      - apps/macos-example/macos/**
  merge_group:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - .github/workflows/macos-build.yml
      - packages/react-native-reanimated/RNReanimated.podspec
      - packages/react-native-reanimated/scripts/reanimated_utils.rb
      - packages/react-native-reanimated/apple/**
      - packages/react-native-reanimated/Common/**
      - apps/macos-example/package.json
      - apps/macos-example/ios/**
      - apps/macos-example/macos/**

jobs:
  build:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: macos-14
    env:
      WORKING_DIRECTORY: apps/macos-example
    concurrency:
      group: macos-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install monorepo node dependencies
        run: yarn install

      - name: Restore Reanimated node_modules from cache
        uses: actions/cache@v3
        with:
          path: packages/react-native-reanimated/node_modules
          key: ${{ runner.os }}-macos-node-modules-reanimated-${{ hashFiles('packages/react-native-reanimated/yarn.lock') }}
          restore-keys: ${{ runner.os }}-macos-node-modules-reanimated-

      - name: Install Reanimated node_modules
        working-directory: packages/react-native-reanimated
        run: yarn install

      - name: Restore app node_modules from cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-macos-node-modules-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/yarn.lock', env.WORKING_DIRECTORY)) }}
          restore-keys: ${{ runner.os }}-macos-node-modules-${{ env.WORKING_DIRECTORY }}-

      - name: Install app node_modules
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install

      - name: Restore Pods from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/macos/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-macos-pods-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/macos/Podfile.lock', env.WORKING_DIRECTORY)) }}

      - name: Install Pods
        working-directory: ${{ env.WORKING_DIRECTORY }}/macos
        run: pod install

      - name: Restore build artifacts from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/macos/build
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-macos-build-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/macos/Podfile.lock', env.WORKING_DIRECTORY)) }}

      - name: Build app
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn macos
