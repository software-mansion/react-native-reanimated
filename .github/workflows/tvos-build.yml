name: Test tvOS build
env:
  YARN_ENABLE_HARDENED_MODE: 0
on:
  pull_request:
    paths:
      - .github/workflows/tvos-build.yml
      - RNReanimated.podspec
      - scripts/reanimated_utils.rb
      - apple/**
      - Common/**
      - TVOSExample/package.json
      - TVOSExample/ios/**
  merge_group:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - .github/workflows/tvos-build.yml
      - RNReanimated.podspec
      - scripts/reanimated_utils.rb
      - apple/**
      - Common/**
      - TVOSExample/package.json
      - TVOSExample/ios/**

jobs:
  build:
    if: github.repository == 'software-mansion/react-native-reanimated'
    runs-on: macos-13
    env:
      WORKING_DIRECTORY: TVOSExample
    concurrency:
      group: tvos-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Restore Reanimated node_modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-tvos-node-modules-reanimated-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-tvos-node-modules-reanimated-

      - name: Install Reanimated node_modules
        run: yarn install --immutable

      - name: Restore app node_modules from cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-tvos-node-modules-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/yarn.lock', env.WORKING_DIRECTORY)) }}
          restore-keys: ${{ runner.os }}-tvos-node-modules-${{ env.WORKING_DIRECTORY }}-

      - name: Install app node_modules
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --immutable

      - name: Restore Pods from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-tvos-pods-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/ios/Podfile.lock', env.WORKING_DIRECTORY)) }}

      - name: Install Pods
        working-directory: ${{ env.WORKING_DIRECTORY }}/ios
        run: |
          bundler install
          bundler exec pod install

      - name: Restore build artifacts from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/ios/build
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-tvos-build-${{ env.WORKING_DIRECTORY }}-${{ hashFiles(format('{0}/ios/Podfile.lock', env.WORKING_DIRECTORY)) }}

      - name: Build app
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn react-native-tvos run-ios --no-packager --scheme TVOSExample-tvOS --simulator "Apple TV"
