"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[3271],{6387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>S,contentTitle:()=>g,default:()=>w,frontMatter:()=>j,metadata:()=>r,toc:()=>y});const r=JSON.parse('{"id":"threading/runOnJS","title":"runOnJS","description":"<DeprecatedBanner","source":"@site/docs/threading/runOnJS.mdx","sourceDirName":"threading","slug":"/threading/runOnJS","permalink":"/react-native-worklets/docs/threading/runOnJS","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-worklets/docs/threading/runOnJS.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Threading","permalink":"/react-native-worklets/docs/category/threading"},"next":{"title":"runOnUI","permalink":"/react-native-worklets/docs/threading/runOnUI"}}');var s=t(7671),i=t(620),a=t(9471),o=t(8589),d=t(7924),c=t(1071),l=t(1721),h=t(5456);const u={code:"function RunOnJSTsx1(){const{runOnJS,setFinished}=this.__closure;runOnJS(setFinished)(true);}"},m={code:"function RunOnJSTsx2(){const{scale}=this.__closure;return{transform:[{scale:scale.value}]};}"};function f(){const e=(0,h.UAN)(1),[n,t]=a.useState(!1),r=(0,h.mPH)(function(e){let{_worklet_8738913883780_init_data:n,scale:t}=e;const r=()=>({transform:[{scale:t.value}]});return r.__closure={scale:t},r.__workletHash=8738913883780,r.__initData=n,r}({_worklet_8738913883780_init_data:m,scale:e}));return(0,s.jsxs)(o.A,{style:x.container,children:[(0,s.jsx)(h.Ay$.View,{style:[x.box,r]}),(0,s.jsx)(d.A,{onPress:()=>{e.value=(0,h.eky)(2,{},function(e){let{_worklet_7767882256352_init_data:n,runOnJS:t,setFinished:r}=e;const s=function(){t(r)(!0)};return s.__closure={runOnJS:t,setFinished:r},s.__workletHash=7767882256352,s.__initData=n,s}({_worklet_7767882256352_init_data:u,runOnJS:h.OGr,setFinished:t}))},title:"Click me",disabled:n}),n&&(0,s.jsx)(c.A,{children:"Finished! \ud83c\udf89"})]})}const x=l.A.create({container:{flex:1,alignItems:"center"},box:{height:100,width:100,backgroundColor:"#b58df1",borderRadius:20,marginVertical:64,alignSelf:"center"}}),p="import React from 'react';\nimport { Button, View, StyleSheet, Text } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  withSpring,\n  runOnJS,\n} from 'react-native-reanimated';\nimport { useAnimatedStyle } from 'react-native-reanimated';\n\nexport default function App() {\n  const scale = useSharedValue<number>(1);\n  const [finished, setFinished] = React.useState<boolean>(false);\n\n  const handlePress = () => {\n    scale.value = withSpring(2, {}, () => {\n      // highlight-next-line\n      runOnJS(setFinished)(true);\n    });\n  };\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ scale: scale.value }],\n  }));\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyle]} />\n      <Button onPress={handlePress} title=\"Click me\" disabled={finished} />\n      {finished && <Text>Finished! \ud83c\udf89</Text>}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    width: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n    alignSelf: 'center',\n  },\n});\n",j={sidebar_position:1},g="runOnJS",S={},y=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"fn",id:"fn",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2}];function v(e){const n={a:"a",admonition:"admonition",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{DeprecatedBanner:t,Details:r,Indent:a,InteractiveExample:o}=n;return t||k("DeprecatedBanner",!0),r||k("Details",!0),a||k("Indent",!0),o||k("InteractiveExample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t,{text:(0,s.jsxs)(s.Fragment,{children:["This API is deprecated and will be removed in the next major release. Use ",(0,s.jsx)(n.a,{href:"/docs/threading/scheduleOnRN",children:"scheduleOnRN"})," instead."]})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"runonjs",children:"runOnJS"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"runOnJS"})," lets you asynchronously run non-",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#to-workletize",children:"workletized"})," functions that couldn't otherwise run on the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-thread",children:"UI thread"}),". This applies to most external libraries as they don't have their functions marked with ",(0,s.jsx)(n.code,{children:'"worklet";'})," directive."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"runOnJS"})," is usually used to update React state either on animation finish or conditionally within a gesture."]}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { runOnJS } from 'react-native-worklets';\n\nfunction App() {\n  // While on the UI thread\n  runOnJS(navigation.goBack)();\n}\n"})}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Type definitions"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"function runOnJS<A extends any[], R>(\n  fn: (...args: A) => R\n): (...args: Parameters<typeof fn>) => void;\n"})})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsx)(n.h4,{id:"fn",children:"fn"}),"\n",(0,s.jsxs)(n.p,{children:["A reference to a function you want to execute on the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#javascript-thread",children:"JavaScript thread"})," from the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-thread",children:"UI thread"}),". Arguments to your function have to be passed to the function returned from ",(0,s.jsx)(n.code,{children:"runOnJS"})," i.e. ",(0,s.jsx)(n.code,{children:"runOnJS(setValue)(10);"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"runOnJS"})," returns a function that accepts arguments for the function passed as the first argument. This function can be safely executed on the UI thread."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Don't forget to call the function returned from ",(0,s.jsx)(n.code,{children:"runOnJS"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,s.jsx)(o,{src:p,component:f}),"\n",(0,s.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Functions passed to ",(0,s.jsx)(n.code,{children:"runOnJS"})," must be defined in the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#javascript-thread",children:"JavaScript thread"})," scope, i.e. in the component body or the global scope. The code below won't work because ",(0,s.jsx)(n.code,{children:"myFunction"})," is defined in the ",(0,s.jsx)(n.code,{children:"withTiming"})," callback, which is only executed in the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-thread",children:"UI thread"}),":"]}),"\n"]}),"\n",(0,s.jsx)(a,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"withTiming(0, {}, () => {\n  // myFunction is defined on the UI thread \ud83d\udea8\n  const myFunction = () => {\n    // ...\n  };\n  runOnJS(myFunction)(); // \ud83d\udca5\n});\n"})})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["It's a common mistake to execute function inside of runOnJS like this: ",(0,s.jsx)(n.del,{children:(0,s.jsx)(n.code,{children:"runOnJS(setValue(10))()"})}),". Here, the correct usage would be ",(0,s.jsx)(n.code,{children:"runOnJS(setValue)(10)"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["It's safe to run functions via ",(0,s.jsx)(n.code,{children:"runOnJS"})," on the ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#javascript-thread",children:"JavaScript thread"}),", as this has no effect."]}),"\n"]}),"\n"]})]})}function w(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}function k(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);