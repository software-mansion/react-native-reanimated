"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[4283],{620:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var a=r(9471);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},4471:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"memory/makeShareableCloneRecursive","title":"makeShareableCloneRecursive","description":"makeShareableCloneRecursive recursively converts JavaScript values into shareable references that can be used on different Runtimes than RN Runtime.","source":"@site/docs/memory/makeShareableCloneRecursive.mdx","sourceDirName":"memory","slug":"/memory/makeShareableCloneRecursive","permalink":"/react-native-worklets/docs/memory/makeShareableCloneRecursive","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-worklets/docs/memory/makeShareableCloneRecursive.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"makeShareable","permalink":"/react-native-worklets/docs/memory/makeShareable"},"next":{"title":"makeShareableCloneOnUIRecursive","permalink":"/react-native-worklets/docs/memory/makeShareableCloneOnUIRecursive"}}');var t=r(7671),o=r(620);const s={sidebar_position:4},i="makeShareableCloneRecursive",c={},l=[{value:"Usage",id:"usage",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{DeprecatedBanner:r,Details:a}=n;return r||h("DeprecatedBanner",!0),a||h("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"makeshareableclonerecursive",children:"makeShareableCloneRecursive"})}),"\n",(0,t.jsx)(r,{text:"\u26a0\ufe0f This function is deprecated and will be removed in the next major release. Use createSerializable instead."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"makeShareableCloneRecursive"})," recursively converts JavaScript values into shareable references that can be used on different Runtimes than RN Runtime.\nThe reference cannot be manipulated, as it doesn't represent any standard JavaScript object. Changes to the original value don't affect the ",(0,t.jsx)(n.code,{children:"Shareable"}),".\nTo prevent misconceptions about it we freeze the original value for object-like values and for arrays."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Functions like ",(0,t.jsx)(n.code,{children:"runOnUI"}),", ",(0,t.jsx)(n.code,{children:"runOnRuntime"}),", ",(0,t.jsx)(n.code,{children:"runOnJS"}),", ",(0,t.jsx)(n.code,{children:"executeOnUIRuntimeSync"})," and ",(0,t.jsx)(n.code,{children:"runOnUIAsync"})," automatically convert values to ",(0,t.jsx)(n.code,{children:"Shareable"})," references."]})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { makeShareableCloneRecursive } from 'react-native-worklets';\n\n// The function `() => { console.log('Hello world!'); }` is converted into a Shareable reference,\n// that can be passed to native C++ code via custom function `global.customWorkletScheduler()`.\nconst shareable = makeShareableCloneRecursive(() => {\n  console.log('Hello world!');\n});\n\n// The shareable reference allows the function to be executed on different runtimes,\n// while maintaining its original behavior.\nglobal.customWorkletScheduler(shareable);\n"})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"Type definitions"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"type ShareableRef<T = unknown> = {\n  __hostObjectShareableJSRef: T;\n};\n\n\nfunction makeShareableCloneRecursive<T>(value: T): ShareableRef<T> {\n  return value as ShareableRef<T>;\n}\n"})})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);