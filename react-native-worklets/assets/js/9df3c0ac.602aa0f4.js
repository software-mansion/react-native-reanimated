"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[4496],{620:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>s});var i=r(9471);const t={},o=i.createContext(t);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(o.Provider,{value:n},e.children)}},3190:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"experimental/bundleMode","title":"Bundle Mode","description":"Bundle Mode is a feature that gives worklets access to your whole JavaScript bundle - meaning that any code that\'s present in the bundle can be executed in any worklet and on any runtime. This means that 3rd party libraries can be used in worklets without any tricks like patching them with a \'worklet\' directive.","source":"@site/docs/experimental/bundleMode.mdx","sourceDirName":"experimental","slug":"/experimental/bundleMode","permalink":"/react-native-worklets/docs/experimental/bundleMode","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-worklets/docs/experimental/bundleMode.mdx","tags":[],"version":"current","frontMatter":{"id":"bundleMode","title":"Bundle Mode","sidebar_label":"Bundle Mode"},"sidebar":"tutorialSidebar","previous":{"title":"Experimental","permalink":"/react-native-worklets/docs/category/experimental"},"next":{"title":"Guides","permalink":"/react-native-worklets/docs/category/guides"}}');var t=r(7671),o=r(620);const l={id:"bundleMode",title:"Bundle Mode",sidebar_label:"Bundle Mode"},s="Bundle Mode",a={},d=[{value:"Setup",id:"setup",level:2},{value:"All platforms",id:"all-platforms",level:3},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Usage",id:"usage",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"bundle-mode",children:"Bundle Mode"})}),"\n",(0,t.jsxs)(n.p,{children:["Bundle Mode is a feature that gives worklets access to your whole JavaScript bundle - meaning that any code that's present in the bundle can be executed in any worklet and on any runtime. This means that 3rd party libraries can be used in worklets without any tricks like patching them with a ",(0,t.jsx)(n.code,{children:"'worklet'"})," directive."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Bundle Mode is available from ",(0,t.jsx)(n.code,{children:"react-native-worklets"})," 0.4, but for best experience and up-to-date features we recommend using the latest version of ",(0,t.jsx)(n.code,{children:"react-native-worklets"})," from the ",(0,t.jsx)(n.code,{children:"bundle-mode-preview"})," tag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"yarn add react-native-worklets@bundle-mode-preview\n"})}),"\n",(0,t.jsx)(n.p,{children:"or"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm i react-native-worklets@bundle-mode-preview\n"})}),"\n",(0,t.jsx)(n.h3,{id:"all-platforms",children:"All platforms"}),"\n",(0,t.jsxs)(n.p,{children:["To use ",(0,t.jsx)(n.code,{children:"react-native-worklets"}),"'s Bundle Mode feature, you need to make the following changes in your repository:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Modify your Babel configuration"}),". In your ",(0,t.jsx)(n.code,{children:"babel.config.js"})," file, add the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  plugins: [\n    [\n      'react-native-worklets/plugin',\n      {\n        // highlight-next-line\n        bundleMode: true,\n      },\n    ],\n    // Your other plugins...\n  ],\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/babel.config.js",children:"Example reference"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Modify your Metro configuration"}),". In your ",(0,t.jsx)(n.code,{children:"metro.config.js"})," file, apply the config required for the bundle mode. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {\n  getDefaultConfig,\n  mergeConfig,\n} = require('@react-native/metro-config');\n// highlight-next-line\nconst {\n  // highlight-next-line\n  bundleModeMetroConfig,\n  // highlight-next-line\n} = require('react-native-worklets/bundleMode');\n\nconst config = {\n  // Your config\n};\n\nmodule.exports = mergeConfig(\n  getDefaultConfig(__dirname),\n  // highlight-next-line\n  bundleModeMetroConfig,\n  config\n);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/metro.config.js",children:"Example reference"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Apply the necessary package patches from ",(0,t.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-reanimated/tree/main/packages/react-native-worklets/bundleMode/patches",children:"worklets repository"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Modify your Podfile"}),". In your ",(0,t.jsx)(n.code,{children:"ios/Podfile"}),", add the following:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# top level\nENV['WORKLETS_BUNDLE_MODE'] = '1'\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/ios/Podfile#L11",children:"Example reference"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Make sure to reinstall your pods."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Enable building ",(0,t.jsx)(n.a,{href:"https://reactnative.dev/contributing/how-to-build-from-source#android",children:"React Native from source"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/android/settings.gradle#L8",children:"Example reference"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Modify your ",(0,t.jsx)(n.code,{children:"gradle.properties"})]}),". In your ",(0,t.jsx)(n.code,{children:"android/gradle.properties"}),", add the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-groovy",children:"workletsBundleMode=true\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/android/gradle.properties#L41",children:"Example reference"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Currently, third party libraries have to be on an allow-list to use them in worklets. This is because some libraries come with side-effects that would break a Worklet Runtime. For instance, a library that imports something from React Native cannot be used in Worklets, because loading a second instance of React Native on another runtime would break your app."}),"\n",(0,t.jsxs)(n.p,{children:["To add a library to the allow-list you only need to change the ",(0,t.jsx)(n.code,{children:"workletizableModules"})," option in Worklets Babel plugin, which is an array of library names. For instance, if you want to use ",(0,t.jsx)(n.code,{children:"my-library"})," on a Worklet Runtime:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  plugins: [\n    [\n      'react-native-worklets/plugin',\n      {\n        bundleMode: true,\n        // highlight-next-line\n        workletizableModules: ['my-library'],\n      },\n    ],\n    // Your other plugins...\n  ],\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/software-mansion-labs/Bundle-Mode-showcase-app/blob/main/babel.config.js",children:"Example reference"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);