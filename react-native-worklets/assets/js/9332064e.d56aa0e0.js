"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[7823],{5432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>j,default:()=>w,frontMatter:()=>R,metadata:()=>s,toc:()=>y});const s=JSON.parse('{"id":"threading/scheduleOnRN","title":"scheduleOnRN","description":"scheduleOnRN lets you schedule a function to be executed on the RN Runtime from any Worklet Runtime.","source":"@site/docs/threading/scheduleOnRN.mdx","sourceDirName":"threading","slug":"/threading/scheduleOnRN","permalink":"/react-native-worklets/docs/threading/scheduleOnRN","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-worklets/docs/threading/scheduleOnRN.mdx","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"isWorkletFunction","permalink":"/react-native-worklets/docs/threading/isWorkletFunction"},"next":{"title":"runOnUISync","permalink":"/react-native-worklets/docs/threading/runOnUISync"}}');var i=t(7671),r=t(620),a=t(9471),l=t(8589),c=t(7924),o=t(1071),d=t(1721),u=t(5456),h=t(2165);const m={code:"function ScheduleOnRNTsx1(){const{scheduleOnRN,setFinished}=this.__closure;scheduleOnRN(setFinished,true);}"},f={code:"function ScheduleOnRNTsx2(){const{scale}=this.__closure;return{transform:[{scale:scale.value}]};}"};function x(){const e=(0,u.UAN)(1),[n,t]=a.useState(!1),s=(0,u.mPH)(function(e){let{_worklet_16628267070765_init_data:n,scale:t}=e;const s=()=>({transform:[{scale:t.value}]});return s.__closure={scale:t},s.__workletHash=0xf1f91f3b52d,s.__initData=n,s}({_worklet_16628267070765_init_data:f,scale:e}));return(0,i.jsxs)(l.A,{style:p.container,children:[(0,i.jsx)(u.Ay$.View,{style:[p.box,s]}),(0,i.jsx)(c.A,{onPress:()=>{e.value=(0,u.eky)(2,{},function(e){let{_worklet_12510269271108_init_data:n,scheduleOnRN:t,setFinished:s}=e;const i=function(){t(s,!0)};return i.__closure={scheduleOnRN:t,setFinished:s},i.__workletHash=0xb60c627ec44,i.__initData=n,i}({_worklet_12510269271108_init_data:m,scheduleOnRN:h.scheduleOnRN,setFinished:t}))},title:"Click me",disabled:n}),n&&(0,i.jsx)(o.A,{children:"Finished! \ud83c\udf89"})]})}const p=d.A.create({container:{flex:1,alignItems:"center"},box:{height:100,width:100,backgroundColor:"#b58df1",borderRadius:20,marginVertical:64,alignSelf:"center"}}),g="import React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport Animated, { useSharedValue, withSpring } from 'react-native-reanimated';\nimport { useAnimatedStyle } from 'react-native-reanimated';\nimport { scheduleOnRN } from 'react-native-worklets';\n\nexport default function ScheduleOnRN() {\n  const scale = useSharedValue<number>(1);\n  const [finished, setFinished] = React.useState<boolean>(false);\n\n  const handlePress = () => {\n    scale.value = withSpring(2, {}, () => {\n      // highlight-next-line\n      scheduleOnRN(setFinished, true);\n    });\n  };\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ scale: scale.value }],\n  }));\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyle]} />\n      <Button onPress={handlePress} title=\"Click me\" disabled={finished} />\n      {finished && <Text>Finished! \ud83c\udf89</Text>}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    width: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n    alignSelf: 'center',\n  },\n});\n",R={sidebar_position:9},j="scheduleOnRN",k={},y=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"fn",id:"fn",level:4},{value:"args",id:"args",level:4},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Implementation Details",id:"implementation-details",level:2}];function v(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Details:t,Indent:s,InteractiveExample:a}=n;return t||N("Details",!0),s||N("Indent",!0),a||N("InteractiveExample",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"scheduleonrn",children:"scheduleOnRN"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"scheduleOnRN"})," lets you schedule a function to be executed on the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#react-native-runtime-rn-runtime",children:"RN Runtime"})," from any ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime",children:"Worklet Runtime"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To learn more about the different runtime kinds, check ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/runtimeKinds",children:"Runtime Kinds"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"scheduleOnRN"})," is commonly used to update React state from ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-runtime",children:"UI Runtime"}),", e.g. when animation finishes or conditionally within a gesture."]}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { scheduleOnRN } from 'react-native-worklets';\n\nfunction App() {\n  // While on the UI thread\n  scheduleOnRN(navigation.goBack);\n}\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function scheduleOnRN<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(n.h4,{id:"fn",children:"fn"}),"\n",(0,i.jsxs)(n.p,{children:["A reference to a function you want to execute on the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#react-native-runtime-rn-runtime",children:"RN Runtime"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"args",children:"args"}),"\n",(0,i.jsxs)(n.p,{children:["Arguments to the function you want to execute on the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#react-native-runtime-rn-runtime",children:"RN Runtime"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(a,{src:g,component:x}),"\n",(0,i.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Functions passed to ",(0,i.jsx)(n.code,{children:"scheduleOnRN"})," must be defined in the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#react-native-runtime-rn-runtime",children:"RN Runtime"})," scope, i.e. in the component body or the global scope. The code below won't work because ",(0,i.jsx)(n.code,{children:"myFunction"})," is defined in the ",(0,i.jsx)(n.code,{children:"runOnUI"})," callback, which is only executed in the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-runtime",children:"UI Runtime"}),":"]}),"\n"]}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { runOnUI, scheduleOnRN } from 'react-native-worklets';\n\nrunOnUI(() => {\n  // myFunction is defined on the UI thread \ud83d\udea8\n  const myFunction = () => {\n    // ...\n  };\n  scheduleOnRN(myFunction)(); // \ud83d\udca5\n})();\n"})})}),"\n",(0,i.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Scheduling function from the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#react-native-runtime-rn-runtime",children:"RN Runtime"})," (we are already on RN Runtime) simply\nuses ",(0,i.jsx)(n.code,{children:"queueMicrotask"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["When functions need to be scheduled from the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-runtime",children:"UI Runtime"}),", first function and\nargs are serialized and then the system passes the scheduling responsibility\nto the ",(0,i.jsx)(n.code,{children:"JSScheduler"}),". The ",(0,i.jsx)(n.code,{children:"JSScheduler"})," then uses the RN ",(0,i.jsx)(n.code,{children:"CallInvoker"})," to schedule\nthe function asynchronously on the JavaScript thread by calling\n",(0,i.jsx)(n.code,{children:"jsCallInvoker_->invokeAsync()"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["When called from a ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime",children:"Worker Runtime"}),", it uses the same JSScheduler mechanism."]}),"\n"]})]})}function w(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}function N(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);