"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[3869],{620:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var n=r(9471);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},5782:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/serializable-f03822e369114922ae9756d4175a9d5f.png"},9425:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"memory/createSerializable","title":"createSerializable","description":"createSerializable recursively converts JavaScript values into serializable references that can be used on different Runtimes than RN Runtime.","source":"@site/docs/memory/createSerializable.mdx","sourceDirName":"memory","slug":"/memory/createSerializable","permalink":"/react-native-worklets/docs/memory/createSerializable","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-worklets/docs/memory/createSerializable.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Memory","permalink":"/react-native-worklets/docs/category/memory"},"next":{"title":"isSerializableRef","permalink":"/react-native-worklets/docs/memory/isSerializableRef"}}');var i=r(7671),s=r(620);const a={sidebar_position:1},c="createSerializable",l={},o=[{value:"Usage",id:"usage",level:2},{value:"Remarks",id:"remarks",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"createserializable",children:"createSerializable"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"createSerializable"})," recursively converts JavaScript values into serializable references that can be used on different Runtimes than RN Runtime.\nThe reference cannot be manipulated, as it doesn't represent any standard JavaScript object. Changes to the original value don't affect the ",(0,i.jsx)(t.code,{children:"Serializable"}),".\nIt handles various data types including primitives, objects, arrays, functions, and special cases like host objects and worklets.\nTo prevent misconceptions Worklets library freezes the original value for object-like values and for arrays."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"Serializable",src:r(5782).A+"",width:"1259",height:"749"}),"\n",(0,i.jsx)("figcaption",{style:{textAlign:"center"},children:"Serializable flow diagram"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.strong,{children:["Functions like ",(0,i.jsx)(t.code,{children:"runOnUI"}),", ",(0,i.jsx)(t.code,{children:"runOnRuntime"}),", ",(0,i.jsx)(t.code,{children:"runOnJS"}),", ",(0,i.jsx)(t.code,{children:"executeOnUIRuntimeSync"})," and ",(0,i.jsx)(t.code,{children:"runOnUIAsync"})," automatically convert values to ",(0,i.jsx)(t.code,{children:"Serializable"})," references."]})}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { createSerializable, runOnUI } from 'react-native-worklets';\n\nconst object = {\n  a: 1,\n  b: 2,\n  c: 4,\n};\n\nobject.c = 3; // <-- Correct: you can modify the object before serializing it\n\ncreateSerializable(object);\n\nobject.a = 10; // <-- Warning: You can't mutate the object after serializing it\n\nrunOnUI(() => {\n  object.a = 10; // <-- Warning: You can't mutate the object after serializing it\n  console.log(object); // { a: 1, b: 2, c: 3 }\n})();\n"})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"type SerializableRef<T = unknown> = {\n  __serializableRef: true;\n  __nativeStateSerializableJSRef: T;\n};\n\nfunction createSerializable<T>(value: T): SerializableRef<T> {\n  return value as SerializableRef<T>;\n}\n"})})]}),"\n",(0,i.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The function automatically detects the type of the input value and applies appropriate serialization strategies."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Supported types:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Supported"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"number"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"function (non-worklet)"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"HostObject"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"worklet"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Map"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Set"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ArrayBuffer"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"RegExp"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Cyclic objects"}),(0,i.jsx)(t.td,{children:"\u274c"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Objects with custom prototype"}),(0,i.jsx)(t.td,{children:"\u274c"})]})]})]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"For objects and arrays, it recursively processes nested properties"}),"\n",(0,i.jsx)(t.li,{children:"The function includes cycle detection to prevent infinite recursion"}),"\n",(0,i.jsx)(t.li,{children:"Objects are frozen after serialization to prevent accidental modifications that won't propagate to the Serializable"}),"\n",(0,i.jsx)(t.li,{children:"Functions that aren't worklets are serialized as references to function instances on the respective runtime"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);