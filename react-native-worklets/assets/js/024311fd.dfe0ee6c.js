"use strict";(globalThis.webpackChunkdocs_worklets=globalThis.webpackChunkdocs_worklets||[]).push([[9666],{620:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(9471);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},7684:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/troubleshooting","title":"Troubleshooting","description":"Failed to create a worklet","source":"@site/docs/guides/troubleshooting.mdx","sourceDirName":"guides","slug":"/guides/troubleshooting","permalink":"/react-native-worklets/docs/guides/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-worklets/docs/guides/troubleshooting.mdx","tags":[],"version":"current","frontMatter":{"id":"troubleshooting","title":"Troubleshooting","sidebar_label":"Troubleshooting"},"sidebar":"tutorialSidebar","previous":{"title":"Feature flags","permalink":"/react-native-worklets/docs/guides/feature-flags"}}');var r=o(7671),s=o(620);const i={id:"troubleshooting",title:"Troubleshooting",sidebar_label:"Troubleshooting"},l="Troubleshooting",a={},d=[{value:"Failed to create a worklet",id:"failed-to-create-a-worklet",level:3},{value:"Native part of Worklets doesn&#39;t seem to be initialized",id:"native-part-of-worklets-doesnt-seem-to-be-initialized",level:3},{value:"Unknown version of Worklets babel plugin",id:"unknown-version-of-worklets-babel-plugin",level:3},{value:"Mismatch between JavaScript code version and Worklets Babel plugin version",id:"mismatch-between-javascript-code-version-and-worklets-babel-plugin-version",level:3},{value:"Couldn&#39;t determine the version of the native part of Worklets",id:"couldnt-determine-the-version-of-the-native-part-of-worklets",level:3},{value:"Mismatch between JavaScript part and native part of Worklets",id:"mismatch-between-javascript-part-and-native-part-of-worklets",level:3},{value:"C++ side failed to resolve JavaScript code version",id:"c-side-failed-to-resolve-javascript-code-version",level:3},{value:"Mismatch between C++ code version and JavaScript code version",id:"mismatch-between-c-code-version-and-javascript-code-version",level:3},{value:"Warnings",id:"warnings",level:2},{value:"Tried to modify key of an object which has been converted to a serializable.",id:"tried-to-modify-key-of-an-object-which-has-been-converted-to-a-serializable",level:3},{value:"1. Not using shared values.",id:"1-not-using-shared-values",level:4},{value:"2. Not accessing object properties granularly.",id:"2-not-accessing-object-properties-granularly",level:4},{value:"Threading issues",id:"threading-issues",level:2},{value:"Tried to synchronously call a non-worklet function on the UI thread",id:"tried-to-synchronously-call-a-non-worklet-function-on-the-ui-thread",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,r.jsx)(n.h3,{id:"failed-to-create-a-worklet",children:"Failed to create a worklet"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This usually happens when Worklets is not properly installed, e.g. forgetting to include the Worklets Babel plugin in ",(0,r.jsx)(n.code,{children:"babel.config.js"}),"."]}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," See installation docs at ",(0,r.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-worklets/docs",children:"https://docs.swmansion.com/react-native-worklets/docs"})," more information."]}),"\n",(0,r.jsx)(n.h3,{id:"native-part-of-worklets-doesnt-seem-to-be-initialized",children:"Native part of Worklets doesn't seem to be initialized"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This issue happens when Worklets fails to initialize its native side from JavaScript."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"If you recently installed or upgraded Worklets, make sure to rebuild your app."}),"\n",(0,r.jsxs)(n.li,{children:["Check if your platform is supported by Worklets. Currently we support:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Android"}),"\n",(0,r.jsx)(n.li,{children:"iOS"}),"\n",(0,r.jsx)(n.li,{children:"macOS"}),"\n",(0,r.jsx)(n.li,{children:"tvOS"}),"\n",(0,r.jsx)(n.li,{children:"visionOS"}),"\n",(0,r.jsx)(n.li,{children:"Web"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"If you are using Worklets in a brownfield app, make sure to initialize the native library manually."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"unknown-version-of-worklets-babel-plugin",children:"Unknown version of Worklets babel plugin"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This happens when JavaScript side of Worklets fails to get Worklets Babel plugin version."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Part of your code might be transpiled with an outdated version of Worklets Babel plugin. See ",(0,r.jsx)(n.a,{href:"#mismatch-between-javascript-code-version-and-worklets-babel-plugin-version",children:"Mismatch between JavaScript code version and Worklets Babel plugin version"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"mismatch-between-javascript-code-version-and-worklets-babel-plugin-version",children:"Mismatch between JavaScript code version and Worklets Babel plugin version"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This can happen when you use code that was transpiled with an outdated version of Worklets Babel plugin."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Try resetting your Metro bundler cache with ",(0,r.jsx)(n.code,{children:"yarn start --reset-cache"}),", ",(0,r.jsx)(n.code,{children:"npm start -- --reset-cache"})," or ",(0,r.jsx)(n.code,{children:"expo start -c"})," and run the app again."]}),"\n",(0,r.jsx)(n.p,{children:"If this didn't help, you probably have a dependency that contains already transformed worklets bundled with an outdated version of the Worklets Babel plugin. You can find the offending code that was given alongside the error to find that dependency."}),"\n",(0,r.jsx)(n.h3,{id:"couldnt-determine-the-version-of-the-native-part-of-worklets",children:"Couldn't determine the version of the native part of Worklets"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This happens when Worklets fails to determine the version of its native part."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Check if you have rebuilt your app after upgrading ",(0,r.jsx)(n.code,{children:"react-native-worklets"}),". If you use Expo Go, you must use the exact version which is bundled into Expo SDK."]}),"\n",(0,r.jsx)(n.h3,{id:"mismatch-between-javascript-part-and-native-part-of-worklets",children:"Mismatch between JavaScript part and native part of Worklets"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This happens when Worklets has different versions of its JavaScript and native parts."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Check if you have rebuilt your app after upgrading ",(0,r.jsx)(n.code,{children:"react-native-worklets"}),". If you use Expo Go, you must use the exact version which is bundled into Expo SDK."]}),"\n",(0,r.jsx)(n.h3,{id:"c-side-failed-to-resolve-javascript-code-version",children:"C++ side failed to resolve JavaScript code version"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"#couldnt-determine-the-version-of-the-native-part-of-worklets",children:"Couldn't determine the version of the native part of Worklets"})," and ",(0,r.jsx)(n.a,{href:"#unknown-version-of-worklets-babel-plugin",children:"Unknown version of Worklets Babel plugin"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"mismatch-between-c-code-version-and-javascript-code-version",children:"Mismatch between C++ code version and JavaScript code version"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"#mismatch-between-javascript-part-and-native-part-of-worklets",children:"Mismatch between JavaScript part and native part of Worklets"})," and ",(0,r.jsx)(n.a,{href:"#mismatch-between-javascript-code-version-and-worklets-babel-plugin-version",children:"Mismatch between JavaScript code version and Worklets Babel plugin version"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"warnings",children:"Warnings"}),"\n",(0,r.jsx)(n.h3,{id:"tried-to-modify-key-of-an-object-which-has-been-converted-to-a-serializable",children:"Tried to modify key of an object which has been converted to a serializable."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This warning is displayed to inform the user that a shared value should be used or an object used in a worklet should be accessed more granularly."]}),"\n",(0,r.jsx)(n.h4,{id:"1-not-using-shared-values",children:"1. Not using shared values."}),"\n",(0,r.jsx)(n.p,{children:"You might get this warning when you do something along the lines of:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const obj = { prop: 1 };\n\nfunction worklet() {\n  'worklet';\n  console.log(obj.prop);\n}\n\nrunOnUI(worklet)();\nobj.prop = 2; // Warning: Tried to modify key `prop` of an object which has been already passed to a worklet.\nrunOnUI(worklet)();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["and expect the results to be ",(0,r.jsx)(n.code,{children:"1"})," and ",(0,r.jsx)(n.code,{children:"2"}),". However, the results will be ",(0,r.jsx)(n.code,{children:"1"})," and ",(0,r.jsx)(n.code,{children:"1"})," because ",(0,r.jsx)(n.code,{children:"obj"})," is not a shared value and is only copied to UI runtime once. Therefore, in development builds, we make the object immutable and add this warning after copying it to signal that it's not a valid use of Reanimated. To fix this, you should use a shared value instead:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"-const obj = { prop: 1 };\n+const sv = useSharedValue({ prop: 1 });\n\n function worklet() {\n   'worklet';\n-  console.log(obj.prop);\n+  console.log(sv.value.prop);\n }\n\n runOnUI(worklet)();\n-obj.prop = 2; // Warning: Tried to modify key `prop` of an object which has been already passed to a worklet.\n+sv.value = { prop: 2 }; // Everything is fine here.\n+// Keep in mind that you cannot modify the property directly with `sv.value.prop = 2` unless you use the `modify` method.\n runOnUI(worklet)();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-not-accessing-object-properties-granularly",children:"2. Not accessing object properties granularly."}),"\n",(0,r.jsx)(n.p,{children:"When you access an object property in a worklet, you might do something like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const obj = { propAccessedInWorklet: 1, propNotAccessedInWorklet: 2 };\n\nfunction worklet() {\n  'worklet';\n  console.log(obj.propAccessedInWorklet);\n}\n\nrunOnUI(worklet)();\nobj.propNotAccessedInWorklet = 3; // Warning: Tried to modify key `prop` of an object which has been already passed to a worklet.\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The warning is displayed due to the mechanism explained in the previous case. Since we copy the whole object ",(0,r.jsx)(n.code,{children:"obj"})," instead its accessed properties, it's immutable."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsx)(n.p,{children:"Assign accessed properties to variables beforehand and use those in the worklet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:" const obj = { propAccessedInWorklet: 1, propNotAccessedInWorklet: 2 };\n\n+const propAccessedInWorklet = obj.propAccessedInWorklet;\n+\n function worklet() {\n   'worklet';\n-  console.log(obj.propAccessedInWorklet);\n+  console.log(propAccessedInWorklet);\n }\n\n runOnUI(worklet)();\n-obj.propNotAccessedInWorklet = 3; // Warning: Tried to modify key `prop` of an object which has been already passed to a worklet.\n+obj.propNotAccessedInWorklet = 3; // Everything is fine here.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"threading-issues",children:"Threading issues"}),"\n",(0,r.jsx)(n.h3,{id:"tried-to-synchronously-call-a-non-worklet-function-on-the-ui-thread",children:"Tried to synchronously call a non-worklet function on the UI thread"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," This can happen when you try to call a function that is not marked as a worklet from a worklet. E.g.:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function callee() {\n  console.log('hello');\n}\nfunction caller() {\n  'worklet';\n  callee(); // <- this will throw in `runOnUI`\n}\nrunOnUI(caller)();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, ",(0,r.jsx)(n.code,{children:"callee"})," cannot be called from a worklet ran on UI thread because there is no corresponding UI function for ",(0,r.jsx)(n.code,{children:"callee"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["If you want to synchronously execute this method, mark it as a worklet using ",(0,r.jsx)(n.code,{children:"worklet"})," directive:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:" function callee() {\n+  'worklet';\n   console.log(\"hello\");\n }\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["If you want to execute this function on the JS thread, wrap it using ",(0,r.jsx)(n.code,{children:"runOnJS"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:" function caller() {\n   'worklet';\n-  callee();\n+  runOnJS(callee)();\n }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Check ",(0,r.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worklet",children:"this page"})," to learn more about worklets."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);