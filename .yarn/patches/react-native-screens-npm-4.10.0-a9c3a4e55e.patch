diff --git a/ios/RNSScreen.mm b/ios/RNSScreen.mm
index 8481d2125f37e81e65f1e94b9b10a210813fdecd..cea53c91761bb689a8a1c16ed214d735e4e06869 100644
--- a/ios/RNSScreen.mm
+++ b/ios/RNSScreen.mm
@@ -690,13 +690,13 @@ RNS_IGNORE_SUPER_CALL_END
   [_controller notifyFinishTransitioning];
 }
 
-- (void)notifyTransitionProgress:(double)progress closing:(BOOL)closing goingForward:(BOOL)goingForward
+- (void)notifyTransitionProgress:(double)progress closing:(BOOL)closing goingForward:(BOOL)goingForward isSwiping:(BOOL)isSwiping
 {
 #ifdef RCT_NEW_ARCH_ENABLED
   if (_eventEmitter != nullptr) {
     std::dynamic_pointer_cast<const react::RNSScreenEventEmitter>(_eventEmitter)
         ->onTransitionProgress(react::RNSScreenEventEmitter::OnTransitionProgress{
-            .progress = progress, .closing = closing ? 1 : 0, .goingForward = goingForward ? 1 : 0});
+          .progress = progress, .closing = closing ? 1 : 0, .goingForward = goingForward ? 1 : 0, .swiping = isSwiping ? 1 : 0});
   }
   RNSScreenViewEvent *event = [[RNSScreenViewEvent alloc] initWithEventName:@"onTransitionProgress"
                                                                    reactTag:[NSNumber numberWithInt:self.tag]
@@ -1425,7 +1425,7 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
   [RNSScreenWindowTraits updateWindowTraits];
   if (_shouldNotify) {
     _closing = NO;
-    [self notifyTransitionProgress:0.0 closing:_closing goingForward:_goingForward];
+    [self notifyTransitionProgress:0.0 closing:_closing goingForward:_goingForward isSwiping:_isSwiping];
     [self setupProgressNotification];
   }
 }
@@ -1462,7 +1462,7 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
 
   if (_shouldNotify) {
     _closing = YES;
-    [self notifyTransitionProgress:0.0 closing:_closing goingForward:_goingForward];
+    [self notifyTransitionProgress:0.0 closing:_closing goingForward:_goingForward isSwiping:_isSwiping];
     [self setupProgressNotification];
   }
 }
@@ -1474,7 +1474,7 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
     // we are going forward or dismissing without swipe
     // or successfully swiped back
     [self.screenView notifyAppear];
-    [self notifyTransitionProgress:1.0 closing:NO goingForward:_goingForward];
+    [self notifyTransitionProgress:1.0 closing:NO goingForward:_goingForward isSwiping:_isSwiping];
   } else {
     [self.screenView notifyGestureCancel];
   }
@@ -1500,7 +1500,7 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
   // same flow as in viewDidAppear
   if (!_isSwiping || _shouldNotify) {
     [self.screenView notifyDisappear];
-    [self notifyTransitionProgress:1.0 closing:YES goingForward:_goingForward];
+    [self notifyTransitionProgress:1.0 closing:YES goingForward:_goingForward isSwiping:_isSwiping];
   }
 
   _isSwiping = NO;
@@ -1690,17 +1690,17 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
     CGFloat fakeViewAlpha = _fakeView.layer.presentationLayer.opacity;
     if (_currentAlpha != fakeViewAlpha) {
       _currentAlpha = fmax(0.0, fmin(1.0, fakeViewAlpha));
-      [self notifyTransitionProgress:_currentAlpha closing:_closing goingForward:_goingForward];
+      [self notifyTransitionProgress:_currentAlpha closing:_closing goingForward:_goingForward isSwiping:_isSwiping];
     }
   }
 }
 
-- (void)notifyTransitionProgress:(double)progress closing:(BOOL)closing goingForward:(BOOL)goingForward
+- (void)notifyTransitionProgress:(double)progress closing:(BOOL)closing goingForward:(BOOL)goingForward isSwiping:(BOOL)isSwiping
 {
   if ([self.view isKindOfClass:[RNSScreenView class]]) {
     // if the view is already snapshot, there is not sense in sending progress since on JS side
     // the component is already not present
-    [(RNSScreenView *)self.view notifyTransitionProgress:progress closing:closing goingForward:goingForward];
+    [(RNSScreenView *)self.view notifyTransitionProgress:progress closing:closing goingForward:goingForward isSwiping:isSwiping];
   }
 }
 
diff --git a/lib/typescript/fabric/ModalScreenNativeComponent.d.ts b/lib/typescript/fabric/ModalScreenNativeComponent.d.ts
index ffed502a381ab8f16b61a6115376c40a01bbbaed..693a1c0191702d5e5adc8128384f92ded4b7bfc3 100644
--- a/lib/typescript/fabric/ModalScreenNativeComponent.d.ts
+++ b/lib/typescript/fabric/ModalScreenNativeComponent.d.ts
@@ -9,6 +9,7 @@ type TransitionProgressEvent = Readonly<{
     progress: Double;
     closing: Int32;
     goingForward: Int32;
+    swiping: Int32;
 }>;
 type HeaderHeightChangeEvent = Readonly<{
     headerHeight: Double;
diff --git a/lib/typescript/fabric/ScreenNativeComponent.d.ts b/lib/typescript/fabric/ScreenNativeComponent.d.ts
index 34013f9ac1cb80e4ea6fd933ccb82c01cfbe7149..d81f7133336cb864d1bedb49ef676d42b67ff17e 100644
--- a/lib/typescript/fabric/ScreenNativeComponent.d.ts
+++ b/lib/typescript/fabric/ScreenNativeComponent.d.ts
@@ -9,6 +9,7 @@ type TransitionProgressEvent = Readonly<{
     progress: Double;
     closing: Int32;
     goingForward: Int32;
+    swiping: Int32;
 }>;
 type HeaderHeightChangeEvent = Readonly<{
     headerHeight: Double;
diff --git a/lib/typescript/types.d.ts b/lib/typescript/types.d.ts
index 4bc388eff4ba614ad66c4aa29b0ec567bdbac5dd..c4875f46dadda6b6aec8297bfc026c05dbf331be 100644
--- a/lib/typescript/types.d.ts
+++ b/lib/typescript/types.d.ts
@@ -24,6 +24,7 @@ export type TransitionProgressEventType = {
     progress: number;
     closing: number;
     goingForward: number;
+    swiping: number;
 };
 export type GestureResponseDistanceType = {
     start?: number;
diff --git a/src/fabric/ModalScreenNativeComponent.ts b/src/fabric/ModalScreenNativeComponent.ts
index 8fcdefac813daa08dc924a1dab053e5c477a4681..d42c19e0546a984b047b61f9450348a34d66e55e 100644
--- a/src/fabric/ModalScreenNativeComponent.ts
+++ b/src/fabric/ModalScreenNativeComponent.ts
@@ -21,6 +21,7 @@ type TransitionProgressEvent = Readonly<{
   progress: Double;
   closing: Int32;
   goingForward: Int32;
+  swiping: Int32;
 }>;
 
 type HeaderHeightChangeEvent = Readonly<{
diff --git a/src/fabric/ScreenNativeComponent.ts b/src/fabric/ScreenNativeComponent.ts
index 37dbf94c683c08864ed518e504880ec2e1af58a9..01a7c0dbc8eada61516e62960794864e2ea648a2 100644
--- a/src/fabric/ScreenNativeComponent.ts
+++ b/src/fabric/ScreenNativeComponent.ts
@@ -21,6 +21,7 @@ type TransitionProgressEvent = Readonly<{
   progress: Double;
   closing: Int32;
   goingForward: Int32;
+  swiping: Int32;
 }>;
 
 type HeaderHeightChangeEvent = Readonly<{
