"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[8694],{55630:(e,n,t)=>{t.d(n,{A:()=>a});const a="import React from 'react';\nimport { Button, StyleSheet, View, Text } from 'react-native';\nimport Animated, {\n  measure,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nexport default function App() {\n  const animatedRef = useAnimatedRef<Animated.View>();\n  const width = useSharedValue<number>(100);\n  const [text, setText] = React.useState(width.value);\n\n  const handlePress = () => {\n    width.value = withSpring(width.value + 50);\n  };\n\n  // highlight-start\n  useAnimatedReaction(\n    () => width.value,\n    () => {\n      const measurement = measure(animatedRef);\n\n      if (measurement !== null) {\n        runOnJS(setText)(measurement.width);\n      }\n    }\n  );\n  // highlight-end\n\n  return (\n    <View style={styles.container}>\n      <Animated.View ref={animatedRef} style={{ ...styles.box, width }} />\n      <Text style={styles.label}>width: {text}</Text>\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n  label: {\n    fontSize: 24,\n    marginVertical: 16,\n    color: '#b58df1',\n  },\n});\n"},60035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"advanced/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction allows you to respond to changes in a shared value. It\'s especially useful when comparing values previously stored in the shared value with the current one.","source":"@site/docs/advanced/useAnimatedReaction.mdx","sourceDirName":"advanced","slug":"/advanced/useAnimatedReaction","permalink":"/react-native-reanimated/docs/advanced/useAnimatedReaction","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useAnimatedReaction.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"measure","permalink":"/react-native-reanimated/docs/advanced/measure"},"next":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/advanced/useFrameCallback"}}');var i=t(47671),r=t(30620),s=t(73239),l=t(55630);const d={sidebar_position:2},o="useAnimatedReaction",c={},u=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>prepare</code>",id:"prepare",level:4},{value:"<code>react</code>",id:"react",level:4},{value:"<code>dependencies</code> <Optional></Optional>",id:"dependencies-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Details:t,Indent:a,InteractiveExample:d,Optional:o,PlatformCompatibility:c}=n;return t||p("Details",!0),a||p("Indent",!0),d||p("InteractiveExample",!0),o||p("Optional",!0),c||p("PlatformCompatibility",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"useanimatedreaction",children:"useAnimatedReaction"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useAnimatedReaction"})," allows you to respond to changes in a ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#shared-value",children:"shared value"}),". It's especially useful when comparing values previously stored in the shared value with the current one."]}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { useAnimatedReaction } from 'react-native-reanimated';\n\nfunction App() {\n  useAnimatedReaction(\n    () => {\n      return sv.value;\n    },\n    (currentValue, previousValue) => {\n      if (currentValue !== previousValue) {\n        // do something \u2728\n      }\n    }\n  );\n\n  // ...\n}\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type DependencyList = ReadonlyArray<any>;\n\nfunction useAnimatedReaction<T>(\n  prepare: () => T,\n  react: (prepareResult: T, preparePreviousResult: T | null) => void,\n  dependencies?: DependencyList\n): void;\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(n.h4,{id:"prepare",children:(0,i.jsx)(n.code,{children:"prepare"})}),"\n",(0,i.jsxs)(n.p,{children:["A function that should return a value to which you'd like to react. The value returned from this function is used as the first parameter of the ",(0,i.jsx)(n.code,{children:"react"})," argument."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function App() {\n  useAnimatedReaction(\n    // highlight-start\n    () => {\n      return Math.floor(sv.value);\n    },\n    // highlight-end\n    (currentValue, previousValue) => {\n      // ...\n    }\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"react",children:(0,i.jsx)(n.code,{children:"react"})}),"\n",(0,i.jsxs)(n.p,{children:["A function that reacts to changes in the value returned by the ",(0,i.jsx)(n.code,{children:"prepare"})," function. The ",(0,i.jsx)(n.code,{children:"react"})," function has two parameters: the current value from the ",(0,i.jsx)(n.code,{children:"prepare"})," function and the previous value, which is initially set to ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function App() {\n  useAnimatedReaction(\n    () => {\n      return Math.floor(sv.value);\n    },\n    // highlight-next-line\n    (currentValue, previousValue) => {\n      // ...\n      // highlight-next-line\n    }\n  );\n}\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"dependencies-",children:[(0,i.jsx)(n.code,{children:"dependencies"})," ",(0,i.jsx)(o,{})]}),"\n",(0,i.jsx)(n.p,{children:"An optional array of dependencies."}),"\n",(0,i.jsxs)(n.p,{children:["Only relevant when using Reanimated ",(0,i.jsx)(n.a,{href:"https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin",children:"without the Babel plugin on the Web"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useAnimatedReaction"})," returns ",(0,i.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(d,{src:l.A,component:s.A}),"\n",(0,i.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure you do not mutate the same shared value in the ",(0,i.jsx)(n.code,{children:"result"})," function that you've used in the ",(0,i.jsx)(n.code,{children:"prepare"})," function, as this will lead to an infinite loop."]}),"\n"]}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function App() {\n  useAnimatedReaction(\n    () => {\n      // highlight-next-line\n      return width.value;\n    },\n    (currentValue) => {\n      // \ud83d\udea8 An infinite loop!\n      // highlight-next-line\n      width.value += currentValue;\n    }\n  );\n}\n"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Callbacks passed to the ",(0,i.jsx)(n.code,{children:"prepare"})," and ",(0,i.jsx)(n.code,{children:"result"})," arguments are automatically ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#to-workletize",children:"workletized"})," and run on the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-thread",children:"UI thread"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You can technically react to any stateful React value using ",(0,i.jsx)(n.code,{children:"useAnimatedReaction"})," but you should probably use a ",(0,i.jsx)(n.code,{children:"useEffect"})," for that instead."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,i.jsx)(c,{android:!0,ios:!0,web:!0})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},73239:(e,n,t)=>{t.d(n,{A:()=>h});var a=t(39471),i=t(14442),r=t(90424),s=t(31071),l=t(8589),d=t(66515),o=t(47671);const c={code:"function AnimatedReactionMeasureTsx1(){const{width}=this.__closure;return width.value;}"},u={code:"function AnimatedReactionMeasureTsx2(){const{measure,animatedRef,runOnJS,setText}=this.__closure;const measurement=measure(animatedRef);if(measurement!==null){runOnJS(setText)(measurement.width);}}"};function h(){const e=(0,d.useAnimatedRef)(),n=(0,d.useSharedValue)(100),[t,i]=a.useState(n.value);return(0,d.useAnimatedReaction)(function({_worklet_10763986752010_init_data:e,width:n}){const t=()=>n.value;return t.__closure={width:n},t.__workletHash=0x9ca2f9b520a,t.__initData=e,t}({_worklet_10763986752010_init_data:c,width:n}),function({_worklet_16484069293464_init_data:e,measure:n,animatedRef:t,runOnJS:a,setText:i}){const r=function(){const e=n(t);null!==e&&a(i)(e.width)};return r.__closure={measure:n,animatedRef:t,runOnJS:a,setText:i},r.__workletHash=0xefdff183d98,r.__initData=e,r}({_worklet_16484069293464_init_data:u,measure:d.measure,animatedRef:e,runOnJS:d.runOnJS,setText:i})),(0,o.jsxs)(l.A,{style:m.container,children:[(0,o.jsx)(d.default.View,{ref:e,style:{...m.box,width:n}}),(0,o.jsxs)(s.A,{style:m.label,children:["width: ",t]}),(0,o.jsx)(r.A,{onPress:()=>{n.value=(0,d.withSpring)(n.value+50)},title:"Click me"})]})}const m=i.A.create({container:{flex:1,alignItems:"center"},box:{height:100,backgroundColor:"#b58df1",borderRadius:20},label:{fontSize:24,marginVertical:16,color:"#b58df1"}})},90424:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(39471),i=t(14442),r=t(21844),s=t(31071),l=a.forwardRef((e,n)=>{var t=e.accessibilityLabel,i=e.color,l=e.disabled,o=e.onPress,c=e.testID,u=e.title;return a.createElement(r.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:l,focusable:!l,onPress:o,ref:n,style:[d.button,i&&{backgroundColor:i},l&&d.buttonDisabled],testID:c},a.createElement(s.A,{style:[d.text,l&&d.textDisabled]},u))});l.displayName="Button";var d=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const o=l}}]);