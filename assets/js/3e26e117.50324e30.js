"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[6293],{63881:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>v,contentTitle:()=>y,default:()=>C,frontMatter:()=>b,metadata:()=>i,toc:()=>w});const i=JSON.parse('{"id":"css-transitions/transition-timing-function","title":"transitionTimingFunction","description":"transitionTimingFunction lets you adjust how intermediate values are calculated during the transition. Defaults to ease.","source":"@site/docs/css-transitions/transition-timing-function.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-timing-function","permalink":"/react-native-reanimated/docs/css-transitions/transition-timing-function","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-timing-function.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"transitionDelay","permalink":"/react-native-reanimated/docs/css-transitions/transition-delay"},"next":{"title":"transitionBehavior","permalink":"/react-native-reanimated/docs/css-transitions/transition-behavior"}}');var s=t(47671),r=t(30620),a=t(39471),o=t(8589),c=t(90424),l=t(14442),d=t(66515);function u(){const[n,e]=(0,a.useReducer)(n=>!n,!1);return(0,s.jsxs)(o.A,{style:m.container,children:[(0,s.jsx)(d.default.View,{style:[m.box,{transform:[{translateX:n?175:-175}],transitionProperty:"transform",transitionDuration:700,transitionTimingFunction:"linear"}]}),(0,s.jsx)(c.A,{onPress:e,title:"Click me"})]})}const m=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",marginVertical:64}}),h="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            transform: [{ translateX: isToggled ? 175 : -175 }],\n            transitionProperty: 'transform',\n            transitionDuration: 700,\n            // highlight-next-line\n            transitionTimingFunction: 'linear',\n          },\n        ]}\n      />\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    marginVertical: 64,\n  },\n});\n";var p=t(31071);const g=["jump-start","jump-end","jump-none","jump-both"];function f(){const[n,e]=(0,a.useReducer)(n=>!n,!1);return(0,s.jsxs)(o.A,{style:x.container,children:[g.map(e=>(0,s.jsx)(d.default.View,{style:[x.box,{width:n?"100%":100,transitionProperty:"width",transitionDuration:"2s",transitionTimingFunction:(0,d.steps)(6,e)}],children:(0,s.jsx)(p.A,{style:x.label,children:e})},e)),(0,s.jsx)(c.A,{onPress:e,title:"Click me"})]})}const x=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%",gap:4},box:{height:28,backgroundColor:"#b58df1",alignItems:"center",justifyContent:"center"},label:{color:"white",fontWeight:"bold"}}),j="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button, Text } from 'react-native';\nimport Animated, { steps } from 'react-native-reanimated';\n\nconst stepsModifiers = [\n  'jump-start',\n  'jump-end',\n  'jump-none',\n  'jump-both',\n] as const;\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      {stepsModifiers.map((step) => (\n        <Animated.View\n          key={step}\n          style={[\n            styles.box,\n            {\n              width: isToggled ? '100%' : 100,\n              transitionProperty: 'width',\n              transitionDuration: '2s',\n              // highlight-next-line\n              transitionTimingFunction: steps(6, step),\n            },\n          ]}>\n          <Text style={styles.label}>{step}</Text>\n        </Animated.View>\n      ))}\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    gap: 4,\n  },\n  box: {\n    height: 28,\n    backgroundColor: '#b58df1',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n",b={sidebar_position:5},y="transitionTimingFunction",v={},w=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>&lt;predefined timing function&gt;</code>",id:"predefined-timing-function",level:4},{value:"<code>&lt;parametrized timing function&gt;</code>",id:"parametrized-timing-function",level:4},{value:"<code>&lt;timing function[]&gt;</code>",id:"timing-function",level:4},{value:"Examples",id:"examples",level:2},{value:"Steps",id:"steps",level:3},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function T(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components},{Details:t,Indent:i,InteractiveExample:a,PlatformCompatibility:o}=e;return t||S("Details",!0),i||S("Indent",!0),a||S("InteractiveExample",!0),o||S("PlatformCompatibility",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"transitiontimingfunction",children:"transitionTimingFunction"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"transitionTimingFunction"})," lets you adjust how intermediate values are calculated during the transition. Defaults to ",(0,s.jsx)(e.code,{children:"ease"}),"."]}),"\n","\n",(0,s.jsx)(a,{src:h,component:u}),"\n",(0,s.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function App() {\n  return (\n    <Animated.View\n      style={{\n        transitionProperty: 'height',\n        transitionDuration: 300,\n        // highlight-next-line\n        transitionTimingFunction: 'ease-out',\n      }}\n    />\n  );\n}\n"})}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Type definitions"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"type NormalizedCubicBezierEasing = {\n  name: string;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\ntype NormalizedLinearEasing = {\n  name: string;\n  points: Point[];\n};\ntype NormalizedStepsEasing = {\n  name: string;\n  points: Point[];\n};\n\ntype ControlPoint = number | [number, ...Percentage[]];\n\ntype StepsModifier =\n  | 'jump-start'\n  | 'start'\n  | 'jump-end'\n  | 'end'\n  | 'jump-none'\n  | 'jump-both';\n\ntype NormalizedCSSTimingFunction =\n  | PredefinedTimingFunction\n  | NormalizedCubicBezierEasing\n  | NormalizedLinearEasing\n  | NormalizedStepsEasing;\n\ntype PredefinedTimingFunction =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | 'step-start'\n  | 'step-end';\n\ninterface ParametrizedTimingFunction {\n  toString(): string;\n  normalize(): NormalizedCSSTimingFunction;\n}\n\ntype CSSTimingFunction = PredefinedTimingFunction | ParametrizedTimingFunction;\ntype CSSTransitionTimingFunction = CSSTimingFunction | CSSTimingFunction[];\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"values",children:"Values"}),"\n",(0,s.jsx)(e.p,{children:"Easings control the pacing of animations and transitions."}),"\n",(0,s.jsx)(e.h4,{id:"predefined-timing-function",children:(0,s.jsx)(e.code,{children:"<predefined timing function>"})}),"\n",(0,s.jsx)(e.p,{children:"A string representing a predefined timing function. Available functions:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"linear"})," - a constant speed from start to finish,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ease"})," - starts slow, speeds up, then slows down,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ease-in"})," - starts slow and accelerates,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ease-out"})," - starts quickly and decelerates,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ease-in-out"})," - starts slowly, speeds up, and then slows down again."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"step-start"})," - jumps instantly at the start,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"step-end"})," - jumps instantly at the end."]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"transitionTimingFunction: 'linear',\n"})}),"\n",(0,s.jsx)(e.h4,{id:"parametrized-timing-function",children:(0,s.jsx)(e.code,{children:"<parametrized timing function>"})}),"\n",(0,s.jsx)(e.p,{children:"A returned object from parametrized timing functions. Available functions:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"cubicBezier(x1: number, y1: number, x2: number, y2: number)"})," - a B\xe9zier curve to shape the progress of an animation. It is defined by two control points (x1, y1, x2, y2) that mathematically describe the curve."]}),"\n"]}),"\n",(0,s.jsx)(i,{children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { cubicBezier } from 'react-native-reanimated';\n\ntransitionTimingFunction: cubicBezier(0.25, 0.1, 0.5, 2),\n"})})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"linear(...points: ControlPoint[])"})," - a simple polygonal chain that always starts at an x-value of 0 and ends at an x-value of 1. You can either specify the points' y and x coordinates or leave the x coordinates to be inferred."]}),"\n"]}),"\n",(0,s.jsx)(i,{children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { linear } from 'react-native-reanimated';\n\ntransitionTimingFunction: linear(0, [0.25, '75%'], 1),\n"})})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"steps(stepsNumber: number, modifier?: StepsModifier)"})," - creates an easing function that makes given number of even steps over increasing y-values. The second argument is a modifier that adds jumps before or after the steps. Modifier defaults to ",(0,s.jsx)(e.code,{children:"jump-end"}),".","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"jump-start"})," - a left-continuous function, where the first jump occurs at the start of the transition,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"jump-end"})," - a right-continuous function, where the final jump occurs at the end of the transition,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"jump-none"})," - no jump on either end. Maintaining a hold at both the 0% and 100% points, each for 1/n of the total duration,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"jump-both"})," - adds pauses at both the 0% and 100% points, introducing an additional step during the transition,"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"start"})," - an alias for ",(0,s.jsx)(e.code,{children:"jump-start"}),","]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"end"})," - an alias for ",(0,s.jsx)(e.code,{children:"jump-end"}),","]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i,{children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { steps } from 'react-native-reanimated';\n\ntransitionTimingFunction: steps(4, 'jump-end'),\n"})})}),"\n",(0,s.jsx)(e.h4,{id:"timing-function",children:(0,s.jsx)(e.code,{children:"<timing function[]>"})}),"\n",(0,s.jsxs)(e.p,{children:["An array of timing functions. The order in this array corresponds to the array of style properties passed to the ",(0,s.jsx)(e.a,{href:"/docs/css-transitions/transition-property#style-property-1",children:(0,s.jsx)(e.code,{children:"transitionProperty"})}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// highlight-next-line\ntransitionTimingFunction: ['linear', steps(60, 'jump-none'), 'ease-in-out'];\ntransitionProperty: ['width', 'transform', 'borderRadius'];\n"})}),"\n",(0,s.jsxs)(e.p,{children:["In the following example, the ",(0,s.jsx)(e.code,{children:"width"})," property will be transitions using ",(0,s.jsx)(e.code,{children:"linear"})," easing, ",(0,s.jsx)(e.code,{children:"transform"})," will use the ",(0,s.jsx)(e.code,{children:"steps"})," timing function, and ",(0,s.jsx)(e.code,{children:"borderRadius"})," will be transitioned using ",(0,s.jsx)(e.code,{children:"ease-in-out"})," easing."]}),"\n",(0,s.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(e.h3,{id:"steps",children:"Steps"}),"\n","\n",(0,s.jsx)(a,{src:j,component:f}),"\n",(0,s.jsx)(e.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,s.jsx)(o,{android:!0,ios:!0,web:!0})]})}function C(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(T,{...n})}):T(n)}function S(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},90424:(n,e,t)=>{t.d(e,{A:()=>l});var i=t(39471),s=t(14442),r=t(21844),a=t(31071),o=i.forwardRef((n,e)=>{var t=n.accessibilityLabel,s=n.color,o=n.disabled,l=n.onPress,d=n.testID,u=n.title;return i.createElement(r.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:o,focusable:!o,onPress:l,ref:e,style:[c.button,s&&{backgroundColor:s},o&&c.buttonDisabled],testID:d},i.createElement(a.A,{style:[c.text,o&&c.textDisabled]},u))});o.displayName="Button";var c=s.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const l=o}}]);