"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[3514],{30620:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(39471);const l={},i=s.createContext(l);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},40562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/hooks/useScrollViewOffset","title":"useScrollViewOffset","description":"useScrollViewOffset is available since v2.11.0","source":"@site/versioned_docs/version-2.x/api/hooks/useScrollViewOffset.md","sourceDirName":"api/hooks","slug":"/api/hooks/useScrollViewOffset","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useScrollViewOffset","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useScrollViewOffset.md","tags":[],"version":"2.x","frontMatter":{"id":"useScrollViewOffset","title":"useScrollViewOffset","sidebar_label":"useScrollViewOffset"},"sidebar":"docs","previous":{"title":"useHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useHandler"},"next":{"title":"useSharedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useSharedValue"}}');var l=t(47671),i=t(30620);const r={id:"useScrollViewOffset",title:"useScrollViewOffset",sidebar_label:"useScrollViewOffset"},o=void 0,a={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>aref</code> [RefObject&lt;Animated.ScrollView&gt;]",id:"aref-refobjectanimatedscrollview",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsx)(n.p,{children:"useScrollViewOffset is available since v2.11.0"})}),"\n",(0,l.jsxs)(n.p,{children:["This hook allows you to create animations based on the offset of a ",(0,l.jsx)(n.code,{children:"ScrollView"}),".\nThe hook automatically detects if the ",(0,l.jsx)(n.code,{children:"ScrollView"})," is horizontal or vertical."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"useScrollViewOffset(aref: RefObject<Animated.ScrollView>) => [SharedValue<number>]\n"})}),"\n",(0,l.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.h4,{id:"aref-refobjectanimatedscrollview",children:[(0,l.jsx)(n.code,{children:"aref"})," [RefObject<Animated.ScrollView>]"]}),"\n",(0,l.jsxs)(n.p,{children:["An Animated reference to a ",(0,l.jsx)(n.code,{children:"ScrollView"}),". The reference should be passed to the\nappropriate ",(0,l.jsx)(n.code,{children:"ScrollView"})," in the ",(0,l.jsx)(n.code,{children:"ref"})," prop."]}),"\n",(0,l.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:["A shared value which holds the current offset of the ",(0,l.jsx)(n.code,{children:"ScrollView"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"function ScrollViewOffsetExample() {\n  const aref = useAnimatedRef<Animated.ScrollView>();\n  const scrollHandler = useScrollViewOffset(aref);\n\n  useAnimatedStyle(() => {\n    console.log(scrollHandler.value);\n    return {};\n  });\n\n  return (\n    <>\n      <View style={styles.positionView}>\n        <Text>Test</Text>\n      </View>\n      <View style={styles.divider} />\n      <Animated.ScrollView\n        ref={aref}\n        scrollEventThrottle={16}\n        style={styles.scrollView}>\n        {[...Array(100)].map((_, i) => (\n          <Text key={i} style={styles.text}>\n            {i}\n          </Text>\n        ))}\n      </Animated.ScrollView>\n    </>\n  );\n}\n"})})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);