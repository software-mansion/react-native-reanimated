"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[2436],{30620:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var a=t(39471);const i={},o=a.createContext(i);function d(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),a.createElement(o.Provider,{value:n},e.children)}},98545:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>c,frontMatter:()=>d,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"fundamentals/migration","title":"Migrating from Reanimated 1.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","source":"@site/versioned_docs/version-2.x/fundamentals/migration.md","sourceDirName":"fundamentals","slug":"/fundamentals/migration","permalink":"/react-native-reanimated/docs/2.x/fundamentals/migration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/migration.md","tags":[],"version":"2.x","frontMatter":{"id":"migration","title":"Migrating from Reanimated 1.x","sidebar_label":"Migration from v1"},"sidebar":"docs","previous":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/layout_animations"},"next":{"title":"Web Support","permalink":"/react-native-reanimated/docs/2.x/fundamentals/web-support"}}');var i=t(47671),o=t(30620);const d={id:"migration",title:"Migrating from Reanimated 1.x",sidebar_label:"Migration from v1"},s=void 0,r={},m=[{value:"Renamed methods:",id:"renamed-methods",level:3},{value:"1. <code>interpolate</code> renamed to <code>interpolateNode</code>",id:"1-interpolate-renamed-to-interpolatenode",level:4},{value:"2. <code>Easing</code> renamed to <code>EasingNode</code>",id:"2-easing-renamed-to-easingnode",level:4}];function l(e){const n={code:"code",h3:"h3",h4:"h4",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.\nWhen installing Reanimated 2, you will be able to use the old API as well as the new one.\nWe made the latest stable Reanimated 1 available from the same package with a few exceptions, as we needed to address some naming collisions.\nWhenever there was a naming collision with Reanimated 1, we'd rename the Reanimated 1 version of such method in order to keep the naming in Reanimated 2 cleaner.\nThis strategy made the most sense to us, as we are planning to slowly phase out the old API (we will keep making fixes to Reanimated 1 core but most likely stop new feature development).\nUnfortunately, it means that Reanimated 2 introduces some breaking changes to the API, where some methods pulled from Reanimated 1 changed their name.\nThankfully the list of the renamed methods is relatively short, and the renamed methods weren't too frequently used anyways."}),"\n",(0,i.jsx)(n.h3,{id:"renamed-methods",children:"Renamed methods:"}),"\n",(0,i.jsxs)(n.h4,{id:"1-interpolate-renamed-to-interpolatenode",children:["1. ",(0,i.jsx)(n.code,{children:"interpolate"})," renamed to ",(0,i.jsx)(n.code,{children:"interpolateNode"})]}),"\n",(0,i.jsxs)(n.p,{children:["When using ",(0,i.jsx)(n.code,{children:"interpolate"})," imported directly from ",(0,i.jsx)(n.code,{children:"react-native-reanimated"})," v1, in v2 you should use ",(0,i.jsx)(n.code,{children:"interpolateNode"})," instead.\nIf you were using a class member method ",(0,i.jsx)(n.code,{children:"AnimatedValue.interpolate"}),", no change is necessary."]}),"\n",(0,i.jsxs)(n.h4,{id:"2-easing-renamed-to-easingnode",children:["2. ",(0,i.jsx)(n.code,{children:"Easing"})," renamed to ",(0,i.jsx)(n.code,{children:"EasingNode"})]}),"\n",(0,i.jsxs)(n.p,{children:["When using ",(0,i.jsx)(n.code,{children:"Easing"})," imported from ",(0,i.jsx)(n.code,{children:"react-native-reanimated"})," v1, in v2 you should use ",(0,i.jsx)(n.code,{children:"EasingNode"})," instead."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);