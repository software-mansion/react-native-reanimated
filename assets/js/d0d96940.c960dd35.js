"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[1377],{30620:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(39471);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}},61298:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"animations/spring_utils","title":"SpringUtils","description":"For developers\' convenience, it\'s possible to use a different way of configuring spring animation which follows behavior known from React Native core.","source":"@site/versioned_docs/version-1.x/animations/springUtils.md","sourceDirName":"animations","slug":"/animations/spring_utils","permalink":"/react-native-reanimated/docs/1.x/animations/spring_utils","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/animations/springUtils.md","tags":[],"version":"1.x","frontMatter":{"id":"spring_utils","title":"SpringUtils","sidebar_label":"SpringUtils"},"sidebar":"docs","previous":{"title":"Spring","permalink":"/react-native-reanimated/docs/1.x/animations/spring"},"next":{"title":"abs","permalink":"/react-native-reanimated/docs/1.x/nodes/abs"}}');var o=i(47671),r=i(30620);const t={id:"spring_utils",title:"SpringUtils",sidebar_label:"SpringUtils"},a=void 0,c={},d=[{value:"<code>SpringUtils.makeDefaultConfig()</code>",id:"springutilsmakedefaultconfig",level:3},{value:"<code>SpringUtils.makeConfigFromBouncinessAndSpeed(prevConfig)</code>",id:"springutilsmakeconfigfrombouncinessandspeedprevconfig",level:3},{value:"<code>SpringUtils.makeConfigFromOrigamiTensionAndFriction(prevConfig)</code>",id:"springutilsmakeconfigfromorigamitensionandfrictionprevconfig",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["For developers' convenience, it's possible to use a different way of configuring ",(0,o.jsx)(n.code,{children:"spring"})," animation which follows behavior known from React Native core."]}),"\n",(0,o.jsx)(n.h3,{id:"springutilsmakedefaultconfig",children:(0,o.jsx)(n.code,{children:"SpringUtils.makeDefaultConfig()"})}),"\n",(0,o.jsx)(n.p,{children:"Returns an object filled with default config of animation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:" {\n   stiffness: new Value(100),\n   mass: new Value(1),\n   damping: new Value(10),\n   overshootClamping: false,\n   restSpeedThreshold: 0.001,\n   restDisplacementThreshold: 0.001,\n   toValue: new Value(0),\n }\n"})}),"\n",(0,o.jsx)(n.h3,{id:"springutilsmakeconfigfrombouncinessandspeedprevconfig",children:(0,o.jsx)(n.code,{children:"SpringUtils.makeConfigFromBouncinessAndSpeed(prevConfig)"})}),"\n",(0,o.jsxs)(n.p,{children:["Transforms an object with ",(0,o.jsx)(n.code,{children:"bounciness"})," and ",(0,o.jsx)(n.code,{children:"speed"})," params into config expected by the ",(0,o.jsx)(n.code,{children:"spring"})," node. ",(0,o.jsx)(n.code,{children:"bounciness"})," and ",(0,o.jsx)(n.code,{children:"speed"})," might be nodes or numbers."]}),"\n",(0,o.jsx)(n.h3,{id:"springutilsmakeconfigfromorigamitensionandfrictionprevconfig",children:(0,o.jsx)(n.code,{children:"SpringUtils.makeConfigFromOrigamiTensionAndFriction(prevConfig)"})}),"\n",(0,o.jsxs)(n.p,{children:["Transforms an object with ",(0,o.jsx)(n.code,{children:"tension"})," and ",(0,o.jsx)(n.code,{children:"friction"})," params into config expected by the ",(0,o.jsx)(n.code,{children:"spring"})," node. ",(0,o.jsx)(n.code,{children:"tension"})," and ",(0,o.jsx)(n.code,{children:"friction"})," might be nodes or numbers."]}),"\n",(0,o.jsxs)(n.p,{children:["See an ",(0,o.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-reanimated/tree/Reanimated2/Example/reanimated1/differentSpringConfigs/index.js",children:"Example of different configs"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);