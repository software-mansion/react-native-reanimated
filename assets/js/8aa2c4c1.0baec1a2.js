"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[190],{30620:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>o});var t=i(39471);const a={},s=t.createContext(a);function r(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(s.Provider,{value:e},n.children)}},73531:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>f,contentTitle:()=>p,default:()=>j,frontMatter:()=>h,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"css-animations/animation-timing-function","title":"animationTimingFunction","description":"animationTimingFunction lets you adjust how intermediate values are calculated during the transition. It can be specified for the entire animation or for each keyframe separately. Defaults to ease.","source":"@site/docs/css-animations/animation-timing-function.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-timing-function","permalink":"/react-native-reanimated/docs/css-animations/animation-timing-function","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-animations/animation-timing-function.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"animationDelay","permalink":"/react-native-reanimated/docs/css-animations/animation-delay"},"next":{"title":"animationDirection","permalink":"/react-native-reanimated/docs/css-animations/animation-direction"}}');var a=i(47671),s=i(30620),r=i(8589),o=i(14442),c=i(19727);const l={"0%":{transform:[{translateX:-80},{translateY:-80}],animationTimingFunction:(0,c.cubicBezier)(.25,.1,.26,1.53)},"25%":{transform:[{translateX:80},{translateY:-80}],animationTimingFunction:"linear"},"50%":{transform:[{translateX:80},{translateY:80}],animationTimingFunction:"ease-in-out"},"75%":{transform:[{translateX:-80},{translateY:80}],animationTimingFunction:(0,c.steps)(4,"end")},"100%":{transform:[{translateX:-80},{translateY:-80}]}};function d(){return(0,a.jsx)(r.A,{style:m.container,children:(0,a.jsx)(c.default.View,{style:[m.box,{animationName:l,animationDuration:"4s",animationIterationCount:"infinite"}]})})}const m=o.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:80,width:80,backgroundColor:"#b58df1",marginVertical:64}}),u="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  CSSAnimationKeyframes,\n  cubicBezier,\n  steps,\n} from 'react-native-reanimated';\n\nconst square: CSSAnimationKeyframes = {\n  '0%': {\n    transform: [{ translateX: -80 }, { translateY: -80 }],\n    animationTimingFunction: cubicBezier(0.25, 0.1, 0.26, 1.53),\n  },\n  '25%': {\n    transform: [{ translateX: 80 }, { translateY: -80 }],\n    animationTimingFunction: 'linear',\n  },\n  '50%': {\n    transform: [{ translateX: 80 }, { translateY: 80 }],\n    animationTimingFunction: 'ease-in-out',\n  },\n  '75%': {\n    transform: [{ translateX: -80 }, { translateY: 80 }],\n    animationTimingFunction: steps(4, 'end'),\n  },\n  '100%': {\n    transform: [{ translateX: -80 }, { translateY: -80 }],\n  },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            animationName: square,\n            animationDuration: '4s',\n            animationIterationCount: 'infinite',\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 80,\n    width: 80,\n    backgroundColor: '#b58df1',\n    marginVertical: 64,\n  },\n});\n",h={sidebar_position:4},p="animationTimingFunction",f={},x=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>&lt;predefined timing function&gt;</code>",id:"predefined-timing-function",level:4},{value:"<code>&lt;parametrized timing function&gt;</code>",id:"parametrized-timing-function",level:4},{value:"<code>&lt;timing function[]&gt;</code>",id:"timing-function",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function g(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components},{Details:i,Indent:t,InteractiveExample:r,PlatformCompatibility:o}=e;return i||y("Details",!0),t||y("Indent",!0),r||y("InteractiveExample",!0),o||y("PlatformCompatibility",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"animationtimingfunction",children:"animationTimingFunction"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"animationTimingFunction"})," lets you adjust how intermediate values are calculated during the transition. It can be specified for the entire animation or for each keyframe separately. Defaults to ",(0,a.jsx)(e.code,{children:"ease"}),"."]}),"\n","\n",(0,a.jsx)(r,{src:u,component:d}),"\n",(0,a.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"function App() {\n  return (\n    <Animated.View\n      style={{\n        animationName: {\n          to: {\n            transform: [{ translateY: 200 }],\n          },\n        },\n        animationDuration: '3s',\n        // highlight-next-line\n        animationTimingFunction: 'ease-out',\n      }}\n    />\n  );\n}\n"})}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"Type definitions"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"type NormalizedCubicBezierEasing = {\n  name: string;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\ntype NormalizedLinearEasing = {\n  name: string;\n  points: Point[];\n};\ntype NormalizedStepsEasing = {\n  name: string;\n  points: Point[];\n};\n\ntype ControlPoint = number | [number, ...Percentage[]];\n\ntype StepsModifier =\n  | 'jump-start'\n  | 'start'\n  | 'jump-end'\n  | 'end'\n  | 'jump-none'\n  | 'jump-both';\n\ntype NormalizedCSSTimingFunction =\n  | PredefinedTimingFunction\n  | NormalizedCubicBezierEasing\n  | NormalizedLinearEasing\n  | NormalizedStepsEasing;\n\ntype PredefinedTimingFunction =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | 'step-start'\n  | 'step-end';\n\ninterface ParametrizedTimingFunction {\n  toString(): string;\n  normalize(): NormalizedCSSTimingFunction;\n}\n\ntype CSSTimingFunction = PredefinedTimingFunction | ParametrizedTimingFunction;\ntype CSSAnimationTimingFunction = CSSTimingFunction | CSSTimingFunction[];\n"})})]}),"\n",(0,a.jsx)(e.h3,{id:"values",children:"Values"}),"\n",(0,a.jsx)(e.p,{children:"Easings control the pacing of animations and transitions."}),"\n",(0,a.jsx)(e.h4,{id:"predefined-timing-function",children:(0,a.jsx)(e.code,{children:"<predefined timing function>"})}),"\n",(0,a.jsx)(e.p,{children:"A string representing a predefined timing function. Available functions:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"linear"})," - a constant speed from start to finish,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"ease"})," - starts slow, speeds up, then slows down,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"ease-in"})," - starts slow and accelerates,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"ease-out"})," - starts quickly and decelerates,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"ease-in-out"})," - starts slowly, speeds up, and then slows down again."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"step-start"})," - jumps instantly at the start,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"step-end"})," - jumps instantly at the end."]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"animationTimingFunction: 'linear',\n"})}),"\n",(0,a.jsx)(e.h4,{id:"parametrized-timing-function",children:(0,a.jsx)(e.code,{children:"<parametrized timing function>"})}),"\n",(0,a.jsx)(e.p,{children:"A returned object from parametrized timing functions. Available functions:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"cubicBezier(x1: number, y1: number, x2: number, y2: number)"})," - a B\xe9zier curve to shape the progress of an animation. It is defined by two control points (x1, y1, x2, y2) that mathematically describe the curve."]}),"\n"]}),"\n",(0,a.jsx)(t,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { cubicBezier } from 'react-native-reanimated';\n\nanimationTimingFunction: cubicBezier(0.25, 0.1, 0.5, 2),\n"})})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"linear(...points: ControlPoint[])"})," - a simple polygonal chain that always starts at an x-value of 0 and ends at an x-value of 1. You can either specify the points' y and x coordinates or leave the x coordinates to be inferred."]}),"\n"]}),"\n",(0,a.jsx)(t,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { linear } from 'react-native-reanimated';\n\nanimationTimingFunction: linear(0, [0.25, '75%'], 1),\n"})})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"steps(stepsNumber: number, modifier?: StepsModifier)"})," - creates an easing function that makes given number of even steps over increasing y-values. The second argument is a modifier that adds jumps before or after the steps. Modifier defaults to ",(0,a.jsx)(e.code,{children:"jump-end"}),".","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"jump-start"})," - a left-continuous function, where the first jump occurs at the start of the transition,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"jump-end"})," - a right-continuous function, where the final jump occurs at the end of the transition,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"jump-none"})," - no jump on either end. Maintaining a hold at both the 0% and 100% points, each for 1/n of the total duration,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"jump-both"})," - adds pauses at both the 0% and 100% points, introducing an additional step during the transition,"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"start"})," - an alias for ",(0,a.jsx)(e.code,{children:"jump-start"}),","]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"end"})," - an alias for ",(0,a.jsx)(e.code,{children:"jump-end"}),","]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { steps } from 'react-native-reanimated';\n\nanimationTimingFunction: steps(4, 'jump-end'),\n"})})}),"\n",(0,a.jsx)(e.h4,{id:"timing-function",children:(0,a.jsx)(e.code,{children:"<timing function[]>"})}),"\n",(0,a.jsxs)(e.p,{children:["An array of timing functions. The order in this array corresponds to the array of style properties passed to the ",(0,a.jsx)(e.a,{href:"/docs/css-animations/animation-name",children:(0,a.jsx)(e.code,{children:"animationName"})}),"."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// highlight-next-line\nanimationTimingFunction: ['linear', steps(60, 'jump-none'), 'ease-in-out'];\ntransitionProperty: [bounceIn, move, slide];\n"})}),"\n",(0,a.jsxs)(e.p,{children:["In the following example, the ",(0,a.jsx)(e.code,{children:"bounceIn"})," keyframe will be animated using ",(0,a.jsx)(e.code,{children:"linear"})," easing, ",(0,a.jsx)(e.code,{children:"move"})," will use the ",(0,a.jsx)(e.code,{children:"steps"})," timing function, and ",(0,a.jsx)(e.code,{children:"slide"})," will be animated using ",(0,a.jsx)(e.code,{children:"ease-in-out"})," easing."]}),"\n",(0,a.jsx)(e.h2,{id:"remarks",children:"Remarks"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"If no subsequent keyframe specifies that property, the timing function applies until the end of the animation."}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsxs)(e.p,{children:["A timing function specified in the last keyframe (",(0,a.jsx)(e.code,{children:"100%"}),", ",(0,a.jsx)(e.code,{children:"to"}),", or ",(0,a.jsx)(e.code,{children:"1"}),") is ignored since there is no subsequent keyframe."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"const square: CSSAnimationKeyframes = {\n  '0%': {\n    transform: [{ translateX: 0 }],\n    animationTimingFunction: cubicBezier(0.25, 0.1, 0.26, 1.53),\n  },\n  '100%': {\n    transform: [{ translateX: -80 }],\n    // highlight-next-line\n    animationTimingFunction: 'linear', // \ud83d\udea8 this will be ignored\n  },\n};\n"})})}),"\n",(0,a.jsx)(e.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,a.jsx)(o,{android:!0,ios:!0,web:!0})]})}function j(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(g,{...n})}):g(n)}function y(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);