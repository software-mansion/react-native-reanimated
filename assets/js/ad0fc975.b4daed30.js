"use strict";(globalThis.webpackChunkdocs_reanimated=globalThis.webpackChunkdocs_reanimated||[]).push([[9270],{5786:e=>{e.exports=JSON.parse('{"allContent":{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"4.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","path":"/react-native-reanimated/docs","tagsPath":"/react-native-reanimated/docs/tags","editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs","editUrlLocalized":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/sidebars.js","contentPath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/docs","contentPathLocalized":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"advanced/dispatchCommand","title":"dispatchCommand","description":"dispatchCommand allows you to run commands on a native component from the UI thread directly.","source":"@site/docs/advanced/dispatchCommand.mdx","sourceDirName":"advanced","slug":"/advanced/dispatchCommand","permalink":"/react-native-reanimated/docs/advanced/dispatchCommand","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/dispatchCommand.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"useComposedEventHandler","permalink":"/react-native-reanimated/docs/advanced/useComposedEventHandler"},"next":{"title":"setNativeProps","permalink":"/react-native-reanimated/docs/advanced/setNativeProps"}},{"id":"advanced/makeMutable","title":"makeMutable","description":"The usage of makeMutable is discouraged in most cases. It\'s recommended to use the useSharedValue hook instead unless you know what you\'re doing and you are aware of the consequences (see the Remarks section).","source":"@site/docs/advanced/makeMutable.mdx","sourceDirName":"advanced","slug":"/advanced/makeMutable","permalink":"/react-native-reanimated/docs/advanced/makeMutable","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/makeMutable.mdx","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"setNativeProps","permalink":"/react-native-reanimated/docs/advanced/setNativeProps"},"next":{"title":"Debugging","permalink":"/react-native-reanimated/docs/category/debugging"}},{"id":"advanced/measure","title":"measure","description":"measure lets you synchronously get the dimensions and position of a view on the screen, all on the UI thread.","source":"@site/docs/advanced/measure.mdx","sourceDirName":"advanced","slug":"/advanced/measure","permalink":"/react-native-reanimated/docs/advanced/measure","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/measure.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Advanced APIs","permalink":"/react-native-reanimated/docs/category/advanced-apis"},"next":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/advanced/useAnimatedReaction"}},{"id":"advanced/setNativeProps","title":"setNativeProps","description":"setNativeProps lets you imperatively update component properties.","source":"@site/docs/advanced/setNativeProps.mdx","sourceDirName":"advanced","slug":"/advanced/setNativeProps","permalink":"/react-native-reanimated/docs/advanced/setNativeProps","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/setNativeProps.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"dispatchCommand","permalink":"/react-native-reanimated/docs/advanced/dispatchCommand"},"next":{"title":"makeMutable","permalink":"/react-native-reanimated/docs/advanced/makeMutable"}},{"id":"advanced/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction allows you to respond to changes in a shared value. It\'s especially useful when comparing values previously stored in the shared value with the current one.","source":"@site/docs/advanced/useAnimatedReaction.mdx","sourceDirName":"advanced","slug":"/advanced/useAnimatedReaction","permalink":"/react-native-reanimated/docs/advanced/useAnimatedReaction","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useAnimatedReaction.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"measure","permalink":"/react-native-reanimated/docs/advanced/measure"},"next":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/advanced/useFrameCallback"}},{"id":"advanced/useComposedEventHandler","title":"useComposedEventHandler","description":"This is a hook that lets you compose useEvent-based event handlers (such as useAnimatedScrollHandler or your own custom ones) into a single, combined event handler.","source":"@site/docs/advanced/useComposedEventHandler.mdx","sourceDirName":"advanced","slug":"/advanced/useComposedEventHandler","permalink":"/react-native-reanimated/docs/advanced/useComposedEventHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useComposedEventHandler.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"useHandler","permalink":"/react-native-reanimated/docs/advanced/useHandler"},"next":{"title":"dispatchCommand","permalink":"/react-native-reanimated/docs/advanced/dispatchCommand"}},{"id":"advanced/useEvent","title":"useEvent","description":"useEvent is a low-level hook. It returns an event handler that will be called when a native event occurs. You can use it to create custom event handler hooks, like useScrollOffset or useAnimatedScrollHandler.","source":"@site/docs/advanced/useEvent.mdx","sourceDirName":"advanced","slug":"/advanced/useEvent","permalink":"/react-native-reanimated/docs/advanced/useEvent","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useEvent.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/advanced/useFrameCallback"},"next":{"title":"useHandler","permalink":"/react-native-reanimated/docs/advanced/useHandler"}},{"id":"advanced/useFrameCallback","title":"useFrameCallback","description":"useFrameCallback lets you run a function on every frame update.","source":"@site/docs/advanced/useFrameCallback.mdx","sourceDirName":"advanced","slug":"/advanced/useFrameCallback","permalink":"/react-native-reanimated/docs/advanced/useFrameCallback","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useFrameCallback.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/advanced/useAnimatedReaction"},"next":{"title":"useEvent","permalink":"/react-native-reanimated/docs/advanced/useEvent"}},{"id":"advanced/useHandler","title":"useHandler","description":"useHandler is a low-level hook. It returns a context object and a value that tells you if the worklet needs to be rebuilt. You can use it to create custom event handler hooks, like useScrollOffset or useAnimatedScrollHandler.","source":"@site/docs/advanced/useHandler.mdx","sourceDirName":"advanced","slug":"/advanced/useHandler","permalink":"/react-native-reanimated/docs/advanced/useHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/advanced/useHandler.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"useEvent","permalink":"/react-native-reanimated/docs/advanced/useEvent"},"next":{"title":"useComposedEventHandler","permalink":"/react-native-reanimated/docs/advanced/useComposedEventHandler"}},{"id":"animations/withClamp","title":"withClamp","description":"withClamp is an animation modifier that lets you limit the scope of movement of your animation to make it stay within some predefined range.","source":"@site/docs/animations/withClamp.mdx","sourceDirName":"animations","slug":"/animations/withClamp","permalink":"/react-native-reanimated/docs/animations/withClamp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withClamp.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"withDelay","permalink":"/react-native-reanimated/docs/animations/withDelay"},"next":{"title":"Core","permalink":"/react-native-reanimated/docs/category/core"}},{"id":"animations/withDecay","title":"withDecay","description":"withDecay lets you create animations that mimic objects in motion with friction. The animation will start with the provided velocity and slow down over time according to the given deceleration rate until it stops.","source":"@site/docs/animations/withDecay.mdx","sourceDirName":"animations","slug":"/animations/withDecay","permalink":"/react-native-reanimated/docs/animations/withDecay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withDecay.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"withSpring","permalink":"/react-native-reanimated/docs/animations/withSpring"},"next":{"title":"withSequence","permalink":"/react-native-reanimated/docs/animations/withSequence"}},{"id":"animations/withDelay","title":"withDelay","description":"withDelay is an animation modifier that lets you start an animation with a delay.","source":"@site/docs/animations/withDelay.mdx","sourceDirName":"animations","slug":"/animations/withDelay","permalink":"/react-native-reanimated/docs/animations/withDelay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withDelay.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/animations/withRepeat"},"next":{"title":"withClamp","permalink":"/react-native-reanimated/docs/animations/withClamp"}},{"id":"animations/withRepeat","title":"withRepeat","description":"withRepeat is an animation modifier that lets you repeat an animation given number of times or run it indefinitely.","source":"@site/docs/animations/withRepeat.mdx","sourceDirName":"animations","slug":"/animations/withRepeat","permalink":"/react-native-reanimated/docs/animations/withRepeat","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withRepeat.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"withSequence","permalink":"/react-native-reanimated/docs/animations/withSequence"},"next":{"title":"withDelay","permalink":"/react-native-reanimated/docs/animations/withDelay"}},{"id":"animations/withSequence","title":"withSequence","description":"withSequence is an animation modifier that lets you run animations in a sequence.","source":"@site/docs/animations/withSequence.mdx","sourceDirName":"animations","slug":"/animations/withSequence","permalink":"/react-native-reanimated/docs/animations/withSequence","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withSequence.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"withDecay","permalink":"/react-native-reanimated/docs/animations/withDecay"},"next":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/animations/withRepeat"}},{"id":"animations/withSpring","title":"withSpring","description":"withSpring lets you create spring-based animations.","source":"@site/docs/animations/withSpring.mdx","sourceDirName":"animations","slug":"/animations/withSpring","permalink":"/react-native-reanimated/docs/animations/withSpring","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withSpring.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"withTiming","permalink":"/react-native-reanimated/docs/animations/withTiming"},"next":{"title":"withDecay","permalink":"/react-native-reanimated/docs/animations/withDecay"}},{"id":"animations/withTiming","title":"withTiming","description":"withTiming lets you create an animation based on duration and easing.","source":"@site/docs/animations/withTiming.mdx","sourceDirName":"animations","slug":"/animations/withTiming","permalink":"/react-native-reanimated/docs/animations/withTiming","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/animations/withTiming.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Animations","permalink":"/react-native-reanimated/docs/category/animations"},"next":{"title":"withSpring","permalink":"/react-native-reanimated/docs/animations/withSpring"}},{"id":"core/cancelAnimation","title":"cancelAnimation","description":"cancelAnimation lets you cancel a running animation paired to a shared value.","source":"@site/docs/core/cancelAnimation.mdx","sourceDirName":"core","slug":"/core/cancelAnimation","permalink":"/react-native-reanimated/docs/core/cancelAnimation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/cancelAnimation.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"createAnimatedComponent","permalink":"/react-native-reanimated/docs/core/createAnimatedComponent"},"next":{"title":"Scroll","permalink":"/react-native-reanimated/docs/category/scroll"}},{"id":"core/createAnimatedComponent","title":"createAnimatedComponent","description":"createAnimatedComponent lets you create an Animated version of any React Native component. Wrapping a component with createAnimatedComponent allows Reanimated to animate any prop or style associated with that component.","source":"@site/docs/core/createAnimatedComponent.mdx","sourceDirName":"core","slug":"/core/createAnimatedComponent","permalink":"/react-native-reanimated/docs/core/createAnimatedComponent","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/createAnimatedComponent.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/core/useDerivedValue"},"next":{"title":"cancelAnimation","permalink":"/react-native-reanimated/docs/core/cancelAnimation"}},{"id":"core/useAnimatedProps","title":"useAnimatedProps","description":"useAnimatedProps lets you create an animated props object which can be animated using shared values. This object is used to animate properties of third-party components.","source":"@site/docs/core/useAnimatedProps.mdx","sourceDirName":"core","slug":"/core/useAnimatedProps","permalink":"/react-native-reanimated/docs/core/useAnimatedProps","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/useAnimatedProps.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/core/useAnimatedStyle"},"next":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/core/useAnimatedRef"}},{"id":"core/useAnimatedRef","title":"useAnimatedRef","description":"useAnimatedRef lets you get a reference of a view. Used alongside measure, scrollTo, and useScrollOffset functions.","source":"@site/docs/core/useAnimatedRef.mdx","sourceDirName":"core","slug":"/core/useAnimatedRef","permalink":"/react-native-reanimated/docs/core/useAnimatedRef","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/useAnimatedRef.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/core/useAnimatedProps"},"next":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/core/useDerivedValue"}},{"id":"core/useAnimatedStyle","title":"useAnimatedStyle","description":"useAnimatedStyle lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.","source":"@site/docs/core/useAnimatedStyle.mdx","sourceDirName":"core","slug":"/core/useAnimatedStyle","permalink":"/react-native-reanimated/docs/core/useAnimatedStyle","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/useAnimatedStyle.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"useSharedValue","permalink":"/react-native-reanimated/docs/core/useSharedValue"},"next":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/core/useAnimatedProps"}},{"id":"core/useDerivedValue","title":"useDerivedValue","description":"useDerivedValue lets you create new shared values based on existing ones while keeping them reactive.","source":"@site/docs/core/useDerivedValue.mdx","sourceDirName":"core","slug":"/core/useDerivedValue","permalink":"/react-native-reanimated/docs/core/useDerivedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/useDerivedValue.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/core/useAnimatedRef"},"next":{"title":"createAnimatedComponent","permalink":"/react-native-reanimated/docs/core/createAnimatedComponent"}},{"id":"core/useSharedValue","title":"useSharedValue","description":"useSharedValue lets you define shared values in your components.","source":"@site/docs/core/useSharedValue.mdx","sourceDirName":"core","slug":"/core/useSharedValue","permalink":"/react-native-reanimated/docs/core/useSharedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/core/useSharedValue.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Core","permalink":"/react-native-reanimated/docs/category/core"},"next":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/core/useAnimatedStyle"}},{"id":"css-animations/animation-delay","title":"animationDelay","description":"animationDelay lets you specify the length of time to wait before animation starts. Defaults to 0.","source":"@site/docs/css-animations/animation-delay.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-delay","permalink":"/react-native-reanimated/docs/css-animations/animation-delay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-delay.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"animationDuration","permalink":"/react-native-reanimated/docs/css-animations/animation-duration"},"next":{"title":"animationTimingFunction","permalink":"/react-native-reanimated/docs/css-animations/animation-timing-function"}},{"id":"css-animations/animation-direction","title":"animationDirection","description":"animationDirection lets you specify which direction the animation should run. Defaults to normal.","source":"@site/docs/css-animations/animation-direction.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-direction","permalink":"/react-native-reanimated/docs/css-animations/animation-direction","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-direction.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"animationTimingFunction","permalink":"/react-native-reanimated/docs/css-animations/animation-timing-function"},"next":{"title":"animationIterationCount","permalink":"/react-native-reanimated/docs/css-animations/animation-iteration-count"}},{"id":"css-animations/animation-duration","title":"animationDuration","description":"animationDuration lets you specify the length of time the animation lasts. Defaults to 0.","source":"@site/docs/css-animations/animation-duration.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-duration","permalink":"/react-native-reanimated/docs/css-animations/animation-duration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-duration.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"animationName","permalink":"/react-native-reanimated/docs/css-animations/animation-name"},"next":{"title":"animationDelay","permalink":"/react-native-reanimated/docs/css-animations/animation-delay"}},{"id":"css-animations/animation-fill-mode","title":"animationFillMode","description":"animationFillMode lets you specify how the computed styles will be persisted before the animation runs and after it finishes. Defaults to none.","source":"@site/docs/css-animations/animation-fill-mode.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-fill-mode","permalink":"/react-native-reanimated/docs/css-animations/animation-fill-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-fill-mode.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"animationIterationCount","permalink":"/react-native-reanimated/docs/css-animations/animation-iteration-count"},"next":{"title":"animationPlayState","permalink":"/react-native-reanimated/docs/css-animations/animation-play-state"}},{"id":"css-animations/animation-iteration-count","title":"animationIterationCount","description":"animationIterationCount lets you repeat an animation given number of times or run it indefinitely. Default to 1.","source":"@site/docs/css-animations/animation-iteration-count.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-iteration-count","permalink":"/react-native-reanimated/docs/css-animations/animation-iteration-count","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-iteration-count.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"animationDirection","permalink":"/react-native-reanimated/docs/css-animations/animation-direction"},"next":{"title":"animationFillMode","permalink":"/react-native-reanimated/docs/css-animations/animation-fill-mode"}},{"id":"css-animations/animation-name","title":"animationName","description":"animationName lets you specify keyframes for the animation.","source":"@site/docs/css-animations/animation-name.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-name","permalink":"/react-native-reanimated/docs/css-animations/animation-name","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-name.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"CSS Animations","permalink":"/react-native-reanimated/docs/category/css-animations"},"next":{"title":"animationDuration","permalink":"/react-native-reanimated/docs/css-animations/animation-duration"}},{"id":"css-animations/animation-play-state","title":"animationPlayState","description":"animationPlayState lets you play and pause the animation. Defaults to running.","source":"@site/docs/css-animations/animation-play-state.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-play-state","permalink":"/react-native-reanimated/docs/css-animations/animation-play-state","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-play-state.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"animationFillMode","permalink":"/react-native-reanimated/docs/css-animations/animation-fill-mode"},"next":{"title":"Animations","permalink":"/react-native-reanimated/docs/category/animations"}},{"id":"css-animations/animation-timing-function","title":"animationTimingFunction","description":"animationTimingFunction lets you adjust how intermediate values are calculated during the transition. It can be specified for the entire animation or for each keyframe separately. Defaults to ease.","source":"@site/docs/css-animations/animation-timing-function.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-timing-function","permalink":"/react-native-reanimated/docs/css-animations/animation-timing-function","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-animations/animation-timing-function.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"animationDelay","permalink":"/react-native-reanimated/docs/css-animations/animation-delay"},"next":{"title":"animationDirection","permalink":"/react-native-reanimated/docs/css-animations/animation-direction"}},{"id":"css-transitions/transition-behavior","title":"transitionBehavior","description":"transitionBehavior lets you determine whether the transition is applied to discrete properties. Defaults to normal which transitions only continuous properties and discards discrete properties.","source":"@site/docs/css-transitions/transition-behavior.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-behavior","permalink":"/react-native-reanimated/docs/css-transitions/transition-behavior","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-behavior.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"transitionTimingFunction","permalink":"/react-native-reanimated/docs/css-transitions/transition-timing-function"},"next":{"title":"CSS Animations","permalink":"/react-native-reanimated/docs/category/css-animations"}},{"id":"css-transitions/transition-delay","title":"transitionDelay","description":"transitionDelay lets you specify the length of time to wait before transition starts. Defaults to 0.","source":"@site/docs/css-transitions/transition-delay.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-delay","permalink":"/react-native-reanimated/docs/css-transitions/transition-delay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-delay.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"transitionDuration","permalink":"/react-native-reanimated/docs/css-transitions/transition-duration"},"next":{"title":"transitionTimingFunction","permalink":"/react-native-reanimated/docs/css-transitions/transition-timing-function"}},{"id":"css-transitions/transition-duration","title":"transitionDuration","description":"transitionDuration lets you specify the length of time the transition lasts. Defaults to 0.","source":"@site/docs/css-transitions/transition-duration.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-duration","permalink":"/react-native-reanimated/docs/css-transitions/transition-duration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-duration.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"transitionProperty","permalink":"/react-native-reanimated/docs/css-transitions/transition-property"},"next":{"title":"transitionDelay","permalink":"/react-native-reanimated/docs/css-transitions/transition-delay"}},{"id":"css-transitions/transition-property","title":"transitionProperty","description":"transitionProperty lets you specify the name or names of styles properties to transition.","source":"@site/docs/css-transitions/transition-property.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-property","permalink":"/react-native-reanimated/docs/css-transitions/transition-property","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-property.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"CSS Transitions","permalink":"/react-native-reanimated/docs/category/css-transitions"},"next":{"title":"transitionDuration","permalink":"/react-native-reanimated/docs/css-transitions/transition-duration"}},{"id":"css-transitions/transition-timing-function","title":"transitionTimingFunction","description":"transitionTimingFunction lets you adjust how intermediate values are calculated during the transition. Defaults to ease.","source":"@site/docs/css-transitions/transition-timing-function.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-timing-function","permalink":"/react-native-reanimated/docs/css-transitions/transition-timing-function","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-timing-function.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"transitionDelay","permalink":"/react-native-reanimated/docs/css-transitions/transition-delay"},"next":{"title":"transitionBehavior","permalink":"/react-native-reanimated/docs/css-transitions/transition-behavior"}},{"id":"debugging/accurate-call-stacks","title":"Accurate Call Stacks","description":"When debugging Reanimated code, you may encounter error or warning call stacks that don\'t clearly indicate the root cause of the problem. These stacks can be misleading, as they often highlight code from Reanimated\'s internals rather than the misuse of the Reanimated API that is the source of the problem.","source":"@site/docs/debugging/accurate-call-stacks.mdx","sourceDirName":"debugging","slug":"/debugging/accurate-call-stacks","permalink":"/react-native-reanimated/docs/debugging/accurate-call-stacks","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/debugging/accurate-call-stacks.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"accurate-call-stacks","sidebar_label":"Accurate Call Stacks","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Debugging","permalink":"/react-native-reanimated/docs/category/debugging"},"next":{"title":"Logger configuration","permalink":"/react-native-reanimated/docs/debugging/logger-configuration"}},{"id":"debugging/logger-configuration","title":"Logger configuration","description":"Reanimated shows warnings that indicate misuses of the library API, such as modifying the shared value during component re-render. These logs can be configured to be more or less verbose.","source":"@site/docs/debugging/logger-configuration.mdx","sourceDirName":"debugging","slug":"/debugging/logger-configuration","permalink":"/react-native-reanimated/docs/debugging/logger-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/debugging/logger-configuration.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"logger-configuration","sidebar_label":"Logger configuration","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Accurate Call Stacks","permalink":"/react-native-reanimated/docs/debugging/accurate-call-stacks"},"next":{"title":"Guides","permalink":"/react-native-reanimated/docs/category/guides"}},{"id":"device/ReducedMotionConfig","title":"ReducedMotionConfig","description":"ReducedMotionConfig component let\'s you change behavior in response to the device\'s reduced motion accessibility setting. By default it disables all animation when the reduced motion is enabled on a device. You can adjust it for your specific use case. You can learn more about Accessibility and useReducedMotion in Reanimated.","source":"@site/docs/device/ReducedMotionConfig.mdx","sourceDirName":"device","slug":"/device/ReducedMotionConfig","permalink":"/react-native-reanimated/docs/device/ReducedMotionConfig","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/device/ReducedMotionConfig.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"ReducedMotionConfig","title":"ReducedMotionConfig","sidebar_label":"ReducedMotionConfig","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useReducedMotion","permalink":"/react-native-reanimated/docs/device/useReducedMotion"},"next":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/category/layout-animations"}},{"id":"device/useAnimatedKeyboard","title":"useAnimatedKeyboard","description":"useAnimatedKeyboard lets you create animations based on state and height of the virtual keyboard.","source":"@site/docs/device/useAnimatedKeyboard.mdx","sourceDirName":"device","slug":"/device/useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/device/useAnimatedKeyboard","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/device/useAnimatedKeyboard.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Device","permalink":"/react-native-reanimated/docs/category/device"},"next":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/device/useAnimatedSensor"}},{"id":"device/useAnimatedSensor","title":"useAnimatedSensor","description":"useAnimatedSensor lets you create animations based on data from the device\'s sensors. You can access:","source":"@site/docs/device/useAnimatedSensor.mdx","sourceDirName":"device","slug":"/device/useAnimatedSensor","permalink":"/react-native-reanimated/docs/device/useAnimatedSensor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/device/useAnimatedSensor.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/device/useAnimatedKeyboard"},"next":{"title":"useReducedMotion","permalink":"/react-native-reanimated/docs/device/useReducedMotion"}},{"id":"device/useReducedMotion","title":"useReducedMotion","description":"useReducedMotion lets you query the reduced motion system setting. You can use it to disable animations.","source":"@site/docs/device/useReducedMotion.mdx","sourceDirName":"device","slug":"/device/useReducedMotion","permalink":"/react-native-reanimated/docs/device/useReducedMotion","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/device/useReducedMotion.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"useReducedMotion","title":"useReducedMotion","sidebar_label":"useReducedMotion","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/device/useAnimatedSensor"},"next":{"title":"ReducedMotionConfig","permalink":"/react-native-reanimated/docs/device/ReducedMotionConfig"}},{"id":"fundamentals/animating-styles-and-props","title":"Animating styles and props","description":"In the last section, we learned how to make simple animations, what shared values are and how to use them. Now, we\'ll learn a different way of passing animation styles to components. We\'ll also go over the difference between animating styles and props and how to handle them using useAnimatedStyle and useAnimatedProps.","source":"@site/docs/fundamentals/animating-styles-and-props.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/animating-styles-and-props","permalink":"/react-native-reanimated/docs/fundamentals/animating-styles-and-props","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/animating-styles-and-props.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Your First Animation","permalink":"/react-native-reanimated/docs/fundamentals/your-first-animation"},"next":{"title":"Customizing animations","permalink":"/react-native-reanimated/docs/fundamentals/customizing-animation"}},{"id":"fundamentals/applying-modifiers","title":"Applying modifiers","description":"Another way of customizing animations in Reanimated is by using animation modifiers. Reanimated comes with three built-in modifiers: withRepeat, withSequence, and withDelay.","source":"@site/docs/fundamentals/applying-modifiers.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/applying-modifiers","permalink":"/react-native-reanimated/docs/fundamentals/applying-modifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/applying-modifiers.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Customizing animations","permalink":"/react-native-reanimated/docs/fundamentals/customizing-animation"},"next":{"title":"Handling gestures","permalink":"/react-native-reanimated/docs/fundamentals/handling-gestures"}},{"id":"fundamentals/customizing-animation","title":"Customizing animations","description":"Previous section not only taught you how to use shared values in practice but also you used withSpring and withTiming functions to create animations. We think now you\'re more than ready to dive deeper into customizing animations!","source":"@site/docs/fundamentals/customizing-animation.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/customizing-animation","permalink":"/react-native-reanimated/docs/fundamentals/customizing-animation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/customizing-animation.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Animating styles and props","permalink":"/react-native-reanimated/docs/fundamentals/animating-styles-and-props"},"next":{"title":"Applying modifiers","permalink":"/react-native-reanimated/docs/fundamentals/applying-modifiers"}},{"id":"fundamentals/getting-started","title":"Getting started","description":"The goal of the Fundamentals section is to help you gain a strong foundation on the core concepts of Reanimated and give you the confidence to explore more advanced use cases on your own. This section is packed with interactive examples, code snippets and explanations. Are you ready? Let\'s dive in!","source":"@site/docs/fundamentals/getting-started.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/getting-started","permalink":"/react-native-reanimated/docs/fundamentals/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/getting-started.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentals","permalink":"/react-native-reanimated/docs/category/fundamentals"},"next":{"title":"Your First Animation","permalink":"/react-native-reanimated/docs/fundamentals/your-first-animation"}},{"id":"fundamentals/glossary","title":"Glossary of terms","description":"Animated component","source":"@site/docs/fundamentals/glossary.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/glossary","permalink":"/react-native-reanimated/docs/fundamentals/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/glossary.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Handling gestures","permalink":"/react-native-reanimated/docs/fundamentals/handling-gestures"},"next":{"title":"CSS Transitions","permalink":"/react-native-reanimated/docs/category/css-transitions"}},{"id":"fundamentals/handling-gestures","title":"Handling gestures","description":"In this section, we\'ll learn how to handle gestures with Reanimated. To achieve this, Reanimated integrates tightly with React Native Gesture Handler, another library created by Software Mansion.","source":"@site/docs/fundamentals/handling-gestures.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/handling-gestures","permalink":"/react-native-reanimated/docs/fundamentals/handling-gestures","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/handling-gestures.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Applying modifiers","permalink":"/react-native-reanimated/docs/fundamentals/applying-modifiers"},"next":{"title":"Glossary of terms","permalink":"/react-native-reanimated/docs/fundamentals/glossary"}},{"id":"fundamentals/your-first-animation","title":"Your First Animation","description":"In this section, we\'ll guide you through the basic concepts of Reanimated. If you\'re new to Reanimated, you\'re in the right hands! We\'re going to start by building a simple animation which will help you develop a basic understanding of the library. Then, in the following sections, we\'re going to build on top of this knowledge and further expand your skills. Let\'s go!","source":"@site/docs/fundamentals/your-first-animation.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/your-first-animation","permalink":"/react-native-reanimated/docs/fundamentals/your-first-animation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/fundamentals/your-first-animation.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/react-native-reanimated/docs/fundamentals/getting-started"},"next":{"title":"Animating styles and props","permalink":"/react-native-reanimated/docs/fundamentals/animating-styles-and-props"}},{"id":"guides/accessibility","title":"Accessibility","description":"In this section, we will explore how Reanimated provides support for enhanced accessibility in animations, particularly through its reduced motion functionality. This feature ensures a smoother experience for users who may have motion sensitivities or prefer less movement.","source":"@site/docs/guides/accessibility.mdx","sourceDirName":"guides","slug":"/guides/accessibility","permalink":"/react-native-reanimated/docs/guides/accessibility","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/accessibility.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Worklets","permalink":"/react-native-reanimated/docs/guides/worklets"},"next":{"title":"Building for Android on Windows","permalink":"/react-native-reanimated/docs/guides/building-on-windows"}},{"id":"guides/building-on-windows","title":"Building for Android on Windows","description":"This article provides basic troubleshooting steps for issues that may happen when building React Native apps with Reanimated for Android devices on Windows host machine.","source":"@site/docs/guides/building-for-android-on-windows.md","sourceDirName":"guides","slug":"/guides/building-on-windows","permalink":"/react-native-reanimated/docs/guides/building-on-windows","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/building-for-android-on-windows.md","tags":[],"version":"current","frontMatter":{"id":"building-on-windows","title":"Building for Android on Windows","sidebar_label":"Building for Android on Windows"},"sidebar":"tutorialSidebar","previous":{"title":"Accessibility","permalink":"/react-native-reanimated/docs/guides/accessibility"},"next":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/guides/compatibility"}},{"id":"guides/compatibility","title":"Compatibility table","description":"Reanimated 4 works only with the React Native New Architecture. If your app still uses the old architecture, you can use Reanimated in version 3 which is still actively maintained.","source":"@site/docs/guides/compatibility.mdx","sourceDirName":"guides","slug":"/guides/compatibility","permalink":"/react-native-reanimated/docs/guides/compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/compatibility.mdx","tags":[],"version":"current","frontMatter":{"id":"compatibility","sidebar_label":"Compatibility"},"sidebar":"tutorialSidebar","previous":{"title":"Building for Android on Windows","permalink":"/react-native-reanimated/docs/guides/building-on-windows"},"next":{"title":"Contributing","permalink":"/react-native-reanimated/docs/guides/contributing"}},{"id":"guides/contributing","title":"Contributing","description":"Thank you for your interest in contributing to Reanimated! From triaging and commenting on issues, through extending the documentation, to reviewing and sending Pull Requests, all contributions are more than welcome.","source":"@site/docs/guides/contributing.mdx","sourceDirName":"guides","slug":"/guides/contributing","permalink":"/react-native-reanimated/docs/guides/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/contributing.mdx","tags":[],"version":"current","frontMatter":{"id":"contributing","title":"Contributing","sidebar_label":"Contributing"},"sidebar":"tutorialSidebar","previous":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/guides/compatibility"},"next":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/guides/debugging"}},{"id":"guides/debugging","title":"Debugging worklets","description":"Due to Reanimated\'s unique architecture and usage of a second JS runtime, debugging","source":"@site/docs/guides/debugging-worklets.mdx","sourceDirName":"guides","slug":"/guides/debugging","permalink":"/react-native-reanimated/docs/guides/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/debugging-worklets.mdx","tags":[],"version":"current","frontMatter":{"id":"debugging","sidebar_label":"Debugging worklets"},"sidebar":"tutorialSidebar","previous":{"title":"Contributing","permalink":"/react-native-reanimated/docs/guides/contributing"},"next":{"title":"Feature flags","permalink":"/react-native-reanimated/docs/guides/feature-flags"}},{"id":"guides/feature-flags","title":"Feature flags","description":"Feature flags allow developers to opt-in for experimental changes or opt-out from recent changes that have already been made default. Feature flags serve as a tool for incremental rollout of new implementation without affecting the general stability of the library, allowing to gather feedback from early adopters. There are two types of feature flags: static and dynamic.","source":"@site/docs/guides/feature-flags.md","sourceDirName":"guides","slug":"/guides/feature-flags","permalink":"/react-native-reanimated/docs/guides/feature-flags","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/feature-flags.md","tags":[],"version":"current","frontMatter":{"id":"feature-flags","title":"Feature flags","sidebar_label":"Feature flags"},"sidebar":"tutorialSidebar","previous":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/guides/debugging"},"next":{"title":"Migration from 1.x","permalink":"/react-native-reanimated/docs/guides/migration-from-1.x"}},{"id":"guides/migration-from-1.x","title":"Migrating from Reanimated 1.x to 2.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","source":"@site/docs/guides/migration-from-1.x.md","sourceDirName":"guides","slug":"/guides/migration-from-1.x","permalink":"/react-native-reanimated/docs/guides/migration-from-1.x","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/migration-from-1.x.md","tags":[],"version":"current","frontMatter":{"id":"migration-from-1.x","title":"Migrating from Reanimated 1.x to 2.x","sidebar_label":"Migration from 1.x"},"sidebar":"tutorialSidebar","previous":{"title":"Feature flags","permalink":"/react-native-reanimated/docs/guides/feature-flags"},"next":{"title":"Migration from 2.x","permalink":"/react-native-reanimated/docs/guides/migration-from-2.x"}},{"id":"guides/migration-from-2.x","title":"Migrating from Reanimated 2.x to 3.x","description":"Reanimated 3.x doesn\'t introduce any breaking changes between 2.x and 3.x in terms of the API. All the code you\'ve written in Reanimated v2 API works in 3.x without any changes. However, Reanimated 3.x drops the Reanimated v1 API entirely. For the migration guide between 1.x and 2.x versions please consult Migration from 1.x to 2.x.","source":"@site/docs/guides/migration-from-2.x.md","sourceDirName":"guides","slug":"/guides/migration-from-2.x","permalink":"/react-native-reanimated/docs/guides/migration-from-2.x","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/migration-from-2.x.md","tags":[],"version":"current","frontMatter":{"id":"migration-from-2.x","title":"Migrating from Reanimated 2.x to 3.x","sidebar_label":"Migration from 2.x"},"sidebar":"tutorialSidebar","previous":{"title":"Migration from 1.x","permalink":"/react-native-reanimated/docs/guides/migration-from-1.x"},"next":{"title":"Migration from 3.x","permalink":"/react-native-reanimated/docs/guides/migration-from-3.x"}},{"id":"guides/migration-from-3.x","title":"Migrating from Reanimated 3.x to 4.x","description":"Breaking changes","source":"@site/docs/guides/migration-from-3.x.md","sourceDirName":"guides","slug":"/guides/migration-from-3.x","permalink":"/react-native-reanimated/docs/guides/migration-from-3.x","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/migration-from-3.x.md","tags":[],"version":"current","frontMatter":{"id":"migration-from-3.x","title":"Migrating from Reanimated 3.x to 4.x","sidebar_label":"Migration from 3.x"},"sidebar":"tutorialSidebar","previous":{"title":"Migration from 2.x","permalink":"/react-native-reanimated/docs/guides/migration-from-2.x"},"next":{"title":"Performance","permalink":"/react-native-reanimated/docs/guides/performance"}},{"id":"guides/performance","title":"Performance","description":"This guide covers best practices and tips to achieve the best performance with Reanimated.","source":"@site/docs/guides/performance.md","sourceDirName":"guides","slug":"/guides/performance","permalink":"/react-native-reanimated/docs/guides/performance","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/performance.md","tags":[],"version":"current","frontMatter":{"id":"performance","title":"Performance","sidebar_label":"Performance"},"sidebar":"tutorialSidebar","previous":{"title":"Migration from 3.x","permalink":"/react-native-reanimated/docs/guides/migration-from-3.x"},"next":{"title":"Supported style properties","permalink":"/react-native-reanimated/docs/guides/supported-properties"}},{"id":"guides/supported-properties","title":"Supported style properties","description":"Not all CSS properties are available and animatable in React Native. The following table describes which style properties can be animated on which platform.","source":"@site/docs/guides/supported-properties.mdx","sourceDirName":"guides","slug":"/guides/supported-properties","permalink":"/react-native-reanimated/docs/guides/supported-properties","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/supported-properties.mdx","tags":[],"version":"current","frontMatter":{"id":"supported-properties"},"sidebar":"tutorialSidebar","previous":{"title":"Performance","permalink":"/react-native-reanimated/docs/guides/performance"},"next":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/guides/testing"}},{"id":"guides/testing","title":"Testing with Jest","description":"Reanimated provides testing API, based on Jest. It allows user to mock web-based animations.","source":"@site/docs/guides/testing-with-jest.mdx","sourceDirName":"guides","slug":"/guides/testing","permalink":"/react-native-reanimated/docs/guides/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/testing-with-jest.mdx","tags":[],"version":"current","frontMatter":{"id":"testing","sidebar_label":"Testing with Jest"},"sidebar":"tutorialSidebar","previous":{"title":"Supported style properties","permalink":"/react-native-reanimated/docs/guides/supported-properties"},"next":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/guides/troubleshooting"}},{"id":"guides/troubleshooting","title":"Troubleshooting","description":"Initialization issues","source":"@site/docs/guides/troubleshooting.mdx","sourceDirName":"guides","slug":"/guides/troubleshooting","permalink":"/react-native-reanimated/docs/guides/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/troubleshooting.mdx","tags":[],"version":"current","frontMatter":{"id":"troubleshooting","title":"Troubleshooting","sidebar_label":"Troubleshooting"},"sidebar":"tutorialSidebar","previous":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/guides/testing"},"next":{"title":"Web Support","permalink":"/react-native-reanimated/docs/guides/web-support"}},{"id":"guides/web-support","title":"Web Support","description":"It\'s possible to launch Reanimated in a web browser. For that case all of the functionalities are implemented purely in JavaScript, hence the efficiency of the animations might be lower.","source":"@site/docs/guides/web-support.mdx","sourceDirName":"guides","slug":"/guides/web-support","permalink":"/react-native-reanimated/docs/guides/web-support","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/web-support.mdx","tags":[],"version":"current","frontMatter":{"id":"web-support","title":"Web Support","sidebar_label":"Web Support"},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/guides/troubleshooting"},"next":{"title":"Reanimated Babel plugin","permalink":"/react-native-reanimated/docs/category/reanimated-babel-plugin"}},{"id":"guides/worklets","title":"Worklets","description":"Worklets are short-running JavaScript functions that can run on the UI thread. Reanimated uses worklets to calculate view styles and react to events on the UI thread.","source":"@site/docs/guides/worklets.mdx","sourceDirName":"guides","slug":"/guides/worklets","permalink":"/react-native-reanimated/docs/guides/worklets","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/guides/worklets.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"worklets","sidebar_label":"Worklets","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Guides","permalink":"/react-native-reanimated/docs/category/guides"},"next":{"title":"Accessibility","permalink":"/react-native-reanimated/docs/guides/accessibility"}},{"id":"layout-animations/custom-animations","title":"Custom animations","description":"Custom animations give you a full control over the Entering/Exiting animations and Layout transitions. However, they tend to be hard to understand and maintain. We recommend starting with predefined Entering/Exiting, Keyframes and Layout presets first before using custom animations.","source":"@site/docs/layout-animations/custom-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/custom-animations","permalink":"/react-native-reanimated/docs/layout-animations/custom-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/custom-animations.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Layout transitions","permalink":"/react-native-reanimated/docs/layout-animations/layout-transitions"},"next":{"title":"Skipping Layout Animations","permalink":"/react-native-reanimated/docs/layout-animations/layout-animation-config"}},{"id":"layout-animations/entering-exiting-animations","title":"Entering/Exiting animations","description":"Entering/Exiting animations let you animate elements when they are added to or removed from the view hierarchy.","source":"@site/docs/layout-animations/entering-exiting-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/entering-exiting-animations","permalink":"/react-native-reanimated/docs/layout-animations/entering-exiting-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/entering-exiting-animations.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/category/layout-animations"},"next":{"title":"Keyframe animations","permalink":"/react-native-reanimated/docs/layout-animations/keyframe-animations"}},{"id":"layout-animations/keyframe-animations","title":"Keyframe animations","description":"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets.","source":"@site/docs/layout-animations/keyframe-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/keyframe-animations","permalink":"/react-native-reanimated/docs/layout-animations/keyframe-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/keyframe-animations.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Entering/Exiting animations","permalink":"/react-native-reanimated/docs/layout-animations/entering-exiting-animations"},"next":{"title":"Layout transitions","permalink":"/react-native-reanimated/docs/layout-animations/layout-transitions"}},{"id":"layout-animations/layout-animation-config","title":"LayoutAnimationConfig","description":"LayoutAnimationConfig is a component that lets you skip entering and exiting animations.","source":"@site/docs/layout-animations/layout-animation-config.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/layout-animation-config","permalink":"/react-native-reanimated/docs/layout-animations/layout-animation-config","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/layout-animation-config.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"LayoutAnimationConfig","sidebar_label":"Skipping Layout Animations"},"sidebar":"tutorialSidebar","previous":{"title":"Custom animations","permalink":"/react-native-reanimated/docs/layout-animations/custom-animations"},"next":{"title":"List Layout Animations","permalink":"/react-native-reanimated/docs/layout-animations/list-layout-animations"}},{"id":"layout-animations/layout-transitions","title":"Layout transitions","description":"Layout transitions allows you to replace layout changes with smooth transitions. Each layout change may include changes of size and position and both of them can be animated.","source":"@site/docs/layout-animations/layout-transitions.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/layout-transitions","permalink":"/react-native-reanimated/docs/layout-animations/layout-transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/layout-transitions.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Keyframe animations","permalink":"/react-native-reanimated/docs/layout-animations/keyframe-animations"},"next":{"title":"Custom animations","permalink":"/react-native-reanimated/docs/layout-animations/custom-animations"}},{"id":"layout-animations/list-layout-animations","title":"List Layout Animations","description":"itemLayoutAnimation lets you define a layout transition that\'s applied when list items layout changes. You can use one of the predefined transitions like LinearTransition or create your own transition.","source":"@site/docs/layout-animations/list-layout-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/list-layout-animations","permalink":"/react-native-reanimated/docs/layout-animations/list-layout-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/layout-animations/list-layout-animations.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"List Layout Animations","sidebar_label":"List Layout Animations"},"sidebar":"tutorialSidebar","previous":{"title":"Skipping Layout Animations","permalink":"/react-native-reanimated/docs/layout-animations/layout-animation-config"},"next":{"title":"Utilities","permalink":"/react-native-reanimated/docs/category/utilities"}},{"id":"reanimated-babel-plugin/about","title":"About","description":"What is Reanimated Babel Plugin?","source":"@site/docs/reanimated-babel-plugin/about.md","sourceDirName":"reanimated-babel-plugin","slug":"/reanimated-babel-plugin/about","permalink":"/react-native-reanimated/docs/reanimated-babel-plugin/about","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/reanimated-babel-plugin/about.md","tags":[],"version":"current","frontMatter":{"id":"about","title":"About","sidebar_label":"About"},"sidebar":"tutorialSidebar","previous":{"title":"Reanimated Babel plugin","permalink":"/react-native-reanimated/docs/category/reanimated-babel-plugin"},"next":{"title":"Options","permalink":"/react-native-reanimated/docs/reanimated-babel-plugin/plugin-options"}},{"id":"reanimated-babel-plugin/plugin-options","title":"Options","description":"Our plugin offers several optional functionalities that you may need to employ advanced APIs:","source":"@site/docs/reanimated-babel-plugin/options.md","sourceDirName":"reanimated-babel-plugin","slug":"/reanimated-babel-plugin/plugin-options","permalink":"/react-native-reanimated/docs/reanimated-babel-plugin/plugin-options","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/reanimated-babel-plugin/options.md","tags":[],"version":"current","frontMatter":{"id":"plugin-options","title":"Options","sidebar_label":"Options"},"sidebar":"tutorialSidebar","previous":{"title":"About","permalink":"/react-native-reanimated/docs/reanimated-babel-plugin/about"}},{"id":"scroll/scrollTo","title":"scrollTo","description":"scrollTo lets you synchronously scroll to a given X or Y offset.","source":"@site/docs/scroll/scrollTo.mdx","sourceDirName":"scroll","slug":"/scroll/scrollTo","permalink":"/react-native-reanimated/docs/scroll/scrollTo","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/scroll/scrollTo.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Scroll","permalink":"/react-native-reanimated/docs/category/scroll"},"next":{"title":"useScrollOffset","permalink":"/react-native-reanimated/docs/scroll/useScrollOffset"}},{"id":"scroll/useAnimatedScrollHandler","title":"useAnimatedScrollHandler","description":"useAnimatedScrollHandler is a hook that returns an event handler reference. It can be used with React Native\'s scrollable components.","source":"@site/docs/scroll/useAnimatedScrollHandler.mdx","sourceDirName":"scroll","slug":"/scroll/useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/scroll/useAnimatedScrollHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/scroll/useAnimatedScrollHandler.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useScrollOffset","permalink":"/react-native-reanimated/docs/scroll/useScrollOffset"},"next":{"title":"Device","permalink":"/react-native-reanimated/docs/category/device"}},{"id":"scroll/useScrollOffset","title":"useScrollOffset","description":"useScrollOffset lets you to create animations based on the offset of a scrollable component (e.g. ScrollView, FlatList, FlashList).","source":"@site/docs/scroll/useScrollOffset.mdx","sourceDirName":"scroll","slug":"/scroll/useScrollOffset","permalink":"/react-native-reanimated/docs/scroll/useScrollOffset","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/scroll/useScrollOffset.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"scrollTo","permalink":"/react-native-reanimated/docs/scroll/scrollTo"},"next":{"title":"useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/scroll/useAnimatedScrollHandler"}},{"id":"utilities/clamp","title":"clamp","description":"clamp lets you limit a value within a specified range.","source":"@site/docs/utilities/clamp.mdx","sourceDirName":"utilities","slug":"/utilities/clamp","permalink":"/react-native-reanimated/docs/utilities/clamp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/utilities/clamp.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"interpolate","permalink":"/react-native-reanimated/docs/utilities/interpolate"},"next":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/utilities/interpolateColor"}},{"id":"utilities/DynamicColorIOS","title":"DynamicColorIOS","description":"DynamicColorIOS is a workletized version of a React Native\'s DynamicColorIOS, designed to be used within Reanimated. It\'s a way to define colors that automatically adapt to light and dark mode on iOS.","source":"@site/docs/utilities/DynamicColorIOS.mdx","sourceDirName":"utilities","slug":"/utilities/DynamicColorIOS","permalink":"/react-native-reanimated/docs/utilities/DynamicColorIOS","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/utilities/DynamicColorIOS.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/utilities/getRelativeCoords"},"next":{"title":"Advanced APIs","permalink":"/react-native-reanimated/docs/category/advanced-apis"}},{"id":"utilities/getRelativeCoords","title":"getRelativeCoords","description":"getRelativeCoords determines the location on the screen, relative to the given view.","source":"@site/docs/utilities/getRelativeCoords.mdx","sourceDirName":"utilities","slug":"/utilities/getRelativeCoords","permalink":"/react-native-reanimated/docs/utilities/getRelativeCoords","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/utilities/getRelativeCoords.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/utilities/interpolateColor"},"next":{"title":"DynamicColorIOS","permalink":"/react-native-reanimated/docs/utilities/DynamicColorIOS"}},{"id":"utilities/interpolate","title":"interpolate","description":"interpolate lets you map a value from one range to another using linear interpolation.","source":"@site/docs/utilities/interpolate.mdx","sourceDirName":"utilities","slug":"/utilities/interpolate","permalink":"/react-native-reanimated/docs/utilities/interpolate","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/utilities/interpolate.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Utilities","permalink":"/react-native-reanimated/docs/category/utilities"},"next":{"title":"clamp","permalink":"/react-native-reanimated/docs/utilities/clamp"}},{"id":"utilities/interpolateColor","title":"interpolateColor","description":"interpolateColor maps input range to output colors using linear interpolation.","source":"@site/docs/utilities/interpolateColor.mdx","sourceDirName":"utilities","slug":"/utilities/interpolateColor","permalink":"/react-native-reanimated/docs/utilities/interpolateColor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/utilities/interpolateColor.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"clamp","permalink":"/react-native-reanimated/docs/utilities/clamp"},"next":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/utilities/getRelativeCoords"}}],"drafts":[],"sidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"fundamentals/getting-started"},{"type":"doc","id":"fundamentals/your-first-animation"},{"type":"doc","id":"fundamentals/animating-styles-and-props"},{"type":"doc","id":"fundamentals/customizing-animation"},{"type":"doc","id":"fundamentals/applying-modifiers"},{"type":"doc","id":"fundamentals/handling-gestures"},{"type":"doc","id":"fundamentals/glossary"}],"link":{"type":"generated-index","slug":"/category/fundamentals","permalink":"/react-native-reanimated/docs/category/fundamentals"}},{"type":"category","label":"CSS Transitions","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"css-transitions/transition-property"},{"type":"doc","id":"css-transitions/transition-duration"},{"type":"doc","id":"css-transitions/transition-delay"},{"type":"doc","id":"css-transitions/transition-timing-function"},{"type":"doc","id":"css-transitions/transition-behavior"}],"link":{"type":"generated-index","slug":"/category/css-transitions","permalink":"/react-native-reanimated/docs/category/css-transitions"}},{"type":"category","label":"CSS Animations","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"css-animations/animation-name"},{"type":"doc","id":"css-animations/animation-duration"},{"type":"doc","id":"css-animations/animation-delay"},{"type":"doc","id":"css-animations/animation-timing-function"},{"type":"doc","id":"css-animations/animation-direction"},{"type":"doc","id":"css-animations/animation-iteration-count"},{"type":"doc","id":"css-animations/animation-fill-mode"},{"type":"doc","id":"css-animations/animation-play-state"}],"link":{"type":"generated-index","slug":"/category/css-animations","permalink":"/react-native-reanimated/docs/category/css-animations"}},{"type":"category","label":"Animations","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"animations/withTiming"},{"type":"doc","id":"animations/withSpring"},{"type":"doc","id":"animations/withDecay"},{"type":"doc","id":"animations/withSequence"},{"type":"doc","id":"animations/withRepeat"},{"type":"doc","id":"animations/withDelay"},{"type":"doc","id":"animations/withClamp"}],"link":{"type":"generated-index","slug":"/category/animations","permalink":"/react-native-reanimated/docs/category/animations"}},{"type":"category","label":"Core","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"core/useSharedValue"},{"type":"doc","id":"core/useAnimatedStyle"},{"type":"doc","id":"core/useAnimatedProps"},{"type":"doc","id":"core/useAnimatedRef"},{"type":"doc","id":"core/useDerivedValue"},{"type":"doc","id":"core/createAnimatedComponent"},{"type":"doc","id":"core/cancelAnimation"}],"link":{"type":"generated-index","slug":"/category/core","permalink":"/react-native-reanimated/docs/category/core"}},{"type":"category","label":"Scroll","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"scroll/scrollTo"},{"type":"doc","id":"scroll/useScrollOffset"},{"type":"doc","id":"scroll/useAnimatedScrollHandler"}],"link":{"type":"generated-index","slug":"/category/scroll","permalink":"/react-native-reanimated/docs/category/scroll"}},{"type":"category","label":"Device","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"device/useAnimatedKeyboard"},{"type":"doc","id":"device/useAnimatedSensor"},{"type":"doc","id":"device/useReducedMotion","label":"useReducedMotion"},{"type":"doc","id":"device/ReducedMotionConfig","label":"ReducedMotionConfig"}],"link":{"type":"generated-index","slug":"/category/device","permalink":"/react-native-reanimated/docs/category/device"}},{"type":"category","label":"Layout Animations","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"layout-animations/entering-exiting-animations"},{"type":"doc","id":"layout-animations/keyframe-animations"},{"type":"doc","id":"layout-animations/layout-transitions"},{"type":"doc","id":"layout-animations/custom-animations"},{"type":"doc","id":"layout-animations/layout-animation-config","label":"Skipping Layout Animations"},{"type":"doc","id":"layout-animations/list-layout-animations","label":"List Layout Animations"}],"link":{"type":"generated-index","slug":"/category/layout-animations","permalink":"/react-native-reanimated/docs/category/layout-animations"}},{"type":"category","label":"Utilities","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"utilities/interpolate"},{"type":"doc","id":"utilities/clamp"},{"type":"doc","id":"utilities/interpolateColor"},{"type":"doc","id":"utilities/getRelativeCoords"},{"type":"doc","id":"utilities/DynamicColorIOS"}],"link":{"type":"generated-index","slug":"/category/utilities","permalink":"/react-native-reanimated/docs/category/utilities"}},{"type":"category","label":"Advanced APIs","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"advanced/measure"},{"type":"doc","id":"advanced/useAnimatedReaction"},{"type":"doc","id":"advanced/useFrameCallback"},{"type":"doc","id":"advanced/useEvent"},{"type":"doc","id":"advanced/useHandler"},{"type":"doc","id":"advanced/useComposedEventHandler"},{"type":"doc","id":"advanced/dispatchCommand"},{"type":"doc","id":"advanced/setNativeProps"},{"type":"doc","id":"advanced/makeMutable"}],"link":{"type":"generated-index","slug":"/category/advanced-apis","permalink":"/react-native-reanimated/docs/category/advanced-apis"}},{"type":"category","label":"Debugging","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"debugging/accurate-call-stacks","label":"Accurate Call Stacks"},{"type":"doc","id":"debugging/logger-configuration","label":"Logger configuration"}],"link":{"type":"generated-index","slug":"/category/debugging","permalink":"/react-native-reanimated/docs/category/debugging"}},{"type":"category","label":"Guides","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"guides/worklets","label":"Worklets"},{"type":"doc","id":"guides/accessibility"},{"type":"doc","id":"guides/building-on-windows","label":"Building for Android on Windows"},{"type":"doc","id":"guides/compatibility","label":"Compatibility"},{"type":"doc","id":"guides/contributing","label":"Contributing"},{"type":"doc","id":"guides/debugging","label":"Debugging worklets"},{"type":"doc","id":"guides/feature-flags","label":"Feature flags"},{"type":"doc","id":"guides/migration-from-1.x","label":"Migration from 1.x"},{"type":"doc","id":"guides/migration-from-2.x","label":"Migration from 2.x"},{"type":"doc","id":"guides/migration-from-3.x","label":"Migration from 3.x"},{"type":"doc","id":"guides/performance","label":"Performance"},{"type":"doc","id":"guides/supported-properties"},{"type":"doc","id":"guides/testing","label":"Testing with Jest"},{"type":"doc","id":"guides/troubleshooting","label":"Troubleshooting"},{"type":"doc","id":"guides/web-support","label":"Web Support"}],"link":{"type":"generated-index","slug":"/category/guides","permalink":"/react-native-reanimated/docs/category/guides"}},{"type":"category","label":"Reanimated Babel plugin","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"reanimated-babel-plugin/about","label":"About"},{"type":"doc","id":"reanimated-babel-plugin/plugin-options","label":"Options"}],"link":{"type":"generated-index","slug":"/category/reanimated-babel-plugin","permalink":"/react-native-reanimated/docs/category/reanimated-babel-plugin"}}]}},{"versionName":"3.x","label":"3.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-3.x","path":"/react-native-reanimated/docs/3.x","tagsPath":"/react-native-reanimated/docs/3.x/tags","editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x","editUrlLocalized":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-3.x","isLast":false,"sidebarFilePath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_sidebars/version-3.x-sidebars.json","contentPath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_docs/version-3.x","contentPathLocalized":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-3.x","docs":[{"id":"advanced/dispatchCommand","title":"dispatchCommand","description":"dispatchCommand allows you to run commands on a native component from the UI thread directly.","source":"@site/versioned_docs/version-3.x/advanced/dispatchCommand.mdx","sourceDirName":"advanced","slug":"/advanced/dispatchCommand","permalink":"/react-native-reanimated/docs/3.x/advanced/dispatchCommand","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/dispatchCommand.mdx","tags":[],"version":"3.x","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"useComposedEventHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useComposedEventHandler"},"next":{"title":"setNativeProps","permalink":"/react-native-reanimated/docs/3.x/advanced/setNativeProps"}},{"id":"advanced/makeMutable","title":"makeMutable","description":"The usage of makeMutable is discouraged in most cases. It\'s recommended to use the useSharedValue hook instead unless you know what you\'re doing and you are aware of the consequences (see the Remarks section).","source":"@site/versioned_docs/version-3.x/advanced/makeMutable.mdx","sourceDirName":"advanced","slug":"/advanced/makeMutable","permalink":"/react-native-reanimated/docs/3.x/advanced/makeMutable","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/makeMutable.mdx","tags":[],"version":"3.x","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"setNativeProps","permalink":"/react-native-reanimated/docs/3.x/advanced/setNativeProps"},"next":{"title":"Debugging","permalink":"/react-native-reanimated/docs/3.x/category/debugging"}},{"id":"advanced/measure","title":"measure","description":"measure lets you synchronously get the dimensions and position of a view on the screen, all on the UI thread.","source":"@site/versioned_docs/version-3.x/advanced/measure.mdx","sourceDirName":"advanced","slug":"/advanced/measure","permalink":"/react-native-reanimated/docs/3.x/advanced/measure","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/measure.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Advanced APIs","permalink":"/react-native-reanimated/docs/3.x/category/advanced-apis"},"next":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/3.x/advanced/useAnimatedReaction"}},{"id":"advanced/setNativeProps","title":"setNativeProps","description":"setNativeProps lets you imperatively update component properties.","source":"@site/versioned_docs/version-3.x/advanced/setNativeProps.mdx","sourceDirName":"advanced","slug":"/advanced/setNativeProps","permalink":"/react-native-reanimated/docs/3.x/advanced/setNativeProps","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/setNativeProps.mdx","tags":[],"version":"3.x","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"dispatchCommand","permalink":"/react-native-reanimated/docs/3.x/advanced/dispatchCommand"},"next":{"title":"makeMutable","permalink":"/react-native-reanimated/docs/3.x/advanced/makeMutable"}},{"id":"advanced/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction allows you to respond to changes in a shared value. It\'s especially useful when comparing values previously stored in the shared value with the current one.","source":"@site/versioned_docs/version-3.x/advanced/useAnimatedReaction.mdx","sourceDirName":"advanced","slug":"/advanced/useAnimatedReaction","permalink":"/react-native-reanimated/docs/3.x/advanced/useAnimatedReaction","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/useAnimatedReaction.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"measure","permalink":"/react-native-reanimated/docs/3.x/advanced/measure"},"next":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/3.x/advanced/useFrameCallback"}},{"id":"advanced/useComposedEventHandler","title":"useComposedEventHandler","description":"This is a hook that lets you compose useEvent-based event handlers (such as useAnimatedScrollHandler or your own custom ones) into a single, combined event handler.","source":"@site/versioned_docs/version-3.x/advanced/useComposedEventHandler.mdx","sourceDirName":"advanced","slug":"/advanced/useComposedEventHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useComposedEventHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/useComposedEventHandler.mdx","tags":[],"version":"3.x","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"useHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useHandler"},"next":{"title":"dispatchCommand","permalink":"/react-native-reanimated/docs/3.x/advanced/dispatchCommand"}},{"id":"advanced/useEvent","title":"useEvent","description":"useEvent is a low-level hook. It returns event handler that will be called when native event occurs. You can use it to create custom event handler hooks, like useScrollViewOffset or useAnimatedScrollHandler.","source":"@site/versioned_docs/version-3.x/advanced/useEvent.mdx","sourceDirName":"advanced","slug":"/advanced/useEvent","permalink":"/react-native-reanimated/docs/3.x/advanced/useEvent","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/useEvent.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/3.x/advanced/useFrameCallback"},"next":{"title":"useHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useHandler"}},{"id":"advanced/useFrameCallback","title":"useFrameCallback","description":"useFrameCallback lets you run a function on every frame update.","source":"@site/versioned_docs/version-3.x/advanced/useFrameCallback.mdx","sourceDirName":"advanced","slug":"/advanced/useFrameCallback","permalink":"/react-native-reanimated/docs/3.x/advanced/useFrameCallback","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/useFrameCallback.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/3.x/advanced/useAnimatedReaction"},"next":{"title":"useEvent","permalink":"/react-native-reanimated/docs/3.x/advanced/useEvent"}},{"id":"advanced/useHandler","title":"useHandler","description":"useHandler is a low-level hook. It returns a context object and a value that tells you if the worklet needs to be rebuilt. You can use it to create custom event handler hooks, like useScrollViewOffset or useAnimatedScrollHandler.","source":"@site/versioned_docs/version-3.x/advanced/useHandler.mdx","sourceDirName":"advanced","slug":"/advanced/useHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/advanced/useHandler.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"useEvent","permalink":"/react-native-reanimated/docs/3.x/advanced/useEvent"},"next":{"title":"useComposedEventHandler","permalink":"/react-native-reanimated/docs/3.x/advanced/useComposedEventHandler"}},{"id":"animations/withClamp","title":"withClamp","description":"withClamp is an animation modifier that lets you limit the scope of movement of your animation to make it stay within some predefined range.","source":"@site/versioned_docs/version-3.x/animations/withClamp.mdx","sourceDirName":"animations","slug":"/animations/withClamp","permalink":"/react-native-reanimated/docs/3.x/animations/withClamp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withClamp.mdx","tags":[],"version":"3.x","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"withDelay","permalink":"/react-native-reanimated/docs/3.x/animations/withDelay"},"next":{"title":"Core","permalink":"/react-native-reanimated/docs/3.x/category/core"}},{"id":"animations/withDecay","title":"withDecay","description":"withDecay lets you create animations that mimic objects in motion with friction. The animation will start with the provided velocity and slow down over time according to the given deceleration rate until it stops.","source":"@site/versioned_docs/version-3.x/animations/withDecay.mdx","sourceDirName":"animations","slug":"/animations/withDecay","permalink":"/react-native-reanimated/docs/3.x/animations/withDecay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withDecay.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"withSpring","permalink":"/react-native-reanimated/docs/3.x/animations/withSpring"},"next":{"title":"withSequence","permalink":"/react-native-reanimated/docs/3.x/animations/withSequence"}},{"id":"animations/withDelay","title":"withDelay","description":"withDelay is an animation modifier that lets you start an animation with a delay.","source":"@site/versioned_docs/version-3.x/animations/withDelay.mdx","sourceDirName":"animations","slug":"/animations/withDelay","permalink":"/react-native-reanimated/docs/3.x/animations/withDelay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withDelay.mdx","tags":[],"version":"3.x","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/3.x/animations/withRepeat"},"next":{"title":"withClamp","permalink":"/react-native-reanimated/docs/3.x/animations/withClamp"}},{"id":"animations/withRepeat","title":"withRepeat","description":"withRepeat is an animation modifier that lets you repeat an animation given number of times or run it indefinitely.","source":"@site/versioned_docs/version-3.x/animations/withRepeat.mdx","sourceDirName":"animations","slug":"/animations/withRepeat","permalink":"/react-native-reanimated/docs/3.x/animations/withRepeat","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withRepeat.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"withSequence","permalink":"/react-native-reanimated/docs/3.x/animations/withSequence"},"next":{"title":"withDelay","permalink":"/react-native-reanimated/docs/3.x/animations/withDelay"}},{"id":"animations/withSequence","title":"withSequence","description":"withSequence is an animation modifier that lets you run animations in a sequence.","source":"@site/versioned_docs/version-3.x/animations/withSequence.mdx","sourceDirName":"animations","slug":"/animations/withSequence","permalink":"/react-native-reanimated/docs/3.x/animations/withSequence","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withSequence.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"withDecay","permalink":"/react-native-reanimated/docs/3.x/animations/withDecay"},"next":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/3.x/animations/withRepeat"}},{"id":"animations/withSpring","title":"withSpring","description":"withSpring lets you create spring-based animations.","source":"@site/versioned_docs/version-3.x/animations/withSpring.mdx","sourceDirName":"animations","slug":"/animations/withSpring","permalink":"/react-native-reanimated/docs/3.x/animations/withSpring","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withSpring.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"withTiming","permalink":"/react-native-reanimated/docs/3.x/animations/withTiming"},"next":{"title":"withDecay","permalink":"/react-native-reanimated/docs/3.x/animations/withDecay"}},{"id":"animations/withTiming","title":"withTiming","description":"withTiming lets you create an animation based on duration and easing.","source":"@site/versioned_docs/version-3.x/animations/withTiming.mdx","sourceDirName":"animations","slug":"/animations/withTiming","permalink":"/react-native-reanimated/docs/3.x/animations/withTiming","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/animations/withTiming.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Animations","permalink":"/react-native-reanimated/docs/3.x/category/animations"},"next":{"title":"withSpring","permalink":"/react-native-reanimated/docs/3.x/animations/withSpring"}},{"id":"core/cancelAnimation","title":"cancelAnimation","description":"cancelAnimation lets you cancel a running animation paired to a shared value.","source":"@site/versioned_docs/version-3.x/core/cancelAnimation.mdx","sourceDirName":"core","slug":"/core/cancelAnimation","permalink":"/react-native-reanimated/docs/3.x/core/cancelAnimation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/cancelAnimation.mdx","tags":[],"version":"3.x","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"createAnimatedComponent","permalink":"/react-native-reanimated/docs/3.x/core/createAnimatedComponent"},"next":{"title":"Scroll","permalink":"/react-native-reanimated/docs/3.x/category/scroll"}},{"id":"core/createAnimatedComponent","title":"createAnimatedComponent","description":"createAnimatedComponent lets you create an Animated version of any React Native component. Wrapping a component with createAnimatedComponent allows Reanimated to animate any prop or style associated with that component.","source":"@site/versioned_docs/version-3.x/core/createAnimatedComponent.mdx","sourceDirName":"core","slug":"/core/createAnimatedComponent","permalink":"/react-native-reanimated/docs/3.x/core/createAnimatedComponent","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/createAnimatedComponent.mdx","tags":[],"version":"3.x","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/3.x/core/useDerivedValue"},"next":{"title":"cancelAnimation","permalink":"/react-native-reanimated/docs/3.x/core/cancelAnimation"}},{"id":"core/useAnimatedProps","title":"useAnimatedProps","description":"useAnimatedProps lets you create an animated props object which can be animated using shared values. This object is used to animate properties of third-party components.","source":"@site/versioned_docs/version-3.x/core/useAnimatedProps.mdx","sourceDirName":"core","slug":"/core/useAnimatedProps","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedProps","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/useAnimatedProps.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedStyle"},"next":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedRef"}},{"id":"core/useAnimatedRef","title":"useAnimatedRef","description":"useAnimatedRef lets you get a reference of a view. Used alongside measure, scrollTo, and useScrollViewOffset functions.","source":"@site/versioned_docs/version-3.x/core/useAnimatedRef.mdx","sourceDirName":"core","slug":"/core/useAnimatedRef","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedRef","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/useAnimatedRef.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedProps"},"next":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/3.x/core/useDerivedValue"}},{"id":"core/useAnimatedStyle","title":"useAnimatedStyle","description":"useAnimatedStyle lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.","source":"@site/versioned_docs/version-3.x/core/useAnimatedStyle.mdx","sourceDirName":"core","slug":"/core/useAnimatedStyle","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedStyle","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/useAnimatedStyle.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"useSharedValue","permalink":"/react-native-reanimated/docs/3.x/core/useSharedValue"},"next":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedProps"}},{"id":"core/useDerivedValue","title":"useDerivedValue","description":"useDerivedValue lets you create new shared values based on existing ones while keeping them reactive.","source":"@site/versioned_docs/version-3.x/core/useDerivedValue.mdx","sourceDirName":"core","slug":"/core/useDerivedValue","permalink":"/react-native-reanimated/docs/3.x/core/useDerivedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/useDerivedValue.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedRef"},"next":{"title":"createAnimatedComponent","permalink":"/react-native-reanimated/docs/3.x/core/createAnimatedComponent"}},{"id":"core/useSharedValue","title":"useSharedValue","description":"useSharedValue lets you define shared values in your components.","source":"@site/versioned_docs/version-3.x/core/useSharedValue.mdx","sourceDirName":"core","slug":"/core/useSharedValue","permalink":"/react-native-reanimated/docs/3.x/core/useSharedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/core/useSharedValue.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Core","permalink":"/react-native-reanimated/docs/3.x/category/core"},"next":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedStyle"}},{"id":"debugging/accurate-call-stacks","title":"Accurate Call Stacks","description":"When debugging Reanimated code, you may encounter error or warning call stacks that don\'t clearly indicate the root cause of the problem. These stacks can be misleading, as they often highlight code from Reanimated\'s internals rather than the misuse of the Reanimated API that is the source of the problem.","source":"@site/versioned_docs/version-3.x/debugging/accurate-call-stacks.mdx","sourceDirName":"debugging","slug":"/debugging/accurate-call-stacks","permalink":"/react-native-reanimated/docs/3.x/debugging/accurate-call-stacks","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/debugging/accurate-call-stacks.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"id":"accurate-call-stacks","sidebar_label":"Accurate Call Stacks","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Debugging","permalink":"/react-native-reanimated/docs/3.x/category/debugging"},"next":{"title":"Logger configuration","permalink":"/react-native-reanimated/docs/3.x/debugging/logger-configuration"}},{"id":"debugging/logger-configuration","title":"Logger configuration","description":"Reanimated shows warnings that indicate misuses of the library API, such as modifying the shared value during component re-render. These logs can be configured to be more or less verbose.","source":"@site/versioned_docs/version-3.x/debugging/logger-configuration.mdx","sourceDirName":"debugging","slug":"/debugging/logger-configuration","permalink":"/react-native-reanimated/docs/3.x/debugging/logger-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/debugging/logger-configuration.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"id":"logger-configuration","sidebar_label":"Logger configuration","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Accurate Call Stacks","permalink":"/react-native-reanimated/docs/3.x/debugging/accurate-call-stacks"},"next":{"title":"Guides","permalink":"/react-native-reanimated/docs/3.x/category/guides"}},{"id":"device/ReducedMotionConfig","title":"ReducedMotionConfig","description":"ReducedMotionConfig component let\'s you change behavior in response to the device\'s reduced motion accessibility setting. By default it disables all animation when the reduced motion is enabled on a device. You can adjust it for your specific use case. You can learn more about Accessibility and useReducedMotion in Reanimated.","source":"@site/versioned_docs/version-3.x/device/ReducedMotionConfig.mdx","sourceDirName":"device","slug":"/device/ReducedMotionConfig","permalink":"/react-native-reanimated/docs/3.x/device/ReducedMotionConfig","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/device/ReducedMotionConfig.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"id":"ReducedMotionConfig","title":"ReducedMotionConfig","sidebar_label":"ReducedMotionConfig","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useReducedMotion","permalink":"/react-native-reanimated/docs/3.x/device/useReducedMotion"},"next":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/3.x/category/layout-animations"}},{"id":"device/useAnimatedKeyboard","title":"useAnimatedKeyboard","description":"useAnimatedKeyboard lets you create animations based on state and height of the virtual keyboard.","source":"@site/versioned_docs/version-3.x/device/useAnimatedKeyboard.mdx","sourceDirName":"device","slug":"/device/useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/3.x/device/useAnimatedKeyboard","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/device/useAnimatedKeyboard.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Device","permalink":"/react-native-reanimated/docs/3.x/category/device"},"next":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/3.x/device/useAnimatedSensor"}},{"id":"device/useAnimatedSensor","title":"useAnimatedSensor","description":"useAnimatedSensor lets you create animations based on data from the device\'s sensors. You can access:","source":"@site/versioned_docs/version-3.x/device/useAnimatedSensor.mdx","sourceDirName":"device","slug":"/device/useAnimatedSensor","permalink":"/react-native-reanimated/docs/3.x/device/useAnimatedSensor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/device/useAnimatedSensor.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/3.x/device/useAnimatedKeyboard"},"next":{"title":"useReducedMotion","permalink":"/react-native-reanimated/docs/3.x/device/useReducedMotion"}},{"id":"device/useReducedMotion","title":"useReducedMotion","description":"useReducedMotion lets you query the reduced motion system setting. You can use it to disable animations.","source":"@site/versioned_docs/version-3.x/device/useReducedMotion.mdx","sourceDirName":"device","slug":"/device/useReducedMotion","permalink":"/react-native-reanimated/docs/3.x/device/useReducedMotion","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/device/useReducedMotion.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"id":"useReducedMotion","title":"useReducedMotion","sidebar_label":"useReducedMotion","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/3.x/device/useAnimatedSensor"},"next":{"title":"ReducedMotionConfig","permalink":"/react-native-reanimated/docs/3.x/device/ReducedMotionConfig"}},{"id":"fundamentals/animating-styles-and-props","title":"Animating styles and props","description":"In the last section, we learned how to make simple animations, what shared values are and how to use them. Now, we\'ll learn a different way of passing animation styles to components. We\'ll also go over the difference between animating styles and props and how to handle them using useAnimatedStyle and useAnimatedProps.","source":"@site/versioned_docs/version-3.x/fundamentals/animating-styles-and-props.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/animating-styles-and-props","permalink":"/react-native-reanimated/docs/3.x/fundamentals/animating-styles-and-props","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/animating-styles-and-props.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Your First Animation","permalink":"/react-native-reanimated/docs/3.x/fundamentals/your-first-animation"},"next":{"title":"Customizing animations","permalink":"/react-native-reanimated/docs/3.x/fundamentals/customizing-animation"}},{"id":"fundamentals/applying-modifiers","title":"Applying modifiers","description":"Another way of customizing animations in Reanimated is by using animation modifiers. Reanimated comes with three built-in modifiers: withRepeat, withSequence, and withDelay.","source":"@site/versioned_docs/version-3.x/fundamentals/applying-modifiers.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/applying-modifiers","permalink":"/react-native-reanimated/docs/3.x/fundamentals/applying-modifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/applying-modifiers.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Customizing animations","permalink":"/react-native-reanimated/docs/3.x/fundamentals/customizing-animation"},"next":{"title":"Handling gestures","permalink":"/react-native-reanimated/docs/3.x/fundamentals/handling-gestures"}},{"id":"fundamentals/customizing-animation","title":"Customizing animations","description":"Previous section not only taught you how to use shared values in practice but also you used withSpring and withTiming functions to create animations. We think now you\'re more than ready to dive deeper into customizing animations!","source":"@site/versioned_docs/version-3.x/fundamentals/customizing-animation.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/customizing-animation","permalink":"/react-native-reanimated/docs/3.x/fundamentals/customizing-animation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/customizing-animation.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Animating styles and props","permalink":"/react-native-reanimated/docs/3.x/fundamentals/animating-styles-and-props"},"next":{"title":"Applying modifiers","permalink":"/react-native-reanimated/docs/3.x/fundamentals/applying-modifiers"}},{"id":"fundamentals/getting-started","title":"Getting started","description":"The goal of the Fundamentals section is to help you gain a strong foundation on the core concepts of Reanimated and give you the confidence to explore more advanced use cases on your own. This section is packed with interactive examples, code snippets and explanations. Are you ready? Let\'s dive in!","source":"@site/versioned_docs/version-3.x/fundamentals/getting-started.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/getting-started","permalink":"/react-native-reanimated/docs/3.x/fundamentals/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/getting-started.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentals","permalink":"/react-native-reanimated/docs/3.x/category/fundamentals"},"next":{"title":"Your First Animation","permalink":"/react-native-reanimated/docs/3.x/fundamentals/your-first-animation"}},{"id":"fundamentals/glossary","title":"Glossary of terms","description":"Animated component","source":"@site/versioned_docs/version-3.x/fundamentals/glossary.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/glossary","permalink":"/react-native-reanimated/docs/3.x/fundamentals/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/glossary.mdx","tags":[],"version":"3.x","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Handling gestures","permalink":"/react-native-reanimated/docs/3.x/fundamentals/handling-gestures"},"next":{"title":"Animations","permalink":"/react-native-reanimated/docs/3.x/category/animations"}},{"id":"fundamentals/handling-gestures","title":"Handling gestures","description":"In this section, we\'ll learn how to handle gestures with Reanimated. To achieve this, Reanimated integrates tightly with React Native Gesture Handler, another library created by Software Mansion.","source":"@site/versioned_docs/version-3.x/fundamentals/handling-gestures.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/handling-gestures","permalink":"/react-native-reanimated/docs/3.x/fundamentals/handling-gestures","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/handling-gestures.mdx","tags":[],"version":"3.x","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Applying modifiers","permalink":"/react-native-reanimated/docs/3.x/fundamentals/applying-modifiers"},"next":{"title":"Glossary of terms","permalink":"/react-native-reanimated/docs/3.x/fundamentals/glossary"}},{"id":"fundamentals/your-first-animation","title":"Your First Animation","description":"In this section, we\'ll guide you through the basic concepts of Reanimated. If you\'re new to Reanimated, you\'re in the right hands! We\'re going to start by building a simple animation which will help you develop a basic understanding of the library. Then, in the following sections, we\'re going to build on top of this knowledge and further expand your skills. Let\'s go!","source":"@site/versioned_docs/version-3.x/fundamentals/your-first-animation.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/your-first-animation","permalink":"/react-native-reanimated/docs/3.x/fundamentals/your-first-animation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/fundamentals/your-first-animation.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/react-native-reanimated/docs/3.x/fundamentals/getting-started"},"next":{"title":"Animating styles and props","permalink":"/react-native-reanimated/docs/3.x/fundamentals/animating-styles-and-props"}},{"id":"guides/accessibility","title":"Accessibility","description":"In this section, we will explore how Reanimated provides support for enhanced accessibility in animations, particularly through its reduced motion functionality. This feature ensures a smoother experience for users who may have motion sensitivities or prefer less movement.","source":"@site/versioned_docs/version-3.x/guides/accessibility.mdx","sourceDirName":"guides","slug":"/guides/accessibility","permalink":"/react-native-reanimated/docs/3.x/guides/accessibility","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/accessibility.mdx","tags":[],"version":"3.x","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Worklets","permalink":"/react-native-reanimated/docs/3.x/guides/worklets"},"next":{"title":"Building for Android on Windows","permalink":"/react-native-reanimated/docs/3.x/guides/building-on-windows"}},{"id":"guides/building-on-windows","title":"Building for Android on Windows","description":"This article provides basic troubleshooting steps for issues that may happen when building React Native apps with Reanimated for Android devices on Windows host machine.","source":"@site/versioned_docs/version-3.x/guides/building-for-android-on-windows.md","sourceDirName":"guides","slug":"/guides/building-on-windows","permalink":"/react-native-reanimated/docs/3.x/guides/building-on-windows","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/building-for-android-on-windows.md","tags":[],"version":"3.x","frontMatter":{"id":"building-on-windows","title":"Building for Android on Windows","sidebar_label":"Building for Android on Windows"},"sidebar":"tutorialSidebar","previous":{"title":"Accessibility","permalink":"/react-native-reanimated/docs/3.x/guides/accessibility"},"next":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/3.x/guides/compatibility"}},{"id":"guides/compatibility","title":"Compatibility table","description":"Currently supported React Native versions (Paper)","source":"@site/versioned_docs/version-3.x/guides/compatibility.mdx","sourceDirName":"guides","slug":"/guides/compatibility","permalink":"/react-native-reanimated/docs/3.x/guides/compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/compatibility.mdx","tags":[],"version":"3.x","frontMatter":{"id":"compatibility","sidebar_label":"Compatibility"},"sidebar":"tutorialSidebar","previous":{"title":"Building for Android on Windows","permalink":"/react-native-reanimated/docs/3.x/guides/building-on-windows"},"next":{"title":"Contributing","permalink":"/react-native-reanimated/docs/3.x/guides/contributing"}},{"id":"guides/contributing","title":"Contributing","description":"Thank you for your interest in contributing to Reanimated! From triaging and commenting on issues, through extending the documentation, to reviewing and sending Pull Requests, all contributions are more than welcome.","source":"@site/versioned_docs/version-3.x/guides/contributing.mdx","sourceDirName":"guides","slug":"/guides/contributing","permalink":"/react-native-reanimated/docs/3.x/guides/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/contributing.mdx","tags":[],"version":"3.x","frontMatter":{"id":"contributing","title":"Contributing","sidebar_label":"Contributing"},"sidebar":"tutorialSidebar","previous":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/3.x/guides/compatibility"},"next":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/3.x/guides/debugging"}},{"id":"guides/debugging","title":"Debugging worklets","description":"Due to Reanimated\'s unique architecture and usage of a second JS runtime, debugging","source":"@site/versioned_docs/version-3.x/guides/debugging-worklets.mdx","sourceDirName":"guides","slug":"/guides/debugging","permalink":"/react-native-reanimated/docs/3.x/guides/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/debugging-worklets.mdx","tags":[],"version":"3.x","frontMatter":{"id":"debugging","sidebar_label":"Debugging worklets"},"sidebar":"tutorialSidebar","previous":{"title":"Contributing","permalink":"/react-native-reanimated/docs/3.x/guides/contributing"},"next":{"title":"Migration from 1.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-1.x"}},{"id":"guides/migration-from-1.x","title":"Migrating from Reanimated 1.x to 2.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","source":"@site/versioned_docs/version-3.x/guides/migration-from-1.x.md","sourceDirName":"guides","slug":"/guides/migration-from-1.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-1.x","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/migration-from-1.x.md","tags":[],"version":"3.x","frontMatter":{"id":"migration-from-1.x","title":"Migrating from Reanimated 1.x to 2.x","sidebar_label":"Migration from 1.x"},"sidebar":"tutorialSidebar","previous":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/3.x/guides/debugging"},"next":{"title":"Migration from 2.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-2.x"}},{"id":"guides/migration-from-2.x","title":"Migrating from Reanimated 2.x to 3.x","description":"Reanimated 3.x doesn\'t introduce any breaking changes between 2.x and 3.x in terms of the API. All the code you\'ve written in Reanimated v2 API works in 3.x without any changes. However, Reanimated 3.x drops the Reanimated v1 API entirely. For the migration guide between 1.x and 2.x versions please consult Migration from 1.x to 2.x.","source":"@site/versioned_docs/version-3.x/guides/migration-from-2.x.md","sourceDirName":"guides","slug":"/guides/migration-from-2.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-2.x","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/migration-from-2.x.md","tags":[],"version":"3.x","frontMatter":{"id":"migration-from-2.x","title":"Migrating from Reanimated 2.x to 3.x","sidebar_label":"Migration from 2.x"},"sidebar":"tutorialSidebar","previous":{"title":"Migration from 1.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-1.x"},"next":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/3.x/guides/testing"}},{"id":"guides/testing","title":"Testing with Jest","description":"Reanimated provides testing API, based on Jest. It allows user to mock web-based animations.","source":"@site/versioned_docs/version-3.x/guides/testing-with-jest.mdx","sourceDirName":"guides","slug":"/guides/testing","permalink":"/react-native-reanimated/docs/3.x/guides/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/testing-with-jest.mdx","tags":[],"version":"3.x","frontMatter":{"id":"testing","sidebar_label":"Testing with Jest"},"sidebar":"tutorialSidebar","previous":{"title":"Migration from 2.x","permalink":"/react-native-reanimated/docs/3.x/guides/migration-from-2.x"},"next":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/3.x/guides/troubleshooting"}},{"id":"guides/troubleshooting","title":"Troubleshooting","description":"Initialization issues","source":"@site/versioned_docs/version-3.x/guides/troubleshooting.mdx","sourceDirName":"guides","slug":"/guides/troubleshooting","permalink":"/react-native-reanimated/docs/3.x/guides/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/troubleshooting.mdx","tags":[],"version":"3.x","frontMatter":{"id":"troubleshooting","title":"Troubleshooting","sidebar_label":"Troubleshooting"},"sidebar":"tutorialSidebar","previous":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/3.x/guides/testing"},"next":{"title":"Web Support","permalink":"/react-native-reanimated/docs/3.x/guides/web-support"}},{"id":"guides/web-support","title":"Web Support","description":"It\'s possible to launch Reanimated in a web browser. For that case all of the functionalities are implemented purely in JavaScript, hence the efficiency of the animations might be lower.","source":"@site/versioned_docs/version-3.x/guides/web-support.mdx","sourceDirName":"guides","slug":"/guides/web-support","permalink":"/react-native-reanimated/docs/3.x/guides/web-support","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/web-support.mdx","tags":[],"version":"3.x","frontMatter":{"id":"web-support","title":"Web Support","sidebar_label":"Web Support"},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/3.x/guides/troubleshooting"},"next":{"title":"Reanimated Babel plugin","permalink":"/react-native-reanimated/docs/3.x/category/reanimated-babel-plugin"}},{"id":"guides/worklets","title":"Worklets","description":"Worklets are short-running JavaScript functions that can run on the UI thread. Reanimated uses worklets to calculate view styles and react to events on the UI thread.","source":"@site/versioned_docs/version-3.x/guides/worklets.mdx","sourceDirName":"guides","slug":"/guides/worklets","permalink":"/react-native-reanimated/docs/3.x/guides/worklets","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/guides/worklets.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"id":"worklets","sidebar_label":"Worklets","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Guides","permalink":"/react-native-reanimated/docs/3.x/category/guides"},"next":{"title":"Accessibility","permalink":"/react-native-reanimated/docs/3.x/guides/accessibility"}},{"id":"layout-animations/custom-animations","title":"Custom animations","description":"Custom animations give you a full control over the Entering/Exiting animations and Layout transitions. However, they tend to be hard to understand and maintain. We recommend starting with predefined Entering/Exiting, Keyframes and Layout presets first before using custom animations.","source":"@site/versioned_docs/version-3.x/layout-animations/custom-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/custom-animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/custom-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/custom-animations.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Layout transitions","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-transitions"},"next":{"title":"Skipping Layout Animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-animation-config"}},{"id":"layout-animations/entering-exiting-animations","title":"Entering/Exiting animations","description":"Entering/Exiting animations let you animate elements when they are added to or removed from the view hierarchy.","source":"@site/versioned_docs/version-3.x/layout-animations/entering-exiting-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/entering-exiting-animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/entering-exiting-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/entering-exiting-animations.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/3.x/category/layout-animations"},"next":{"title":"Keyframe animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/keyframe-animations"}},{"id":"layout-animations/keyframe-animations","title":"Keyframe animations","description":"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets.","source":"@site/versioned_docs/version-3.x/layout-animations/keyframe-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/keyframe-animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/keyframe-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/keyframe-animations.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Entering/Exiting animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/entering-exiting-animations"},"next":{"title":"Layout transitions","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-transitions"}},{"id":"layout-animations/layout-animation-config","title":"LayoutAnimationConfig","description":"LayoutAnimationConfig is a component that lets you skip entering and exiting animations.","source":"@site/versioned_docs/version-3.x/layout-animations/layout-animation-config.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/layout-animation-config","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-animation-config","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/layout-animation-config.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"LayoutAnimationConfig","sidebar_label":"Skipping Layout Animations"},"sidebar":"tutorialSidebar","previous":{"title":"Custom animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/custom-animations"},"next":{"title":"List Layout Animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/list-layout-animations"}},{"id":"layout-animations/layout-transitions","title":"Layout transitions","description":"Layout transitions allows you to replace layout changes with smooth transitions. Each layout change may include changes of size and position and both of them can be animated.","source":"@site/versioned_docs/version-3.x/layout-animations/layout-transitions.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/layout-transitions","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/layout-transitions.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Keyframe animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/keyframe-animations"},"next":{"title":"Custom animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/custom-animations"}},{"id":"layout-animations/list-layout-animations","title":"List Layout Animations","description":"itemLayoutAnimation lets you define a layout transition that\'s applied when list items layout changes. You can use one of the predefined transitions like LinearTransition or create your own transition.","source":"@site/versioned_docs/version-3.x/layout-animations/list-layout-animations.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/list-layout-animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/list-layout-animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/layout-animations/list-layout-animations.mdx","tags":[],"version":"3.x","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"List Layout Animations","sidebar_label":"List Layout Animations"},"sidebar":"tutorialSidebar","previous":{"title":"Skipping Layout Animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-animation-config"},"next":{"title":"Shared Element Transitions","permalink":"/react-native-reanimated/docs/3.x/category/shared-element-transitions"}},{"id":"reanimated-babel-plugin/about","title":"About","description":"What is Reanimated Babel Plugin?","source":"@site/versioned_docs/version-3.x/reanimated-babel-plugin/about.md","sourceDirName":"reanimated-babel-plugin","slug":"/reanimated-babel-plugin/about","permalink":"/react-native-reanimated/docs/3.x/reanimated-babel-plugin/about","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/reanimated-babel-plugin/about.md","tags":[],"version":"3.x","frontMatter":{"id":"about","title":"About","sidebar_label":"About"},"sidebar":"tutorialSidebar","previous":{"title":"Reanimated Babel plugin","permalink":"/react-native-reanimated/docs/3.x/category/reanimated-babel-plugin"},"next":{"title":"Options","permalink":"/react-native-reanimated/docs/3.x/reanimated-babel-plugin/plugin-options"}},{"id":"reanimated-babel-plugin/plugin-options","title":"Options","description":"Our plugin offers several optional functionalities that you may need to employ advanced APIs:","source":"@site/versioned_docs/version-3.x/reanimated-babel-plugin/options.md","sourceDirName":"reanimated-babel-plugin","slug":"/reanimated-babel-plugin/plugin-options","permalink":"/react-native-reanimated/docs/3.x/reanimated-babel-plugin/plugin-options","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/reanimated-babel-plugin/options.md","tags":[],"version":"3.x","frontMatter":{"id":"plugin-options","title":"Options","sidebar_label":"Options"},"sidebar":"tutorialSidebar","previous":{"title":"About","permalink":"/react-native-reanimated/docs/3.x/reanimated-babel-plugin/about"}},{"id":"scroll/scrollTo","title":"scrollTo","description":"scrollTo lets you synchronously scroll to a given X or Y offset.","source":"@site/versioned_docs/version-3.x/scroll/scrollTo.mdx","sourceDirName":"scroll","slug":"/scroll/scrollTo","permalink":"/react-native-reanimated/docs/3.x/scroll/scrollTo","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/scroll/scrollTo.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Scroll","permalink":"/react-native-reanimated/docs/3.x/category/scroll"},"next":{"title":"useScrollViewOffset","permalink":"/react-native-reanimated/docs/3.x/scroll/useScrollViewOffset"}},{"id":"scroll/useAnimatedScrollHandler","title":"useAnimatedScrollHandler","description":"useAnimatedScrollHandler is a hook that returns an event handler reference. It can be used with React Native\'s scrollable components.","source":"@site/versioned_docs/version-3.x/scroll/useAnimatedScrollHandler.mdx","sourceDirName":"scroll","slug":"/scroll/useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/3.x/scroll/useAnimatedScrollHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/scroll/useAnimatedScrollHandler.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"useScrollViewOffset","permalink":"/react-native-reanimated/docs/3.x/scroll/useScrollViewOffset"},"next":{"title":"Device","permalink":"/react-native-reanimated/docs/3.x/category/device"}},{"id":"scroll/useScrollViewOffset","title":"useScrollViewOffset","description":"useScrollViewOffset lets you to create animations based on the offset of a ScrollView.","source":"@site/versioned_docs/version-3.x/scroll/useScrollViewOffset.mdx","sourceDirName":"scroll","slug":"/scroll/useScrollViewOffset","permalink":"/react-native-reanimated/docs/3.x/scroll/useScrollViewOffset","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/scroll/useScrollViewOffset.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"scrollTo","permalink":"/react-native-reanimated/docs/3.x/scroll/scrollTo"},"next":{"title":"useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/3.x/scroll/useAnimatedScrollHandler"}},{"id":"shared-element-transitions/overview","title":"Shared Element Transitions","description":"Shared Element Transitions is an experimental feature, not recommended for production use yet. We are waiting for your feedback to improve implementation.","source":"@site/versioned_docs/version-3.x/shared-element-transitions/overview.mdx","sourceDirName":"shared-element-transitions","slug":"/shared-element-transitions/overview","permalink":"/react-native-reanimated/docs/3.x/shared-element-transitions/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/shared-element-transitions/overview.mdx","tags":[],"version":"3.x","frontMatter":{"id":"overview","title":"Shared Element Transitions","sidebar_label":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Shared Element Transitions","permalink":"/react-native-reanimated/docs/3.x/category/shared-element-transitions"},"next":{"title":"Threading","permalink":"/react-native-reanimated/docs/3.x/category/threading"}},{"id":"threading/createWorkletRuntime","title":"createWorkletRuntime","description":"createWorkletRuntime lets you create a new JS runtime which can be used to run worklets possibly on different threads than JS or UI thread. This function is supposed to be used by third-party libraries that need to integrate with worklets. The return value represents the runtime and it\'s supposed to be passed to C++ side using JSI (JavaScript Interface) for further operations.","source":"@site/versioned_docs/version-3.x/threading/createWorkletRuntime.mdx","sourceDirName":"threading","slug":"/threading/createWorkletRuntime","permalink":"/react-native-reanimated/docs/3.x/threading/createWorkletRuntime","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/threading/createWorkletRuntime.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"runOnRuntime","permalink":"/react-native-reanimated/docs/3.x/threading/runOnRuntime"},"next":{"title":"Utilities","permalink":"/react-native-reanimated/docs/3.x/category/utilities"}},{"id":"threading/runOnJS","title":"runOnJS","description":"runOnJS lets you asynchronously run non-workletized functions that couldn\'t otherwise run on the UI thread. This applies to most external libraries as they don\'t have their functions marked with \\"worklet\\"; directive.","source":"@site/versioned_docs/version-3.x/threading/runOnJS.mdx","sourceDirName":"threading","slug":"/threading/runOnJS","permalink":"/react-native-reanimated/docs/3.x/threading/runOnJS","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/threading/runOnJS.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Threading","permalink":"/react-native-reanimated/docs/3.x/category/threading"},"next":{"title":"runOnUI","permalink":"/react-native-reanimated/docs/3.x/threading/runOnUI"}},{"id":"threading/runOnRuntime","title":"runOnRuntime","description":"runOnRuntime lets you asynchronously run workletized functions on a separate worklet runtime on a separate thread.","source":"@site/versioned_docs/version-3.x/threading/runOnRuntime.mdx","sourceDirName":"threading","slug":"/threading/runOnRuntime","permalink":"/react-native-reanimated/docs/3.x/threading/runOnRuntime","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/threading/runOnRuntime.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"runOnUI","permalink":"/react-native-reanimated/docs/3.x/threading/runOnUI"},"next":{"title":"createWorkletRuntime","permalink":"/react-native-reanimated/docs/3.x/threading/createWorkletRuntime"}},{"id":"threading/runOnUI","title":"runOnUI","description":"runOnUI lets you asynchronously run workletized functions on the UI thread.","source":"@site/versioned_docs/version-3.x/threading/runOnUI.mdx","sourceDirName":"threading","slug":"/threading/runOnUI","permalink":"/react-native-reanimated/docs/3.x/threading/runOnUI","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/threading/runOnUI.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"runOnJS","permalink":"/react-native-reanimated/docs/3.x/threading/runOnJS"},"next":{"title":"runOnRuntime","permalink":"/react-native-reanimated/docs/3.x/threading/runOnRuntime"}},{"id":"utilities/clamp","title":"clamp","description":"clamp lets you limit a value within a specified range.","source":"@site/versioned_docs/version-3.x/utilities/clamp.mdx","sourceDirName":"utilities","slug":"/utilities/clamp","permalink":"/react-native-reanimated/docs/3.x/utilities/clamp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/utilities/clamp.mdx","tags":[],"version":"3.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"interpolate","permalink":"/react-native-reanimated/docs/3.x/utilities/interpolate"},"next":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/3.x/utilities/interpolateColor"}},{"id":"utilities/getRelativeCoords","title":"getRelativeCoords","description":"getRelativeCoords determines the location on the screen, relative to the given view.","source":"@site/versioned_docs/version-3.x/utilities/getRelativeCoords.mdx","sourceDirName":"utilities","slug":"/utilities/getRelativeCoords","permalink":"/react-native-reanimated/docs/3.x/utilities/getRelativeCoords","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/utilities/getRelativeCoords.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/3.x/utilities/interpolateColor"},"next":{"title":"useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/3.x/utilities/useAnimatedGestureHandler"}},{"id":"utilities/interpolate","title":"interpolate","description":"interpolate lets you map a value from one range to another using linear interpolation.","source":"@site/versioned_docs/version-3.x/utilities/interpolate.mdx","sourceDirName":"utilities","slug":"/utilities/interpolate","permalink":"/react-native-reanimated/docs/3.x/utilities/interpolate","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/utilities/interpolate.mdx","tags":[],"version":"3.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Utilities","permalink":"/react-native-reanimated/docs/3.x/category/utilities"},"next":{"title":"clamp","permalink":"/react-native-reanimated/docs/3.x/utilities/clamp"}},{"id":"utilities/interpolateColor","title":"interpolateColor","description":"interpolateColor maps input range to output colors using linear interpolation.","source":"@site/versioned_docs/version-3.x/utilities/interpolateColor.mdx","sourceDirName":"utilities","slug":"/utilities/interpolateColor","permalink":"/react-native-reanimated/docs/3.x/utilities/interpolateColor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/utilities/interpolateColor.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"clamp","permalink":"/react-native-reanimated/docs/3.x/utilities/clamp"},"next":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/3.x/utilities/getRelativeCoords"}},{"id":"utilities/useAnimatedGestureHandler","title":"useAnimatedGestureHandler","description":"This API is deprecated, doesn\'t receive any updates and will be removed in the next major version of Reanimated.","source":"@site/versioned_docs/version-3.x/utilities/useAnimatedGestureHandler.mdx","sourceDirName":"utilities","slug":"/utilities/useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/3.x/utilities/useAnimatedGestureHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-3.x/utilities/useAnimatedGestureHandler.mdx","tags":[],"version":"3.x","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/3.x/utilities/getRelativeCoords"},"next":{"title":"Advanced APIs","permalink":"/react-native-reanimated/docs/3.x/category/advanced-apis"}}],"drafts":[],"sidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"fundamentals/getting-started"},{"type":"doc","id":"fundamentals/your-first-animation"},{"type":"doc","id":"fundamentals/animating-styles-and-props"},{"type":"doc","id":"fundamentals/customizing-animation"},{"type":"doc","id":"fundamentals/applying-modifiers"},{"type":"doc","id":"fundamentals/handling-gestures"},{"type":"doc","id":"fundamentals/glossary"}],"link":{"type":"generated-index","slug":"/category/fundamentals","permalink":"/react-native-reanimated/docs/3.x/category/fundamentals"}},{"type":"category","label":"Animations","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"animations/withTiming"},{"type":"doc","id":"animations/withSpring"},{"type":"doc","id":"animations/withDecay"},{"type":"doc","id":"animations/withSequence"},{"type":"doc","id":"animations/withRepeat"},{"type":"doc","id":"animations/withDelay"},{"type":"doc","id":"animations/withClamp"}],"link":{"type":"generated-index","slug":"/category/animations","permalink":"/react-native-reanimated/docs/3.x/category/animations"}},{"type":"category","label":"Core","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"core/useSharedValue"},{"type":"doc","id":"core/useAnimatedStyle"},{"type":"doc","id":"core/useAnimatedProps"},{"type":"doc","id":"core/useAnimatedRef"},{"type":"doc","id":"core/useDerivedValue"},{"type":"doc","id":"core/createAnimatedComponent"},{"type":"doc","id":"core/cancelAnimation"}],"link":{"type":"generated-index","slug":"/category/core","permalink":"/react-native-reanimated/docs/3.x/category/core"}},{"type":"category","label":"Scroll","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"scroll/scrollTo"},{"type":"doc","id":"scroll/useScrollViewOffset"},{"type":"doc","id":"scroll/useAnimatedScrollHandler"}],"link":{"type":"generated-index","slug":"/category/scroll","permalink":"/react-native-reanimated/docs/3.x/category/scroll"}},{"type":"category","label":"Device","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"device/useAnimatedKeyboard"},{"type":"doc","id":"device/useAnimatedSensor"},{"type":"doc","id":"device/useReducedMotion","label":"useReducedMotion"},{"type":"doc","id":"device/ReducedMotionConfig","label":"ReducedMotionConfig"}],"link":{"type":"generated-index","slug":"/category/device","permalink":"/react-native-reanimated/docs/3.x/category/device"}},{"type":"category","label":"Layout Animations","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"layout-animations/entering-exiting-animations"},{"type":"doc","id":"layout-animations/keyframe-animations"},{"type":"doc","id":"layout-animations/layout-transitions"},{"type":"doc","id":"layout-animations/custom-animations"},{"type":"doc","id":"layout-animations/layout-animation-config","label":"Skipping Layout Animations"},{"type":"doc","id":"layout-animations/list-layout-animations","label":"List Layout Animations"}],"link":{"type":"generated-index","slug":"/category/layout-animations","permalink":"/react-native-reanimated/docs/3.x/category/layout-animations"}},{"type":"category","label":"Shared Element Transitions","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"shared-element-transitions/overview","label":"Overview"}],"link":{"type":"generated-index","slug":"/category/shared-element-transitions","permalink":"/react-native-reanimated/docs/3.x/category/shared-element-transitions"}},{"type":"category","label":"Threading","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"threading/runOnJS"},{"type":"doc","id":"threading/runOnUI"},{"type":"doc","id":"threading/runOnRuntime"},{"type":"doc","id":"threading/createWorkletRuntime"}],"link":{"type":"generated-index","slug":"/category/threading","permalink":"/react-native-reanimated/docs/3.x/category/threading"}},{"type":"category","label":"Utilities","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"utilities/interpolate"},{"type":"doc","id":"utilities/clamp"},{"type":"doc","id":"utilities/interpolateColor"},{"type":"doc","id":"utilities/getRelativeCoords"},{"type":"doc","id":"utilities/useAnimatedGestureHandler"}],"link":{"type":"generated-index","slug":"/category/utilities","permalink":"/react-native-reanimated/docs/3.x/category/utilities"}},{"type":"category","label":"Advanced APIs","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"advanced/measure"},{"type":"doc","id":"advanced/useAnimatedReaction"},{"type":"doc","id":"advanced/useFrameCallback"},{"type":"doc","id":"advanced/useEvent"},{"type":"doc","id":"advanced/useHandler"},{"type":"doc","id":"advanced/useComposedEventHandler"},{"type":"doc","id":"advanced/dispatchCommand"},{"type":"doc","id":"advanced/setNativeProps"},{"type":"doc","id":"advanced/makeMutable"}],"link":{"type":"generated-index","slug":"/category/advanced-apis","permalink":"/react-native-reanimated/docs/3.x/category/advanced-apis"}},{"type":"category","label":"Debugging","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"debugging/accurate-call-stacks","label":"Accurate Call Stacks"},{"type":"doc","id":"debugging/logger-configuration","label":"Logger configuration"}],"link":{"type":"generated-index","slug":"/category/debugging","permalink":"/react-native-reanimated/docs/3.x/category/debugging"}},{"type":"category","label":"Guides","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"guides/worklets","label":"Worklets"},{"type":"doc","id":"guides/accessibility"},{"type":"doc","id":"guides/building-on-windows","label":"Building for Android on Windows"},{"type":"doc","id":"guides/compatibility","label":"Compatibility"},{"type":"doc","id":"guides/contributing","label":"Contributing"},{"type":"doc","id":"guides/debugging","label":"Debugging worklets"},{"type":"doc","id":"guides/migration-from-1.x","label":"Migration from 1.x"},{"type":"doc","id":"guides/migration-from-2.x","label":"Migration from 2.x"},{"type":"doc","id":"guides/testing","label":"Testing with Jest"},{"type":"doc","id":"guides/troubleshooting","label":"Troubleshooting"},{"type":"doc","id":"guides/web-support","label":"Web Support"}],"link":{"type":"generated-index","slug":"/category/guides","permalink":"/react-native-reanimated/docs/3.x/category/guides"}},{"type":"category","label":"Reanimated Babel plugin","collapsible":false,"collapsed":false,"items":[{"type":"doc","id":"reanimated-babel-plugin/about","label":"About"},{"type":"doc","id":"reanimated-babel-plugin/plugin-options","label":"Options"}],"link":{"type":"generated-index","slug":"/category/reanimated-babel-plugin","permalink":"/react-native-reanimated/docs/3.x/category/reanimated-babel-plugin"}}]}},{"versionName":"2.x","label":"2.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-2.x","path":"/react-native-reanimated/docs/2.x","tagsPath":"/react-native-reanimated/docs/2.x/tags","editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x","editUrlLocalized":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-2.x","isLast":false,"sidebarFilePath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_sidebars/version-2.x-sidebars.json","contentPath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_docs/version-2.x","contentPathLocalized":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-2.x","docs":[{"id":"api/animations/cancelAnimation","title":"cancelAnimation","description":"Cancels animation linked to given shared value.","source":"@site/versioned_docs/version-2.x/api/animations/cancelAnimation.md","sourceDirName":"api/animations","slug":"/api/animations/cancelAnimation","permalink":"/react-native-reanimated/docs/2.x/api/animations/cancelAnimation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/cancelAnimation.md","tags":[],"version":"2.x","frontMatter":{"id":"cancelAnimation","title":"cancelAnimation","sidebar_label":"cancelAnimation"},"sidebar":"docs","previous":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/2.x/fundamentals/troubleshooting"},"next":{"title":"withDecay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDecay"}},{"id":"api/animations/withDecay","title":"withDecay","description":"Starts a velocity based \\"scroll\\" animation.","source":"@site/versioned_docs/version-2.x/api/animations/withDecay.md","sourceDirName":"api/animations","slug":"/api/animations/withDecay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDecay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withDecay.md","tags":[],"version":"2.x","frontMatter":{"id":"withDecay","title":"withDecay","sidebar_label":"withDecay"},"sidebar":"docs","previous":{"title":"cancelAnimation","permalink":"/react-native-reanimated/docs/2.x/api/animations/cancelAnimation"},"next":{"title":"withDelay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDelay"}},{"id":"api/animations/withDelay","title":"withDelay","description":"Allows for the provided animation to start with a specified delay.","source":"@site/versioned_docs/version-2.x/api/animations/withDelay.md","sourceDirName":"api/animations","slug":"/api/animations/withDelay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDelay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withDelay.md","tags":[],"version":"2.x","frontMatter":{"id":"withDelay","title":"withDelay","sidebar_label":"withDelay"},"sidebar":"docs","previous":{"title":"withDecay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDecay"},"next":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/2.x/api/animations/withRepeat"}},{"id":"api/animations/withRepeat","title":"withRepeat","description":"Repeats the provided animation several times.","source":"@site/versioned_docs/version-2.x/api/animations/withRepeat.md","sourceDirName":"api/animations","slug":"/api/animations/withRepeat","permalink":"/react-native-reanimated/docs/2.x/api/animations/withRepeat","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withRepeat.md","tags":[],"version":"2.x","frontMatter":{"id":"withRepeat","title":"withRepeat","sidebar_label":"withRepeat"},"sidebar":"docs","previous":{"title":"withDelay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDelay"},"next":{"title":"withSequence","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSequence"}},{"id":"api/animations/withSequence","title":"withSequence","description":"Runs the provided animations in a sequence.","source":"@site/versioned_docs/version-2.x/api/animations/withSequence.md","sourceDirName":"api/animations","slug":"/api/animations/withSequence","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSequence","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withSequence.md","tags":[],"version":"2.x","frontMatter":{"id":"withSequence","title":"withSequence","sidebar_label":"withSequence"},"sidebar":"docs","previous":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/2.x/api/animations/withRepeat"},"next":{"title":"withSpring","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSpring"}},{"id":"api/animations/withSpring","title":"withSpring","description":"Starts a spring-based animation.","source":"@site/versioned_docs/version-2.x/api/animations/withSpring.md","sourceDirName":"api/animations","slug":"/api/animations/withSpring","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSpring","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withSpring.md","tags":[],"version":"2.x","frontMatter":{"id":"withSpring","title":"withSpring","sidebar_label":"withSpring"},"sidebar":"docs","previous":{"title":"withSequence","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSequence"},"next":{"title":"withTiming","permalink":"/react-native-reanimated/docs/2.x/api/animations/withTiming"}},{"id":"api/animations/withTiming","title":"withTiming","description":"Starts a time based animation.","source":"@site/versioned_docs/version-2.x/api/animations/withTiming.md","sourceDirName":"api/animations","slug":"/api/animations/withTiming","permalink":"/react-native-reanimated/docs/2.x/api/animations/withTiming","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/animations/withTiming.md","tags":[],"version":"2.x","frontMatter":{"id":"withTiming","title":"withTiming","sidebar_label":"withTiming"},"sidebar":"docs","previous":{"title":"withSpring","permalink":"/react-native-reanimated/docs/2.x/api/animations/withSpring"},"next":{"title":"useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedGestureHandler"}},{"id":"api/hooks/useAnimatedGestureHandler","title":"useAnimatedGestureHandler","description":"This hook allows for defining worklet handlers that can serve in a process of handling gestures.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedGestureHandler.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedGestureHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedGestureHandler.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedGestureHandler","title":"useAnimatedGestureHandler","sidebar_label":"useAnimatedGestureHandler"},"sidebar":"docs","previous":{"title":"withTiming","permalink":"/react-native-reanimated/docs/2.x/api/animations/withTiming"},"next":{"title":"useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedKeyboard"}},{"id":"api/hooks/useAnimatedKeyboard","title":"useAnimatedKeyboard","description":"useAnimatedKeyboard is available since v2.10.0","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedKeyboard.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedKeyboard","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedKeyboard.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedKeyboard","title":"useAnimatedKeyboard","sidebar_label":"useAnimatedKeyboard"},"sidebar":"docs","previous":{"title":"useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedGestureHandler"},"next":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedProps"}},{"id":"api/hooks/useAnimatedProps","title":"useAnimatedProps","description":"This hook is a counterpart of useAnimatedStyle hook, but works for a non-style view properties.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedProps.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedProps","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedProps","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedProps.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedProps","title":"useAnimatedProps","sidebar_label":"useAnimatedProps"},"sidebar":"docs","previous":{"title":"useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedKeyboard"},"next":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedReaction"}},{"id":"api/hooks/useAnimatedReaction","title":"useAnimatedReaction","description":"useAnimatedReaction hook allows performing certain actions on some shared values\' change. The key idea is, all of the shared values included in the first worklet are the inputs set. Every time any of those change both worklets are triggered in the order specified above. Also the second worklet may modify any shared values excluding those used in the first worklet.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedReaction.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedReaction","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedReaction","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedReaction.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedReaction","title":"useAnimatedReaction","sidebar_label":"useAnimatedReaction"},"sidebar":"docs","previous":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedProps"},"next":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedRef"}},{"id":"api/hooks/useAnimatedRef","title":"useAnimatedRef","description":"This hook provides extended functionality of a standard ref. You can assign it to some component like ` and then access the target component via animatedRef.current. Besides, on the UI thread animated reference also contains the view tag of the target. It can be accessed like this: const viewTag = animatedRef(). This comes handy when using native methods like scrollTo and measure`.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedRef.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedRef","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedRef","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedRef.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedRef","title":"useAnimatedRef","sidebar_label":"useAnimatedRef"},"sidebar":"docs","previous":{"title":"useAnimatedReaction","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedReaction"},"next":{"title":"useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedScrollHandler"}},{"id":"api/hooks/useAnimatedScrollHandler","title":"useAnimatedScrollHandler","description":"This is a convenience hook that returns an event handler reference which can be used with React Native\'s scrollable components.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedScrollHandler.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedScrollHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedScrollHandler.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedScrollHandler","title":"useAnimatedScrollHandler","sidebar_label":"useAnimatedScrollHandler"},"sidebar":"docs","previous":{"title":"useAnimatedRef","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedRef"},"next":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedSensor"}},{"id":"api/hooks/useAnimatedSensor","title":"useAnimatedSensor","description":"useAnimatedSensor is available since v2.5.0","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedSensor.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedSensor","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedSensor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedSensor.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedSensor","title":"useAnimatedSensor","sidebar_label":"useAnimatedSensor"},"sidebar":"docs","previous":{"title":"useAnimatedScrollHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedScrollHandler"},"next":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedStyle"}},{"id":"api/hooks/useAnimatedStyle","title":"useAnimatedStyle","description":"This hook is one of the main elements of the new Reanimated v2 API.","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedStyle.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedStyle","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedStyle","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedStyle.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedStyle","title":"useAnimatedStyle","sidebar_label":"useAnimatedStyle"},"sidebar":"docs","previous":{"title":"useAnimatedSensor","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedSensor"},"next":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useDerivedValue"}},{"id":"api/hooks/useDerivedValue","title":"useDerivedValue","description":"This hook allows for creating shared value reference that can change in response to updating of one or more other shared values.","source":"@site/versioned_docs/version-2.x/api/hooks/useDerivedValue.md","sourceDirName":"api/hooks","slug":"/api/hooks/useDerivedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useDerivedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useDerivedValue.md","tags":[],"version":"2.x","frontMatter":{"id":"useDerivedValue","title":"useDerivedValue","sidebar_label":"useDerivedValue"},"sidebar":"docs","previous":{"title":"useAnimatedStyle","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedStyle"},"next":{"title":"useEvent","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useEvent"}},{"id":"api/hooks/useEvent","title":"useEvent","description":"This is a low-level hook returning an event handler that will be invoked with native events, which should be used in order to create custom event handler hooks, like useAnimatedGestureHandler or useAnimatedScrollHandler.","source":"@site/versioned_docs/version-2.x/api/hooks/useEvent.md","sourceDirName":"api/hooks","slug":"/api/hooks/useEvent","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useEvent","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useEvent.md","tags":[],"version":"2.x","frontMatter":{"id":"useEvent","title":"useEvent","sidebar_label":"useEvent"},"sidebar":"docs","previous":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useDerivedValue"},"next":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useFrameCallback"}},{"id":"api/hooks/useFrameCallback","title":"useFrameCallback","description":"useFrameCallback is available since v2.10.0","source":"@site/versioned_docs/version-2.x/api/hooks/useFrameCallback.md","sourceDirName":"api/hooks","slug":"/api/hooks/useFrameCallback","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useFrameCallback","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useFrameCallback.md","tags":[],"version":"2.x","frontMatter":{"id":"useFrameCallback","title":"useFrameCallback","sidebar_label":"useFrameCallback"},"sidebar":"docs","previous":{"title":"useEvent","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useEvent"},"next":{"title":"useHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useHandler"}},{"id":"api/hooks/useHandler","title":"useHandler","description":"This is low-level hook returning context object and value indicating whether worklet should be rebuilt, which should be used in order to create custom event handler hook like useAnimatedGestureHandler or useAnimatedScrollHandler.","source":"@site/versioned_docs/version-2.x/api/hooks/useHandler.md","sourceDirName":"api/hooks","slug":"/api/hooks/useHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useHandler","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useHandler.md","tags":[],"version":"2.x","frontMatter":{"id":"useHandler","title":"useHandler","sidebar_label":"useHandler"},"sidebar":"docs","previous":{"title":"useFrameCallback","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useFrameCallback"},"next":{"title":"useScrollViewOffset","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useScrollViewOffset"}},{"id":"api/hooks/useScrollViewOffset","title":"useScrollViewOffset","description":"useScrollViewOffset is available since v2.11.0","source":"@site/versioned_docs/version-2.x/api/hooks/useScrollViewOffset.md","sourceDirName":"api/hooks","slug":"/api/hooks/useScrollViewOffset","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useScrollViewOffset","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useScrollViewOffset.md","tags":[],"version":"2.x","frontMatter":{"id":"useScrollViewOffset","title":"useScrollViewOffset","sidebar_label":"useScrollViewOffset"},"sidebar":"docs","previous":{"title":"useHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useHandler"},"next":{"title":"useSharedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useSharedValue"}},{"id":"api/hooks/useSharedValue","title":"useSharedValue","description":"Use this hook to create a reference to a JavaScript value that can be shared with worklets.","source":"@site/versioned_docs/version-2.x/api/hooks/useSharedValue.md","sourceDirName":"api/hooks","slug":"/api/hooks/useSharedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useSharedValue","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useSharedValue.md","tags":[],"version":"2.x","frontMatter":{"id":"useSharedValue","title":"useSharedValue","sidebar_label":"useSharedValue"},"sidebar":"docs","previous":{"title":"useScrollViewOffset","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useScrollViewOffset"},"next":{"title":"Custom Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/customAnimations"}},{"id":"api/LayoutAnimations/customAnimations","title":"Custom Animations","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/api/LayoutAnimations/CustomAnimations.md","sourceDirName":"api/LayoutAnimations","slug":"/api/LayoutAnimations/customAnimations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/customAnimations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/LayoutAnimations/CustomAnimations.md","tags":[],"version":"2.x","frontMatter":{"id":"customAnimations","title":"Custom Animations","sidebar_label":"Custom Animations"},"sidebar":"docs","previous":{"title":"useSharedValue","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useSharedValue"},"next":{"title":"Entering Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/entryAnimations"}},{"id":"api/LayoutAnimations/entryAnimations","title":"Entering Animations","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/api/LayoutAnimations/EntryAnimations.md","sourceDirName":"api/LayoutAnimations","slug":"/api/LayoutAnimations/entryAnimations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/entryAnimations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/LayoutAnimations/EntryAnimations.md","tags":[],"version":"2.x","frontMatter":{"id":"entryAnimations","title":"Entering Animations","sidebar_label":"Entering Animations"},"sidebar":"docs","previous":{"title":"Custom Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/customAnimations"},"next":{"title":"Exiting Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/exitAnimations"}},{"id":"api/LayoutAnimations/exitAnimations","title":"Exiting Animations","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/api/LayoutAnimations/ExitAnimations.md","sourceDirName":"api/LayoutAnimations","slug":"/api/LayoutAnimations/exitAnimations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/exitAnimations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/LayoutAnimations/ExitAnimations.md","tags":[],"version":"2.x","frontMatter":{"id":"exitAnimations","title":"Exiting Animations","sidebar_label":"Exiting Animations"},"sidebar":"docs","previous":{"title":"Entering Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/entryAnimations"},"next":{"title":"Keyframe Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/keyframeAnimations"}},{"id":"api/LayoutAnimations/keyframeAnimations","title":"Keyframe Animations","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/api/LayoutAnimations/KeyframeAnimations.md","sourceDirName":"api/LayoutAnimations","slug":"/api/LayoutAnimations/keyframeAnimations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/keyframeAnimations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/LayoutAnimations/KeyframeAnimations.md","tags":[],"version":"2.x","frontMatter":{"id":"keyframeAnimations","title":"Keyframe Animations","sidebar_label":"Keyframe Animations"},"sidebar":"docs","previous":{"title":"Exiting Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/exitAnimations"},"next":{"title":"Layout Transitions","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/layoutTransitions"}},{"id":"api/LayoutAnimations/layoutTransitions","title":"Layout Transitions","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/api/LayoutAnimations/LayoutTransitions.md","sourceDirName":"api/LayoutAnimations","slug":"/api/LayoutAnimations/layoutTransitions","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/layoutTransitions","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/LayoutAnimations/LayoutTransitions.md","tags":[],"version":"2.x","frontMatter":{"id":"layoutTransitions","title":"Layout Transitions","sidebar_label":"Layout Transitions"},"sidebar":"docs","previous":{"title":"Keyframe Animations","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/keyframeAnimations"},"next":{"title":"measure","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/measure"}},{"id":"api/miscellaneous/getRelativeCoords","title":"getRelativeCoords","description":"Determines the location on the screen, relative to the given view. It might be useful when there are only absolute coordinates available and you need coordinates relative to the parent.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/getRelativeCoords.md","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/getRelativeCoords","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/getRelativeCoords","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/getRelativeCoords.md","tags":[],"version":"2.x","frontMatter":{"id":"getRelativeCoords","title":"getRelativeCoords","sidebar_label":"getRelativeCoords"},"sidebar":"docs","previous":{"title":"scrollTo","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/scrollTo"},"next":{"title":"Interpolate","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolate"}},{"id":"api/miscellaneous/interpolate","title":"Interpolate","description":"Sometimes you need to map a value from one range to another. This is where you should use the interpolate function which approximates values between points in the output range and lets you map a value inside the input range to a corresponding approximation in the output range. It also supports a few types of Extrapolation to enable mapping outside the range.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/interpolate.md","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/interpolate","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolate","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/interpolate.md","tags":[],"version":"2.x","frontMatter":{"id":"interpolate","title":"Interpolate","sidebar_label":"Interpolate"},"sidebar":"docs","previous":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/getRelativeCoords"},"next":{"title":"runOnJS","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnJS"}},{"id":"api/miscellaneous/interpolateColors","title":"interpolateColor","description":"Maps input range to output colors using linear interpolation. It works just like interpolate function but the output is color string in rgba(r, g, b, a) notation.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/interpolateColors.mdx","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/interpolateColors","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolateColors","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/interpolateColors.mdx","tags":[],"version":"2.x","frontMatter":{"id":"interpolateColors","sidebar_label":"interpolateColor"},"sidebar":"docs","previous":{"title":"runOnUI","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnUI"},"next":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/2.x/guide/compatibility"}},{"id":"api/miscellaneous/runOnJS","title":"runOnJS","description":"When you call a function on the UI thread you can\'t be sure if you\'re calling a worklet or a callback from the JS thread. To make it more transparent we introduced runOnJS, which calls a callback asynchronously. An exception will be thrown if you call a JS callback without this function.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/runonJS.md","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/runOnJS","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnJS","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/runonJS.md","tags":[],"version":"2.x","frontMatter":{"id":"runOnJS","title":"runOnJS","sidebar_label":"runOnJS"},"sidebar":"docs","previous":{"title":"Interpolate","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolate"},"next":{"title":"runOnUI","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnUI"}},{"id":"api/miscellaneous/runOnUI","title":"runOnUI","description":"Enables executing worklet functions on the UI thread. Note that UI execution is asynchronous from the caller\u2019s perspective. When you pass arguments, they will be copied to the UI context.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/runOnUI.md","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/runOnUI","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnUI","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/runOnUI.md","tags":[],"version":"2.x","frontMatter":{"id":"runOnUI","title":"runOnUI","sidebar_label":"runOnUI"},"sidebar":"docs","previous":{"title":"runOnJS","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/runOnJS"},"next":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolateColors"}},{"id":"api/nativeMethods/measure","title":"measure","description":"Determines the location on screen, width, and height in the viewport of the given view synchronously and returns an object with measured dimensions or null if the view cannot be measured.","source":"@site/versioned_docs/version-2.x/api/nativeMethods/measure.md","sourceDirName":"api/nativeMethods","slug":"/api/nativeMethods/measure","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/measure","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/nativeMethods/measure.md","tags":[],"version":"2.x","frontMatter":{"id":"measure","title":"measure","sidebar_label":"measure"},"sidebar":"docs","previous":{"title":"Layout Transitions","permalink":"/react-native-reanimated/docs/2.x/api/LayoutAnimations/layoutTransitions"},"next":{"title":"scrollTo","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/scrollTo"}},{"id":"api/nativeMethods/scrollTo","title":"scrollTo","description":"Provides synchronous scroll on the UI thread to a given offset using an animated ref to a scroll view. This allows performing smooth scrolling without lags (which might have otherwise occurred when it was asynchronous and based on lots of events).","source":"@site/versioned_docs/version-2.x/api/nativeMethods/scrollTo.md","sourceDirName":"api/nativeMethods","slug":"/api/nativeMethods/scrollTo","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/scrollTo","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/nativeMethods/scrollTo.md","tags":[],"version":"2.x","frontMatter":{"id":"scrollTo","title":"scrollTo","sidebar_label":"scrollTo"},"sidebar":"docs","previous":{"title":"measure","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/measure"},"next":{"title":"getRelativeCoords","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/getRelativeCoords"}},{"id":"community","title":"Community","description":"Reanimated community is the best! \ud83c\udf89 We want to say thank you to all community users, and we really appreciate all your activity and commitment. Yours PR, reported issues and many discussions help us in our daily work and it motivates us to develop Reanimated!","source":"@site/versioned_docs/version-2.x/community.md","sourceDirName":".","slug":"/community","permalink":"/react-native-reanimated/docs/2.x/community","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/community.md","tags":[],"version":"2.x","frontMatter":{"id":"community","title":"Community","sidebar_label":"Community"},"sidebar":"docs","previous":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/2.x/tutorials/LayoutAnimations/layoutAnimations"}},{"id":"fundamentals/about","title":"About React Native Reanimated","description":"Reanimated v2 only supports react-native 0.62+","source":"@site/versioned_docs/version-2.x/fundamentals/about.md","sourceDirName":"fundamentals","slug":"/","permalink":"/react-native-reanimated/docs/2.x/","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/about.md","tags":[],"version":"2.x","frontMatter":{"slug":"/","title":"About React Native Reanimated","sidebar_label":"About"},"sidebar":"docs","next":{"title":"Installation","permalink":"/react-native-reanimated/docs/2.x/fundamentals/installation"}},{"id":"fundamentals/animations","title":"Animations","description":"Animations are first-class citizens in Reanimated 2.","source":"@site/versioned_docs/version-2.x/fundamentals/animations.md","sourceDirName":"fundamentals","slug":"/fundamentals/animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/animations.md","tags":[],"version":"2.x","frontMatter":{"id":"animations","title":"Animations","sidebar_label":"Animations"},"sidebar":"docs","previous":{"title":"Shared Values","permalink":"/react-native-reanimated/docs/2.x/fundamentals/shared-values"},"next":{"title":"Events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/events"}},{"id":"fundamentals/custom_events","title":"Custom Events","description":"Apart from gestures and scroll events, Reanimated 2.x exposes a low-level API to create custom animated event handlers for custom animated components. With this API you can create handler hooks similar to the useAnimatedGestureHandler and useAnimatedScrollHandler.","source":"@site/versioned_docs/version-2.x/fundamentals/custom_events.md","sourceDirName":"fundamentals","slug":"/fundamentals/custom_events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/custom_events","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/custom_events.md","tags":[],"version":"2.x","frontMatter":{"id":"custom_events","title":"Custom Events","sidebar_label":"Custom Events"},"sidebar":"docs","previous":{"title":"Events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/events"},"next":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/layout_animations"}},{"id":"fundamentals/events","title":"Events","description":"In the real world nothing changes instantly\u2013there is always something between the states. When we touch a book we don\'t expect it to open instantly on a certain page. To make mobile apps feel more natural to the user, we use animations to smoothen out user interactions with the app user interface.","source":"@site/versioned_docs/version-2.x/fundamentals/events.md","sourceDirName":"fundamentals","slug":"/fundamentals/events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/events","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/events.md","tags":[],"version":"2.x","frontMatter":{"id":"events","title":"Events","sidebar_label":"Events"},"sidebar":"docs","previous":{"title":"Animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/animations"},"next":{"title":"Custom Events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/custom_events"}},{"id":"fundamentals/installation","title":"Installation","description":"Installing Reanimated requires a couple of additional steps compared to installing most of the popular react-native packages.","source":"@site/versioned_docs/version-2.x/fundamentals/installation.md","sourceDirName":"fundamentals","slug":"/fundamentals/installation","permalink":"/react-native-reanimated/docs/2.x/fundamentals/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/installation.md","tags":[],"version":"2.x","frontMatter":{"id":"installation","title":"Installation","sidebar_label":"Installation"},"sidebar":"docs","previous":{"title":"About","permalink":"/react-native-reanimated/docs/2.x/"},"next":{"title":"Worklets","permalink":"/react-native-reanimated/docs/2.x/fundamentals/worklets"}},{"id":"fundamentals/layout_animations","title":"Layout Animations","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/fundamentals/layout_animations.md","sourceDirName":"fundamentals","slug":"/fundamentals/layout_animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/layout_animations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/layout_animations.md","tags":[],"version":"2.x","frontMatter":{"id":"layout_animations","title":"Layout Animations","sidebar_label":"Layout Animations"},"sidebar":"docs","previous":{"title":"Custom Events","permalink":"/react-native-reanimated/docs/2.x/fundamentals/custom_events"},"next":{"title":"Migration from v1","permalink":"/react-native-reanimated/docs/2.x/fundamentals/migration"}},{"id":"fundamentals/migration","title":"Migrating from Reanimated 1.x","description":"We wanted to make it possible to migrate from Reanimated 1 to Reanimated 2 incrementally.","source":"@site/versioned_docs/version-2.x/fundamentals/migration.md","sourceDirName":"fundamentals","slug":"/fundamentals/migration","permalink":"/react-native-reanimated/docs/2.x/fundamentals/migration","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/migration.md","tags":[],"version":"2.x","frontMatter":{"id":"migration","title":"Migrating from Reanimated 1.x","sidebar_label":"Migration from v1"},"sidebar":"docs","previous":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/layout_animations"},"next":{"title":"Web Support","permalink":"/react-native-reanimated/docs/2.x/fundamentals/web-support"}},{"id":"fundamentals/shared-values","title":"Shared Values","description":"Shared Values are among the fundamental concepts behind Reanimated 2.0.","source":"@site/versioned_docs/version-2.x/fundamentals/shared-values.md","sourceDirName":"fundamentals","slug":"/fundamentals/shared-values","permalink":"/react-native-reanimated/docs/2.x/fundamentals/shared-values","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/shared-values.md","tags":[],"version":"2.x","frontMatter":{"id":"shared-values","title":"Shared Values","sidebar_label":"Shared Values"},"sidebar":"docs","previous":{"title":"Worklets","permalink":"/react-native-reanimated/docs/2.x/fundamentals/worklets"},"next":{"title":"Animations","permalink":"/react-native-reanimated/docs/2.x/fundamentals/animations"}},{"id":"fundamentals/troubleshooting","title":"Troubleshooting common problems","description":"TypeError: Cannot convert undefined value to object on someVariable._closure","source":"@site/versioned_docs/version-2.x/fundamentals/troubleshooting.md","sourceDirName":"fundamentals","slug":"/fundamentals/troubleshooting","permalink":"/react-native-reanimated/docs/2.x/fundamentals/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/troubleshooting.md","tags":[],"version":"2.x","frontMatter":{"id":"troubleshooting","title":"Troubleshooting common problems","sidebar_label":"Troubleshooting"},"sidebar":"docs","previous":{"title":"Web Support","permalink":"/react-native-reanimated/docs/2.x/fundamentals/web-support"},"next":{"title":"cancelAnimation","permalink":"/react-native-reanimated/docs/2.x/api/animations/cancelAnimation"}},{"id":"fundamentals/web-support","title":"Web Support","description":"Since the","source":"@site/versioned_docs/version-2.x/fundamentals/web-support.md","sourceDirName":"fundamentals","slug":"/fundamentals/web-support","permalink":"/react-native-reanimated/docs/2.x/fundamentals/web-support","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/web-support.md","tags":[],"version":"2.x","frontMatter":{"id":"web-support","title":"Web Support","sidebar_label":"Web Support"},"sidebar":"docs","previous":{"title":"Migration from v1","permalink":"/react-native-reanimated/docs/2.x/fundamentals/migration"},"next":{"title":"Troubleshooting","permalink":"/react-native-reanimated/docs/2.x/fundamentals/troubleshooting"}},{"id":"fundamentals/worklets","title":"Worklets","description":"The ultimate goal of worklets was for them to define small pieces of JavaScript code that we run when updating view properties or reacting to events on the UI thread. A natural construct in JavaScript for such a purpose was a simple method. With Reanimated 2 we spawn a secondary JS context on the UI thread that then is able to run JavaScript functions. The only thing that is needed is for that function to have the \u201cworklet\u201d directive at the top:","source":"@site/versioned_docs/version-2.x/fundamentals/worklets.md","sourceDirName":"fundamentals","slug":"/fundamentals/worklets","permalink":"/react-native-reanimated/docs/2.x/fundamentals/worklets","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/fundamentals/worklets.md","tags":[],"version":"2.x","frontMatter":{"id":"worklets","title":"Worklets","sidebar_label":"Worklets"},"sidebar":"docs","previous":{"title":"Installation","permalink":"/react-native-reanimated/docs/2.x/fundamentals/installation"},"next":{"title":"Shared Values","permalink":"/react-native-reanimated/docs/2.x/fundamentals/shared-values"}},{"id":"guide/compatibility","title":"Compatibility table","description":"Reanimated 2 won\'t receive support for newest React Native versions. To get the latest React Native features and updates, please upgrade to the newer version of Reanimated.","source":"@site/versioned_docs/version-2.x/guide/compatibility.mdx","sourceDirName":"guide","slug":"/guide/compatibility","permalink":"/react-native-reanimated/docs/2.x/guide/compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/guide/compatibility.mdx","tags":[],"version":"2.x","frontMatter":{"id":"compatibility","sidebar_label":"Compatibility"},"sidebar":"docs","previous":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolateColors"},"next":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/2.x/guide/testing"}},{"id":"guide/debugging","title":"Debugging worklets","description":"Due to Reanimated\'s unique architecture and usage of a second JS runtime, debugging","source":"@site/versioned_docs/version-2.x/guide/debugging.mdx","sourceDirName":"guide","slug":"/guide/debugging","permalink":"/react-native-reanimated/docs/2.x/guide/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/guide/debugging.mdx","tags":[],"version":"2.x","frontMatter":{"id":"debugging","title":"Debugging worklets","sidebar_label":"Debugging worklets"},"sidebar":"docs","previous":{"title":"Testing with Jest","permalink":"/react-native-reanimated/docs/2.x/guide/testing"},"next":{"title":"Layout Animations","permalink":"/react-native-reanimated/docs/2.x/tutorials/LayoutAnimations/layoutAnimations"}},{"id":"guide/testing","title":"Testing with Jest","description":"Reanimated test mocks use web implementation of Reanimated2. Before you begin using Reanimated mocks you need some setup actions.","source":"@site/versioned_docs/version-2.x/guide/testing.md","sourceDirName":"guide","slug":"/guide/testing","permalink":"/react-native-reanimated/docs/2.x/guide/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/guide/testing.md","tags":[],"version":"2.x","frontMatter":{"id":"testing","title":"Testing with Jest","sidebar_label":"Testing with Jest"},"sidebar":"docs","previous":{"title":"Compatibility","permalink":"/react-native-reanimated/docs/2.x/guide/compatibility"},"next":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/2.x/guide/debugging"}},{"id":"tutorials/LayoutAnimations/layoutAnimations","title":"How to easily animate your screens and components","description":"Layout Animations are available since v2.3.0","source":"@site/versioned_docs/version-2.x/tutorials/LayoutAnimations/animated_list.mdx","sourceDirName":"tutorials/LayoutAnimations","slug":"/tutorials/LayoutAnimations/layoutAnimations","permalink":"/react-native-reanimated/docs/2.x/tutorials/LayoutAnimations/layoutAnimations","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/tutorials/LayoutAnimations/animated_list.mdx","tags":[],"version":"2.x","frontMatter":{"id":"layoutAnimations","title":"How to easily animate your screens and components","sidebar_label":"Layout Animations","hide_table_of_contents":true},"sidebar":"docs","previous":{"title":"Debugging worklets","permalink":"/react-native-reanimated/docs/2.x/guide/debugging"},"next":{"title":"Community","permalink":"/react-native-reanimated/docs/2.x/community"}}],"drafts":[],"sidebars":{"docs":[{"type":"category","label":"Fundamentals","items":[{"type":"doc","id":"fundamentals/about"},{"type":"doc","id":"fundamentals/installation"},{"type":"doc","id":"fundamentals/worklets"},{"type":"doc","id":"fundamentals/shared-values"},{"type":"doc","id":"fundamentals/animations"},{"type":"doc","id":"fundamentals/events"},{"type":"doc","id":"fundamentals/custom_events"},{"type":"doc","id":"fundamentals/layout_animations"},{"type":"doc","id":"fundamentals/migration"},{"type":"doc","id":"fundamentals/web-support"},{"type":"doc","id":"fundamentals/troubleshooting"}],"collapsed":false,"collapsible":false},{"type":"category","label":"API Reference","items":[{"type":"category","label":"Animations","items":[{"type":"doc","id":"api/animations/cancelAnimation"},{"type":"doc","id":"api/animations/withDecay"},{"type":"doc","id":"api/animations/withDelay"},{"type":"doc","id":"api/animations/withRepeat"},{"type":"doc","id":"api/animations/withSequence"},{"type":"doc","id":"api/animations/withSpring"},{"type":"doc","id":"api/animations/withTiming"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Hooks","items":[{"type":"doc","id":"api/hooks/useAnimatedGestureHandler"},{"type":"doc","id":"api/hooks/useAnimatedKeyboard"},{"type":"doc","id":"api/hooks/useAnimatedProps"},{"type":"doc","id":"api/hooks/useAnimatedReaction"},{"type":"doc","id":"api/hooks/useAnimatedRef"},{"type":"doc","id":"api/hooks/useAnimatedScrollHandler"},{"type":"doc","id":"api/hooks/useAnimatedSensor"},{"type":"doc","id":"api/hooks/useAnimatedStyle"},{"type":"doc","id":"api/hooks/useDerivedValue"},{"type":"doc","id":"api/hooks/useEvent"},{"type":"doc","id":"api/hooks/useFrameCallback"},{"type":"doc","id":"api/hooks/useHandler"},{"type":"doc","id":"api/hooks/useScrollViewOffset"},{"type":"doc","id":"api/hooks/useSharedValue"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Layout Animations","items":[{"type":"doc","id":"api/LayoutAnimations/customAnimations"},{"type":"doc","id":"api/LayoutAnimations/entryAnimations"},{"type":"doc","id":"api/LayoutAnimations/exitAnimations"},{"type":"doc","id":"api/LayoutAnimations/keyframeAnimations"},{"type":"doc","id":"api/LayoutAnimations/layoutTransitions"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Native methods","items":[{"type":"doc","id":"api/nativeMethods/measure"},{"type":"doc","id":"api/nativeMethods/scrollTo"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Miscellaneous","items":[{"type":"doc","id":"api/miscellaneous/getRelativeCoords"},{"type":"doc","id":"api/miscellaneous/interpolate"},{"type":"doc","id":"api/miscellaneous/runOnJS"},{"type":"doc","id":"api/miscellaneous/runOnUI"},{"type":"doc","id":"api/miscellaneous/interpolateColors"}],"collapsed":false,"collapsible":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Guides","items":[{"type":"doc","id":"guide/compatibility"},{"type":"doc","id":"guide/testing"},{"type":"doc","id":"guide/debugging"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Tutorials","items":[{"type":"doc","id":"tutorials/LayoutAnimations/layoutAnimations"}],"collapsed":false,"collapsible":false},{"type":"doc","id":"community"}]}},{"versionName":"1.x","label":"1.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-1.x","path":"/react-native-reanimated/docs/1.x","tagsPath":"/react-native-reanimated/docs/1.x/tags","editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x","editUrlLocalized":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-1.x","isLast":false,"sidebarFilePath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_sidebars/version-1.x-sidebars.json","contentPath":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/versioned_docs/version-1.x","contentPathLocalized":"/home/runner/work/react-native-reanimated/react-native-reanimated/docs/docs-reanimated/i18n/en/docusaurus-plugin-content-docs/version-1.x","docs":[{"id":"about","title":"About React Native Reanimated","description":"React Native\'s Animated library reimplemented.","source":"@site/versioned_docs/version-1.x/about.md","sourceDirName":".","slug":"/","permalink":"/react-native-reanimated/docs/1.x/","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/about.md","tags":[],"version":"1.x","frontMatter":{"slug":"/","title":"About React Native Reanimated","sidebar_label":"About"},"sidebar":"docs","next":{"title":"Getting started","permalink":"/react-native-reanimated/docs/1.x/getting_started"}},{"id":"animations/decay","title":"Decay","description":"Updates position and velocity nodes by running a single step of animation each time this node evaluates. State variable finished is set to 1 when the animation gets to the final point (that is the velocity drops under the level of significance). The time state node is populated automatically by this node and refers to the last clock time this node got evaluated. It is expected to be reset each time we want to restart the animation. Decay animation can be configured using deceleration config param and it controls how fast the animation decelerates. The value should be between 0 and 1 but only values that are close to 1 will yield meaningful results.","source":"@site/versioned_docs/version-1.x/animations/decay.md","sourceDirName":"animations","slug":"/animations/decay","permalink":"/react-native-reanimated/docs/1.x/animations/decay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/animations/decay.md","tags":[],"version":"1.x","frontMatter":{"id":"decay","title":"Decay","sidebar_label":"Decay"},"sidebar":"docs","previous":{"title":"Timing","permalink":"/react-native-reanimated/docs/1.x/animations/timing"},"next":{"title":"Spring","permalink":"/react-native-reanimated/docs/1.x/animations/spring"}},{"id":"animations/spring","title":"Spring","description":"When evaluated, updates position and velocity nodes by running a single step of spring based animation. Check the original Animated API docs to learn about the config parameters like damping, mass, stiffness, overshootClamping, restSpeedThreshold and restDisplacementThreshold. The finished state updates to 1 when the position reaches the destination set by toValue. The time state variable also updates when the node evaluates and it represents the clock value at the time when the node got evaluated for the last time. It is expected that time variable is reset before spring animation can be restarted.","source":"@site/versioned_docs/version-1.x/animations/spring.md","sourceDirName":"animations","slug":"/animations/spring","permalink":"/react-native-reanimated/docs/1.x/animations/spring","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/animations/spring.md","tags":[],"version":"1.x","frontMatter":{"id":"spring","title":"Spring","sidebar_label":"Spring"},"sidebar":"docs","previous":{"title":"Decay","permalink":"/react-native-reanimated/docs/1.x/animations/decay"},"next":{"title":"SpringUtils","permalink":"/react-native-reanimated/docs/1.x/animations/spring_utils"}},{"id":"animations/spring_utils","title":"SpringUtils","description":"For developers\' convenience, it\'s possible to use a different way of configuring spring animation which follows behavior known from React Native core.","source":"@site/versioned_docs/version-1.x/animations/springUtils.md","sourceDirName":"animations","slug":"/animations/spring_utils","permalink":"/react-native-reanimated/docs/1.x/animations/spring_utils","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/animations/springUtils.md","tags":[],"version":"1.x","frontMatter":{"id":"spring_utils","title":"SpringUtils","sidebar_label":"SpringUtils"},"sidebar":"docs","previous":{"title":"Spring","permalink":"/react-native-reanimated/docs/1.x/animations/spring"},"next":{"title":"abs","permalink":"/react-native-reanimated/docs/1.x/nodes/abs"}},{"id":"animations/timing","title":"Timing","description":"Updates position node by running timing based animation from a given position to a destination determined by toValue. The animation is expected to last duration milliseconds and use easing function that could be set to one of the nodes exported by the Easing object.","source":"@site/versioned_docs/version-1.x/animations/timing.md","sourceDirName":"animations","slug":"/animations/timing","permalink":"/react-native-reanimated/docs/1.x/animations/timing","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/animations/timing.md","tags":[],"version":"1.x","frontMatter":{"id":"timing","title":"Timing","sidebar_label":"Timing"},"sidebar":"docs","previous":{"title":"Clock","permalink":"/react-native-reanimated/docs/1.x/clock"},"next":{"title":"Decay","permalink":"/react-native-reanimated/docs/1.x/animations/decay"}},{"id":"clock","title":"Clock","description":"Original Animated API makes an \\"animation\\" object a first class citizen.","source":"@site/versioned_docs/version-1.x/clock.md","sourceDirName":".","slug":"/clock","permalink":"/react-native-reanimated/docs/1.x/clock","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/clock.md","tags":[],"version":"1.x","frontMatter":{"id":"clock","title":"Clock","sidebar_label":"Clock"},"sidebar":"docs","previous":{"title":"Value","permalink":"/react-native-reanimated/docs/1.x/value"},"next":{"title":"Timing","permalink":"/react-native-reanimated/docs/1.x/animations/timing"}},{"id":"code","title":"Animated.Code","description":"Animated.Code component allows you to define reanimated nodes that you want to execute when their input nodes updates, but aren\'t necessarily strictly related to some view properties and hence it does not feel right to place them under translate or other prop of an Animated.View. This component renders null, so you can place it in any place you want in your render method. It is required that your code is put inside component as we rely on componentDidMount and componentWillUnmount callbacks to install and cleanup animated nodes. Note that the code you put is going to be executed only once. We currently have no way of telling if your code changes and so it will only be run in componentDidMount. If you wish for your reanimated nodes to be updated when the component updates, you can update the key property of the Animated.Code component, which will effectively unmount the old and mount the new versions of it in the React tree. You can provide dependencies key which works just like the second argument in useCode.","source":"@site/versioned_docs/version-1.x/code.md","sourceDirName":".","slug":"/code","permalink":"/react-native-reanimated/docs/1.x/code","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/code.md","tags":[],"version":"1.x","frontMatter":{"id":"code","title":"Animated.Code","sidebar_label":"Animated.Code"},"sidebar":"docs","previous":{"title":"View, Props, etc","permalink":"/react-native-reanimated/docs/1.x/view"}},{"id":"config","title":"Additional configuration","description":"Reanimated exports two functions that control which properties can be animated natively:","source":"@site/versioned_docs/version-1.x/config.md","sourceDirName":".","slug":"/config","permalink":"/react-native-reanimated/docs/1.x/config","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/config.md","tags":[],"version":"1.x","frontMatter":{"id":"config","title":"Additional configuration","sidebar_label":"Additional configuration"},"sidebar":"docs","previous":{"title":"Transitions","permalink":"/react-native-reanimated/docs/1.x/transitions"},"next":{"title":"Value","permalink":"/react-native-reanimated/docs/1.x/value"}},{"id":"declarative","title":"Declarative Animation API","description":"Invoking animation differs from the way it is done when using the original Animated API.","source":"@site/versioned_docs/version-1.x/declarative.md","sourceDirName":".","slug":"/declarative","permalink":"/react-native-reanimated/docs/1.x/declarative","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/declarative.md","tags":[],"version":"1.x","frontMatter":{"id":"declarative","title":"Declarative Animation API","sidebar_label":"Declarative Animation API"},"sidebar":"docs","previous":{"title":"Getting started","permalink":"/react-native-reanimated/docs/1.x/getting_started"},"next":{"title":"Examples","permalink":"/react-native-reanimated/docs/1.x/examples"}},{"id":"event","title":"Event handling with reanimated nodes","description":"react-native-reanimated\'s new syntax is possible to be used with Animated.event. Instead of providing only a mapping from event fields to animated nodes, it is allowed to write a function that takes reanimated values map as an input and return a block (or any other reanimated function) that will be then used to handle the event.","source":"@site/versioned_docs/version-1.x/event.md","sourceDirName":".","slug":"/event","permalink":"/react-native-reanimated/docs/1.x/event","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/event.md","tags":[],"version":"1.x","frontMatter":{"id":"event","title":"Event handling with reanimated nodes","sidebar_label":"Event handling"},"sidebar":"docs","previous":{"title":"set","permalink":"/react-native-reanimated/docs/1.x/nodes/set"},"next":{"title":"View, Props, etc","permalink":"/react-native-reanimated/docs/1.x/view"}},{"id":"examples","title":"Examples","description":"The source code for the example (showcase) app is under the Example/ directory.","source":"@site/versioned_docs/version-1.x/examples.md","sourceDirName":".","slug":"/examples","permalink":"/react-native-reanimated/docs/1.x/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/examples.md","tags":[],"version":"1.x","frontMatter":{"id":"examples","title":"Examples","sidebar_label":"Examples"},"sidebar":"docs","previous":{"title":"Declarative Animation API","permalink":"/react-native-reanimated/docs/1.x/declarative"},"next":{"title":"Transitions","permalink":"/react-native-reanimated/docs/1.x/transitions"}},{"id":"getting_started","title":"Getting started","description":"Before you get started you should definitely familiarize yourself with the original Animated API. It will do you well to be comfortable with how animations are generally done in Animated. (Fun Fact: Reanimated is also backwards compatible with the Animated API. \ud83d\ude4c)","source":"@site/versioned_docs/version-1.x/getting-started.md","sourceDirName":".","slug":"/getting_started","permalink":"/react-native-reanimated/docs/1.x/getting_started","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/getting-started.md","tags":[],"version":"1.x","frontMatter":{"id":"getting_started","title":"Getting started","sidebar_label":"Getting started"},"sidebar":"docs","previous":{"title":"About","permalink":"/react-native-reanimated/docs/1.x/"},"next":{"title":"Declarative Animation API","permalink":"/react-native-reanimated/docs/1.x/declarative"}},{"id":"nodes/abs","title":"abs","description":"abs","source":"@site/versioned_docs/version-1.x/nodes/abs.md","sourceDirName":"nodes","slug":"/nodes/abs","permalink":"/react-native-reanimated/docs/1.x/nodes/abs","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/abs.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"SpringUtils","permalink":"/react-native-reanimated/docs/1.x/animations/spring_utils"},"next":{"title":"add","permalink":"/react-native-reanimated/docs/1.x/nodes/add"}},{"id":"nodes/acc","title":"acc","description":"acc","source":"@site/versioned_docs/version-1.x/nodes/acc.md","sourceDirName":"nodes","slug":"/nodes/acc","permalink":"/react-native-reanimated/docs/1.x/nodes/acc","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/acc.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"stopClock","permalink":"/react-native-reanimated/docs/1.x/nodes/stopClock"},"next":{"title":"block","permalink":"/react-native-reanimated/docs/1.x/nodes/block"}},{"id":"nodes/acos","title":"acos","description":"acos","source":"@site/versioned_docs/version-1.x/nodes/acos.md","sourceDirName":"nodes","slug":"/nodes/acos","permalink":"/react-native-reanimated/docs/1.x/nodes/acos","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/acos.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"sub","permalink":"/react-native-reanimated/docs/1.x/nodes/sub"},"next":{"title":"asin","permalink":"/react-native-reanimated/docs/1.x/nodes/asin"}},{"id":"nodes/add","title":"add","description":"add","source":"@site/versioned_docs/version-1.x/nodes/add.md","sourceDirName":"nodes","slug":"/nodes/add","permalink":"/react-native-reanimated/docs/1.x/nodes/add","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/add.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"abs","permalink":"/react-native-reanimated/docs/1.x/nodes/abs"},"next":{"title":"ceil","permalink":"/react-native-reanimated/docs/1.x/nodes/ceil"}},{"id":"nodes/and","title":"and","description":"and","source":"@site/versioned_docs/version-1.x/nodes/and.md","sourceDirName":"nodes","slug":"/nodes/and","permalink":"/react-native-reanimated/docs/1.x/nodes/and","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/and.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"tan","permalink":"/react-native-reanimated/docs/1.x/nodes/tan"},"next":{"title":"eq","permalink":"/react-native-reanimated/docs/1.x/nodes/eq"}},{"id":"nodes/asin","title":"asin","description":"asin","source":"@site/versioned_docs/version-1.x/nodes/asin.md","sourceDirName":"nodes","slug":"/nodes/asin","permalink":"/react-native-reanimated/docs/1.x/nodes/asin","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/asin.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"acos","permalink":"/react-native-reanimated/docs/1.x/nodes/acos"},"next":{"title":"atan","permalink":"/react-native-reanimated/docs/1.x/nodes/atan"}},{"id":"nodes/atan","title":"atan","description":"atan","source":"@site/versioned_docs/version-1.x/nodes/atan.md","sourceDirName":"nodes","slug":"/nodes/atan","permalink":"/react-native-reanimated/docs/1.x/nodes/atan","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/atan.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"asin","permalink":"/react-native-reanimated/docs/1.x/nodes/asin"},"next":{"title":"cos","permalink":"/react-native-reanimated/docs/1.x/nodes/cos"}},{"id":"nodes/block","title":"block","description":"block","source":"@site/versioned_docs/version-1.x/nodes/block.md","sourceDirName":"nodes","slug":"/nodes/block","permalink":"/react-native-reanimated/docs/1.x/nodes/block","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/block.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"acc","permalink":"/react-native-reanimated/docs/1.x/nodes/acc"},"next":{"title":"call","permalink":"/react-native-reanimated/docs/1.x/nodes/call"}},{"id":"nodes/call","title":"call","description":"call","source":"@site/versioned_docs/version-1.x/nodes/call.md","sourceDirName":"nodes","slug":"/nodes/call","permalink":"/react-native-reanimated/docs/1.x/nodes/call","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/call.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"block","permalink":"/react-native-reanimated/docs/1.x/nodes/block"},"next":{"title":"color","permalink":"/react-native-reanimated/docs/1.x/nodes/color"}},{"id":"nodes/ceil","title":"ceil","description":"ceil","source":"@site/versioned_docs/version-1.x/nodes/ceil.md","sourceDirName":"nodes","slug":"/nodes/ceil","permalink":"/react-native-reanimated/docs/1.x/nodes/ceil","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/ceil.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"add","permalink":"/react-native-reanimated/docs/1.x/nodes/add"},"next":{"title":"divide","permalink":"/react-native-reanimated/docs/1.x/nodes/divide"}},{"id":"nodes/clockRunning","title":"clockRunning","description":"clockRunning","source":"@site/versioned_docs/version-1.x/nodes/clockRunning.md","sourceDirName":"nodes","slug":"/nodes/clockRunning","permalink":"/react-native-reanimated/docs/1.x/nodes/clockRunning","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/clockRunning.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"or","permalink":"/react-native-reanimated/docs/1.x/nodes/or"},"next":{"title":"startClock","permalink":"/react-native-reanimated/docs/1.x/nodes/startClock"}},{"id":"nodes/color","title":"color","description":"color","source":"@site/versioned_docs/version-1.x/nodes/color.md","sourceDirName":"nodes","slug":"/nodes/color","permalink":"/react-native-reanimated/docs/1.x/nodes/color","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/color.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"call","permalink":"/react-native-reanimated/docs/1.x/nodes/call"},"next":{"title":"concat","permalink":"/react-native-reanimated/docs/1.x/nodes/concat"}},{"id":"nodes/concat","title":"concat","description":"concat","source":"@site/versioned_docs/version-1.x/nodes/concat.md","sourceDirName":"nodes","slug":"/nodes/concat","permalink":"/react-native-reanimated/docs/1.x/nodes/concat","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/concat.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"color","permalink":"/react-native-reanimated/docs/1.x/nodes/color"},"next":{"title":"cond","permalink":"/react-native-reanimated/docs/1.x/nodes/cond"}},{"id":"nodes/cond","title":"cond","description":"cond","source":"@site/versioned_docs/version-1.x/nodes/cond.md","sourceDirName":"nodes","slug":"/nodes/cond","permalink":"/react-native-reanimated/docs/1.x/nodes/cond","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/cond.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"concat","permalink":"/react-native-reanimated/docs/1.x/nodes/concat"},"next":{"title":"debug","permalink":"/react-native-reanimated/docs/1.x/nodes/debug"}},{"id":"nodes/cos","title":"cos","description":"cos","source":"@site/versioned_docs/version-1.x/nodes/cos.md","sourceDirName":"nodes","slug":"/nodes/cos","permalink":"/react-native-reanimated/docs/1.x/nodes/cos","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/cos.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"atan","permalink":"/react-native-reanimated/docs/1.x/nodes/atan"},"next":{"title":"sin","permalink":"/react-native-reanimated/docs/1.x/nodes/sin"}},{"id":"nodes/debug","title":"debug","description":"debug","source":"@site/versioned_docs/version-1.x/nodes/debug.md","sourceDirName":"nodes","slug":"/nodes/debug","permalink":"/react-native-reanimated/docs/1.x/nodes/debug","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/debug.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"cond","permalink":"/react-native-reanimated/docs/1.x/nodes/cond"},"next":{"title":"defined","permalink":"/react-native-reanimated/docs/1.x/nodes/defined"}},{"id":"nodes/defined","title":"defined","description":"defined","source":"@site/versioned_docs/version-1.x/nodes/defined.md","sourceDirName":"nodes","slug":"/nodes/defined","permalink":"/react-native-reanimated/docs/1.x/nodes/defined","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/defined.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"debug","permalink":"/react-native-reanimated/docs/1.x/nodes/debug"},"next":{"title":"diff","permalink":"/react-native-reanimated/docs/1.x/nodes/diff"}},{"id":"nodes/diff","title":"diff","description":"diff","source":"@site/versioned_docs/version-1.x/nodes/diff.md","sourceDirName":"nodes","slug":"/nodes/diff","permalink":"/react-native-reanimated/docs/1.x/nodes/diff","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/diff.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"defined","permalink":"/react-native-reanimated/docs/1.x/nodes/defined"},"next":{"title":"diffClamp","permalink":"/react-native-reanimated/docs/1.x/nodes/diffClamp"}},{"id":"nodes/diffClamp","title":"diffClamp","description":"diffClamp","source":"@site/versioned_docs/version-1.x/nodes/diffClamp.md","sourceDirName":"nodes","slug":"/nodes/diffClamp","permalink":"/react-native-reanimated/docs/1.x/nodes/diffClamp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/diffClamp.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"diff","permalink":"/react-native-reanimated/docs/1.x/nodes/diff"},"next":{"title":"event","permalink":"/react-native-reanimated/docs/1.x/nodes/event"}},{"id":"nodes/divide","title":"divide","description":"divide","source":"@site/versioned_docs/version-1.x/nodes/divide.md","sourceDirName":"nodes","slug":"/nodes/divide","permalink":"/react-native-reanimated/docs/1.x/nodes/divide","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/divide.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"ceil","permalink":"/react-native-reanimated/docs/1.x/nodes/ceil"},"next":{"title":"exp","permalink":"/react-native-reanimated/docs/1.x/nodes/exp"}},{"id":"nodes/eq","title":"eq","description":"eq","source":"@site/versioned_docs/version-1.x/nodes/eq.md","sourceDirName":"nodes","slug":"/nodes/eq","permalink":"/react-native-reanimated/docs/1.x/nodes/eq","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/eq.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"and","permalink":"/react-native-reanimated/docs/1.x/nodes/and"},"next":{"title":"greaterOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterOrEq"}},{"id":"nodes/event","title":"event","description":"event","source":"@site/versioned_docs/version-1.x/nodes/event.md","sourceDirName":"nodes","slug":"/nodes/event","permalink":"/react-native-reanimated/docs/1.x/nodes/event","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/event.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"diffClamp","permalink":"/react-native-reanimated/docs/1.x/nodes/diffClamp"},"next":{"title":"interpolate","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolate"}},{"id":"nodes/exp","title":"exp","description":"exp","source":"@site/versioned_docs/version-1.x/nodes/exp.md","sourceDirName":"nodes","slug":"/nodes/exp","permalink":"/react-native-reanimated/docs/1.x/nodes/exp","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/exp.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"divide","permalink":"/react-native-reanimated/docs/1.x/nodes/divide"},"next":{"title":"floor","permalink":"/react-native-reanimated/docs/1.x/nodes/floor"}},{"id":"nodes/floor","title":"floor","description":"floor","source":"@site/versioned_docs/version-1.x/nodes/floor.md","sourceDirName":"nodes","slug":"/nodes/floor","permalink":"/react-native-reanimated/docs/1.x/nodes/floor","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/floor.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"exp","permalink":"/react-native-reanimated/docs/1.x/nodes/exp"},"next":{"title":"log","permalink":"/react-native-reanimated/docs/1.x/nodes/log"}},{"id":"nodes/greaterOrEq","title":"greaterOrEq","description":"greaterOrEq","source":"@site/versioned_docs/version-1.x/nodes/greaterOrEq.md","sourceDirName":"nodes","slug":"/nodes/greaterOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterOrEq","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/greaterOrEq.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"eq","permalink":"/react-native-reanimated/docs/1.x/nodes/eq"},"next":{"title":"greaterThan","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterThan"}},{"id":"nodes/greaterThan","title":"greaterThan","description":"greaterThan","source":"@site/versioned_docs/version-1.x/nodes/greaterThan.md","sourceDirName":"nodes","slug":"/nodes/greaterThan","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterThan","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/greaterThan.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"greaterOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterOrEq"},"next":{"title":"lessOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/lessOrEq"}},{"id":"nodes/interpolate","title":"interpolate","description":"interpolate","source":"@site/versioned_docs/version-1.x/nodes/interpolate.md","sourceDirName":"nodes","slug":"/nodes/interpolate","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolate","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/interpolate.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"event","permalink":"/react-native-reanimated/docs/1.x/nodes/event"},"next":{"title":"interpolateColors","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolateColors"}},{"id":"nodes/interpolateColors","title":"interpolateColors","description":"interpolateColors","source":"@site/versioned_docs/version-1.x/nodes/interpolateColors.md","sourceDirName":"nodes","slug":"/nodes/interpolateColors","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolateColors","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/interpolateColors.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"interpolate","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolate"},"next":{"title":"onChange","permalink":"/react-native-reanimated/docs/1.x/nodes/onChange"}},{"id":"nodes/lessOrEq","title":"lessOrEq","description":"lessOrEq","source":"@site/versioned_docs/version-1.x/nodes/lessOrEq.md","sourceDirName":"nodes","slug":"/nodes/lessOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/lessOrEq","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/lessOrEq.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"greaterThan","permalink":"/react-native-reanimated/docs/1.x/nodes/greaterThan"},"next":{"title":"lessThan","permalink":"/react-native-reanimated/docs/1.x/nodes/lessThan"}},{"id":"nodes/lessThan","title":"lessThan","description":"lessThan","source":"@site/versioned_docs/version-1.x/nodes/lessThan.md","sourceDirName":"nodes","slug":"/nodes/lessThan","permalink":"/react-native-reanimated/docs/1.x/nodes/lessThan","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/lessThan.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"lessOrEq","permalink":"/react-native-reanimated/docs/1.x/nodes/lessOrEq"},"next":{"title":"neq","permalink":"/react-native-reanimated/docs/1.x/nodes/neq"}},{"id":"nodes/log","title":"log","description":"log","source":"@site/versioned_docs/version-1.x/nodes/log.md","sourceDirName":"nodes","slug":"/nodes/log","permalink":"/react-native-reanimated/docs/1.x/nodes/log","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/log.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"floor","permalink":"/react-native-reanimated/docs/1.x/nodes/floor"},"next":{"title":"max","permalink":"/react-native-reanimated/docs/1.x/nodes/max"}},{"id":"nodes/max","title":"max","description":"max","source":"@site/versioned_docs/version-1.x/nodes/max.md","sourceDirName":"nodes","slug":"/nodes/max","permalink":"/react-native-reanimated/docs/1.x/nodes/max","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/max.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"log","permalink":"/react-native-reanimated/docs/1.x/nodes/log"},"next":{"title":"min","permalink":"/react-native-reanimated/docs/1.x/nodes/min"}},{"id":"nodes/min","title":"min","description":"min","source":"@site/versioned_docs/version-1.x/nodes/min.md","sourceDirName":"nodes","slug":"/nodes/min","permalink":"/react-native-reanimated/docs/1.x/nodes/min","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/min.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"max","permalink":"/react-native-reanimated/docs/1.x/nodes/max"},"next":{"title":"modulo","permalink":"/react-native-reanimated/docs/1.x/nodes/modulo"}},{"id":"nodes/modulo","title":"modulo","description":"modulo","source":"@site/versioned_docs/version-1.x/nodes/modulo.md","sourceDirName":"nodes","slug":"/nodes/modulo","permalink":"/react-native-reanimated/docs/1.x/nodes/modulo","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/modulo.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"min","permalink":"/react-native-reanimated/docs/1.x/nodes/min"},"next":{"title":"multiply","permalink":"/react-native-reanimated/docs/1.x/nodes/multiply"}},{"id":"nodes/multiply","title":"multiply","description":"multiply","source":"@site/versioned_docs/version-1.x/nodes/multiply.md","sourceDirName":"nodes","slug":"/nodes/multiply","permalink":"/react-native-reanimated/docs/1.x/nodes/multiply","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/multiply.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"modulo","permalink":"/react-native-reanimated/docs/1.x/nodes/modulo"},"next":{"title":"pow","permalink":"/react-native-reanimated/docs/1.x/nodes/pow"}},{"id":"nodes/neq","title":"neq","description":"neq","source":"@site/versioned_docs/version-1.x/nodes/neq.md","sourceDirName":"nodes","slug":"/nodes/neq","permalink":"/react-native-reanimated/docs/1.x/nodes/neq","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/neq.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"lessThan","permalink":"/react-native-reanimated/docs/1.x/nodes/lessThan"},"next":{"title":"not","permalink":"/react-native-reanimated/docs/1.x/nodes/not"}},{"id":"nodes/not","title":"not","description":"not","source":"@site/versioned_docs/version-1.x/nodes/not.md","sourceDirName":"nodes","slug":"/nodes/not","permalink":"/react-native-reanimated/docs/1.x/nodes/not","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/not.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"neq","permalink":"/react-native-reanimated/docs/1.x/nodes/neq"},"next":{"title":"or","permalink":"/react-native-reanimated/docs/1.x/nodes/or"}},{"id":"nodes/onChange","title":"onChange","description":"onChange","source":"@site/versioned_docs/version-1.x/nodes/onChange.md","sourceDirName":"nodes","slug":"/nodes/onChange","permalink":"/react-native-reanimated/docs/1.x/nodes/onChange","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/onChange.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"interpolateColors","permalink":"/react-native-reanimated/docs/1.x/nodes/interpolateColors"},"next":{"title":"proc","permalink":"/react-native-reanimated/docs/1.x/nodes/proc"}},{"id":"nodes/or","title":"or","description":"or","source":"@site/versioned_docs/version-1.x/nodes/or.md","sourceDirName":"nodes","slug":"/nodes/or","permalink":"/react-native-reanimated/docs/1.x/nodes/or","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/or.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"not","permalink":"/react-native-reanimated/docs/1.x/nodes/not"},"next":{"title":"clockRunning","permalink":"/react-native-reanimated/docs/1.x/nodes/clockRunning"}},{"id":"nodes/pow","title":"pow","description":"pow","source":"@site/versioned_docs/version-1.x/nodes/pow.md","sourceDirName":"nodes","slug":"/nodes/pow","permalink":"/react-native-reanimated/docs/1.x/nodes/pow","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/pow.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"multiply","permalink":"/react-native-reanimated/docs/1.x/nodes/multiply"},"next":{"title":"round","permalink":"/react-native-reanimated/docs/1.x/nodes/round"}},{"id":"nodes/proc","title":"proc","description":"proc","source":"@site/versioned_docs/version-1.x/nodes/proc.md","sourceDirName":"nodes","slug":"/nodes/proc","permalink":"/react-native-reanimated/docs/1.x/nodes/proc","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/proc.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"onChange","permalink":"/react-native-reanimated/docs/1.x/nodes/onChange"},"next":{"title":"set","permalink":"/react-native-reanimated/docs/1.x/nodes/set"}},{"id":"nodes/round","title":"round","description":"round","source":"@site/versioned_docs/version-1.x/nodes/round.md","sourceDirName":"nodes","slug":"/nodes/round","permalink":"/react-native-reanimated/docs/1.x/nodes/round","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/round.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"pow","permalink":"/react-native-reanimated/docs/1.x/nodes/pow"},"next":{"title":"sqrt","permalink":"/react-native-reanimated/docs/1.x/nodes/sqrt"}},{"id":"nodes/set","title":"set","description":"set","source":"@site/versioned_docs/version-1.x/nodes/set.md","sourceDirName":"nodes","slug":"/nodes/set","permalink":"/react-native-reanimated/docs/1.x/nodes/set","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/set.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"proc","permalink":"/react-native-reanimated/docs/1.x/nodes/proc"},"next":{"title":"Event handling","permalink":"/react-native-reanimated/docs/1.x/event"}},{"id":"nodes/sin","title":"sin","description":"sin","source":"@site/versioned_docs/version-1.x/nodes/sin.md","sourceDirName":"nodes","slug":"/nodes/sin","permalink":"/react-native-reanimated/docs/1.x/nodes/sin","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/sin.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"cos","permalink":"/react-native-reanimated/docs/1.x/nodes/cos"},"next":{"title":"tan","permalink":"/react-native-reanimated/docs/1.x/nodes/tan"}},{"id":"nodes/sqrt","title":"sqrt","description":"sqrt","source":"@site/versioned_docs/version-1.x/nodes/sqrt.md","sourceDirName":"nodes","slug":"/nodes/sqrt","permalink":"/react-native-reanimated/docs/1.x/nodes/sqrt","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/sqrt.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"round","permalink":"/react-native-reanimated/docs/1.x/nodes/round"},"next":{"title":"sub","permalink":"/react-native-reanimated/docs/1.x/nodes/sub"}},{"id":"nodes/startClock","title":"startClock","description":"startClock","source":"@site/versioned_docs/version-1.x/nodes/startClock.md","sourceDirName":"nodes","slug":"/nodes/startClock","permalink":"/react-native-reanimated/docs/1.x/nodes/startClock","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/startClock.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"clockRunning","permalink":"/react-native-reanimated/docs/1.x/nodes/clockRunning"},"next":{"title":"stopClock","permalink":"/react-native-reanimated/docs/1.x/nodes/stopClock"}},{"id":"nodes/stopClock","title":"stopClock","description":"stopClock","source":"@site/versioned_docs/version-1.x/nodes/stopClock.md","sourceDirName":"nodes","slug":"/nodes/stopClock","permalink":"/react-native-reanimated/docs/1.x/nodes/stopClock","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/stopClock.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"startClock","permalink":"/react-native-reanimated/docs/1.x/nodes/startClock"},"next":{"title":"acc","permalink":"/react-native-reanimated/docs/1.x/nodes/acc"}},{"id":"nodes/sub","title":"sub","description":"sub","source":"@site/versioned_docs/version-1.x/nodes/sub.md","sourceDirName":"nodes","slug":"/nodes/sub","permalink":"/react-native-reanimated/docs/1.x/nodes/sub","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/sub.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"sqrt","permalink":"/react-native-reanimated/docs/1.x/nodes/sqrt"},"next":{"title":"acos","permalink":"/react-native-reanimated/docs/1.x/nodes/acos"}},{"id":"nodes/tan","title":"tan","description":"tan","source":"@site/versioned_docs/version-1.x/nodes/tan.md","sourceDirName":"nodes","slug":"/nodes/tan","permalink":"/react-native-reanimated/docs/1.x/nodes/tan","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/nodes/tan.md","tags":[],"version":"1.x","frontMatter":{},"sidebar":"docs","previous":{"title":"sin","permalink":"/react-native-reanimated/docs/1.x/nodes/sin"},"next":{"title":"and","permalink":"/react-native-reanimated/docs/1.x/nodes/and"}},{"id":"transitions","title":"Transitions","description":"Transitions is an experimental API distributed as a part of reanimated which serves the purpose of animating between two states of view hierarchy. It is conceptually similar to LayoutAnimation concept from react native but gives much better control of what and how is going to be animated.","source":"@site/versioned_docs/version-1.x/transitions.md","sourceDirName":".","slug":"/transitions","permalink":"/react-native-reanimated/docs/1.x/transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/transitions.md","tags":[],"version":"1.x","frontMatter":{"id":"transitions","title":"Transitions","sidebar_label":"Transitions"},"sidebar":"docs","previous":{"title":"Examples","permalink":"/react-native-reanimated/docs/1.x/examples"},"next":{"title":"Additional configuration","permalink":"/react-native-reanimated/docs/1.x/config"}},{"id":"value","title":"Value","description":"Animated.Value is a container for storing values. It\'s is initialized with new Value(0) constructor. For backward compatibility there are provided API for setting value after it has been initialized:","source":"@site/versioned_docs/version-1.x/value.md","sourceDirName":".","slug":"/value","permalink":"/react-native-reanimated/docs/1.x/value","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/value.md","tags":[],"version":"1.x","frontMatter":{"id":"value","title":"Value","sidebar_label":"Value"},"sidebar":"docs","previous":{"title":"Additional configuration","permalink":"/react-native-reanimated/docs/1.x/config"},"next":{"title":"Clock","permalink":"/react-native-reanimated/docs/1.x/clock"}},{"id":"view","title":"View, Props, etc","description":"Follow the original Animated library guides to learn how values can be connected to View attributes.","source":"@site/versioned_docs/version-1.x/view.md","sourceDirName":".","slug":"/view","permalink":"/react-native-reanimated/docs/1.x/view","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-1.x/view.md","tags":[],"version":"1.x","frontMatter":{"id":"view","title":"View, Props, etc","sidebar_label":"View, Props, etc"},"sidebar":"docs","previous":{"title":"Event handling","permalink":"/react-native-reanimated/docs/1.x/event"},"next":{"title":"Animated.Code","permalink":"/react-native-reanimated/docs/1.x/code"}}],"drafts":[],"sidebars":{"docs":[{"type":"category","label":"Overview","items":[{"type":"doc","id":"about"},{"type":"doc","id":"getting_started"},{"type":"doc","id":"declarative"},{"type":"doc","id":"examples"},{"type":"doc","id":"transitions"},{"type":"doc","id":"config"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Features","items":[{"type":"doc","id":"value"},{"type":"doc","id":"clock"},{"type":"category","label":"Animations","items":[{"type":"doc","id":"animations/timing"},{"type":"doc","id":"animations/decay"},{"type":"doc","id":"animations/spring"},{"type":"doc","id":"animations/spring_utils"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Nodes","items":[{"type":"category","label":"Math","items":[{"type":"doc","id":"nodes/abs"},{"type":"doc","id":"nodes/add"},{"type":"doc","id":"nodes/ceil"},{"type":"doc","id":"nodes/divide"},{"type":"doc","id":"nodes/exp"},{"type":"doc","id":"nodes/floor"},{"type":"doc","id":"nodes/log"},{"type":"doc","id":"nodes/max"},{"type":"doc","id":"nodes/min"},{"type":"doc","id":"nodes/modulo"},{"type":"doc","id":"nodes/multiply"},{"type":"doc","id":"nodes/pow"},{"type":"doc","id":"nodes/round"},{"type":"doc","id":"nodes/sqrt"},{"type":"doc","id":"nodes/sub"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Trigonometry","items":[{"type":"doc","id":"nodes/acos"},{"type":"doc","id":"nodes/asin"},{"type":"doc","id":"nodes/atan"},{"type":"doc","id":"nodes/cos"},{"type":"doc","id":"nodes/sin"},{"type":"doc","id":"nodes/tan"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Logical expressions","items":[{"type":"doc","id":"nodes/and"},{"type":"doc","id":"nodes/eq"},{"type":"doc","id":"nodes/greaterOrEq"},{"type":"doc","id":"nodes/greaterThan"},{"type":"doc","id":"nodes/lessOrEq"},{"type":"doc","id":"nodes/lessThan"},{"type":"doc","id":"nodes/neq"},{"type":"doc","id":"nodes/not"},{"type":"doc","id":"nodes/or"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Clock","items":[{"type":"doc","id":"nodes/clockRunning"},{"type":"doc","id":"nodes/startClock"},{"type":"doc","id":"nodes/stopClock"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Others","items":[{"type":"doc","id":"nodes/acc"},{"type":"doc","id":"nodes/block"},{"type":"doc","id":"nodes/call"},{"type":"doc","id":"nodes/color"},{"type":"doc","id":"nodes/concat"},{"type":"doc","id":"nodes/cond"},{"type":"doc","id":"nodes/debug"},{"type":"doc","id":"nodes/defined"},{"type":"doc","id":"nodes/diff"},{"type":"doc","id":"nodes/diffClamp"},{"type":"doc","id":"nodes/event"},{"type":"doc","id":"nodes/interpolate"},{"type":"doc","id":"nodes/interpolateColors"},{"type":"doc","id":"nodes/onChange"},{"type":"doc","id":"nodes/proc"},{"type":"doc","id":"nodes/set"}],"collapsed":false,"collapsible":false}],"collapsed":false,"collapsible":false},{"type":"doc","id":"event"},{"type":"doc","id":"view"},{"type":"doc","id":"code"}],"collapsed":false,"collapsible":false}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Examples","blogPosts":[{"id":"accordion","metadata":{"permalink":"/react-native-reanimated/examples/accordion","source":"@site/blog/accordion.md","title":"Accordion","description":"An accordion allows to show and hide a piece of content with a smooth animation. Commonly used in \\"FAQ\\" sections.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"accordion","title":"Accordion"},"unlisted":false,"nextItem":{"title":"Bottom Sheet","permalink":"/react-native-reanimated/examples/bottomsheet"}},"content":"An accordion allows to show and hide a piece of content with a smooth animation. Commonly used in \\"FAQ\\" sections.\\n\\nimport Accordion from \'@site/static/examples/Accordion\';\\nimport AccordionSrc from \'!!raw-loader!@site/static/examples/Accordion\';\\n\\n<InteractiveExample src={AccordionSrc} component={Accordion} />\\n\\nThe following implementation of an accordion relies on [shared values](/docs/fundamentals/glossary#shared-value). Leveraging shared values helps to prevent unnecessary re-renders. We define shared values using the useSharedValue hook.\\n\\n<CollapsibleCode src={AccordionSrc} showLines={[16,16]}/>\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/accordion_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/accordion_ios.mov\\"\\n  }}\\n/>\\n\\nThe **AccordionItem** component encapsulates each item in the accordion. A `height` shared value manages the height of the item. The height dynamically adjusts based on the `isExpanded` prop, resulting in smooth expansion and collapse animations. The `duration` prop controls the duration of the animation.\\n\\nInside the **AccordionItem**, the children represent the content section. It can accommodate various types of content.\\n\\n<samp id=\\"Accordion\\">Accordion</samp>\\n\\n<CollapsibleCode src={AccordionSrc} showLines={[9,41]}/>"},{"id":"bottomsheet","metadata":{"permalink":"/react-native-reanimated/examples/bottomsheet","source":"@site/blog/bottom-sheet.md","title":"Bottom Sheet","description":"Bottom sheets are surfaces containing supplementary content, anchored to the bottom of the screen. They can provide users with quick access to contextual information, actions, or settings without interrupting their current workflow.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"bottomsheet","title":"Bottom Sheet"},"unlisted":false,"prevItem":{"title":"Accordion","permalink":"/react-native-reanimated/examples/accordion"},"nextItem":{"title":"Flip Card","permalink":"/react-native-reanimated/examples/flipCard"}},"content":"Bottom sheets are surfaces containing supplementary content, anchored to the bottom of the screen. They can provide users with quick access to contextual information, actions, or settings without interrupting their current workflow.\\n\\nLooking for a ready-to-use solution? We recommend [@gorhom/bottom-sheet](https://www.npmjs.com/package/@gorhom/bottom-sheet).\\n\\nimport BottomSheet from \'@site/static/examples/BottomSheet\';\\nimport BottomSheetSrc from \'!!raw-loader!@site/static/examples/BottomSheet\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\n<InteractiveExample src={BottomSheetSrc} component={BottomSheet} />\\n\\nThe **BottomSheet** component accepts props such as `isOpen` - a [shared value](/docs/fundamentals/glossary#shared-value) indicating whether the bottom sheet is open or closed, `toggleSheet` - a function to toggle the visibility of the bottom sheet, and an optional `duration` for animation.\\n\\n<samp id=\\"BottomSheet\\">Bottom Sheet</samp>\\n\\n<CollapsibleCode src={BottomSheetSrc} showLines={[17,48]}/>\\n\\nThe `height` shared value is used to track the height of the bottom sheet, while the `progress` derived value interpolates between 0 and 1 based on the state of `isOpen`, controlling the animation of the bottom sheet.\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/bottom_sheet_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/bottom_sheet_ios.mov\\"\\n  }}\\n/>\\n\\n<CollapsibleCode src={BottomSheetSrc} showLines={[18,21]}/>\\n\\nThe `useAnimatedStyle` hook helps in creating [animated styles](/docs/core/useAnimatedStyle/) based on shared values. These styles are then applied to **BottomSheet** to make it visually dynamic by adding backdrop and translating bottom sheet to the top.\\n\\n<CollapsibleCode src={BottomSheetSrc} showLines={[23,32]}/>"},{"id":"flipCard","metadata":{"permalink":"/react-native-reanimated/examples/flipCard","source":"@site/blog/flip-card.md","title":"Flip Card","description":"Flip card allows you to display different content depending on whether the card is flipped or not. It can be especially useful when you do not want to display some data immediately after entering the screen (e.g. secure data) and only after fulfilling a certain condition or performing an action.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"flipCard","title":"Flip Card"},"unlisted":false,"prevItem":{"title":"Bottom Sheet","permalink":"/react-native-reanimated/examples/bottomsheet"},"nextItem":{"title":"Floating Action Button","permalink":"/react-native-reanimated/examples/floatingactionbutton"}},"content":"Flip card allows you to display different content depending on whether the card is flipped or not. It can be especially useful when you do not want to display some data immediately after entering the screen (e.g. secure data) and only after fulfilling a certain condition or performing an action.\\n\\nimport FlipCard from \'@site/static/examples/FlipCard\';\\nimport FlipCardSrc from \'!!raw-loader!@site/static/examples/FlipCard\';\\n\\n<InteractiveExample src={FlipCardSrc} component={FlipCard} />\\n\\nFor storing information about whether the card is flipped or not we use [shared value](/docs/fundamentals/glossary#shared-value) with the `useSharedValue` hook. Using shared values helps to prevent unnecessary re-renders.\\n\\n<CollapsibleCode src={FlipCardSrc} showLines={[116,116]} />\\n\\nThis allows us to [interpolate](/docs/utilities/interpolate) values between 0-180 and 180-360 degrees, depending on whether the card is flipped or not. In addition, we use [withTiming](/docs/animations/withTiming) util which makes our animation smooth.\\n\\n<CollapsibleCode src={FlipCardSrc} showLines={[61,63]} />\\n\\n<ExampleVideo\\nsources={{\\n        android: \\"/react-native-reanimated/recordings/examples/flip_card_android.mov\\",\\n        ios: \\"/react-native-reanimated/recordings/examples/flip_card_ios.mov\\"\\n    }}\\n/>\\n\\nThe **FlipCard** component accepts several props: `duration` allows you to change the duration of the animation, setting `direction` to the value `x` allows you to change the direction of our animation, **RegularContent** and **FlippedContent** give ability to display different content for flipped and non flipped variants.\\n\\n<samp id=\\"FlipCard\\">Flip Card</samp>\\n\\n<CollapsibleCode src={FlipCardSrc} showLines={[50,102]} />"},{"id":"floatingactionbutton","metadata":{"permalink":"/react-native-reanimated/examples/floatingactionbutton","source":"@site/blog/floating-action-button.md","title":"Floating Action Button","description":"Floating Action Button provides user with easy-accessible panel with primary or most common actions on the screen.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"floatingactionbutton","title":"Floating Action Button"},"unlisted":false,"prevItem":{"title":"Flip Card","permalink":"/react-native-reanimated/examples/flipCard"},"nextItem":{"title":"Marquee","permalink":"/react-native-reanimated/examples/marquee"}},"content":"Floating Action Button provides user with easy-accessible panel with primary or most common actions on the screen.\\n\\nimport FloatingActionButton from \'@site/static/examples/FloatingActionButton\';\\nimport FloatingActionButtonSrc from \'!!raw-loader!@site/static/examples/FloatingActionButton\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\n<InteractiveExample src={FloatingActionButtonSrc} component={FloatingActionButton} />\\n\\nWe use [shared values](/docs/fundamentals/glossary#shared-value) to monitor if the button is expanded. The `useSharedValue` hook helps prevent unnecessary re-renders during state changes.\\n\\n<CollapsibleCode src={FloatingActionButtonSrc} showLines={[49,52]}/>\\n\\nThe state is toggled when the main _Actions_ button is pressed, which triggers animations for other secondary buttons.\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/fab_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/fab_ios.mov\\"\\n  }}\\n/>\\n\\nIt also relies on [animatable values](/docs/fundamentals/glossary#animatable-value). Leveraging animatable values of rotation and position enables smooth transition between the two states.\\n\\n<samp id=\\"FloatingActionButton\\">Floating Action Button</samp>\\n\\n<CollapsibleCode src={FloatingActionButtonSrc} showLines={[55,67]}/>\\n\\nThe **FloatingActionButton** is a reusable component that manages button styles, content and animations. For this we use props: `buttonLetter`, `index` and `isExpanded`.\\n\\n<CollapsibleCode src={FloatingActionButtonSrc} showLines={[21,46]}/>\\n\\nWe define the animated styles for the buttons within the FloatingActionButton component, passing the necessary values as props. The delay in their appearance on the screen is calculated based on the button\'s index. Buttons with a higher index will appear later and be positioned higher in the \\"column\\" of buttons.\\n\\n<samp id=\\"FloatingActionButton\\">Floating Action Button</samp>\\n\\n<CollapsibleCode src={FloatingActionButtonSrc} showLines={[22,46]}/>"},{"id":"marquee","metadata":{"permalink":"/react-native-reanimated/examples/marquee","source":"@site/blog/marquee.md","title":"Marquee","description":"A marquee is an element used to display scrolling content horizontally within a confined space. It\'s commonly seen in applications to information such as news tickers, advertisements, or any content that needs continuous display within a limited area.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"marquee","title":"Marquee"},"unlisted":false,"prevItem":{"title":"Floating Action Button","permalink":"/react-native-reanimated/examples/floatingactionbutton"},"nextItem":{"title":"Section List","permalink":"/react-native-reanimated/examples/sectionlist"}},"content":"A marquee is an element used to display scrolling content horizontally within a confined space. It\'s commonly seen in applications to information such as news tickers, advertisements, or any content that needs continuous display within a limited area.\\n\\nLooking for a ready-to-use solution? We recommend [@animatereactnative/marquee](https://www.npmjs.com/package/@animatereactnative/marquee).\\n\\nimport Marquee from \'@site/static/examples/Marquee\';\\nimport MarqueeSrc from \'!!raw-loader!@site/static/examples/Marquee\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\n<InteractiveExample src={MarqueeSrc} component={Marquee} />\\n\\nNow, let\'s understand how this example works:\\n\\nThe **MeasureElement** component measures the width of its children and passes this information to its parent component, Marquee.\\n\\n<samp id=\\"Marquee\\">Marquee</samp>\\n\\n<CollapsibleCode src={MarqueeSrc} showLines={[8,18]}/>\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/marquee_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/marquee_ios.mov\\"\\n  }}\\n/>\\n\\nWe use the `useFrameCallback` hook to execute the animation logic on each frame.\\n\\n<CollapsibleCode src={MarqueeSrc} showLines={[57,62]}/>\\n\\nIt is located inside **ChildrenScroller** component that manages the scrolling animation by updating the offset value. It determines the horizontal translation of the child components, creates clones of the children and animates them horizontally based on the specified duration.\\n\\n<samp id=\\"Marquee\\">Marquee</samp>\\n<CollapsibleCode src={MarqueeSrc} showLines={[43,76]}/>\\n\\nThe **Marquee** component serves as the main orchestrator of the marquee effect. It calculates necessary dimensions, renders child components within a container, and coordinates the animation by utilizing the ChildrenScroller component.\\n\\n<samp id=\\"Marquee\\">Marquee</samp>\\n\\n<CollapsibleCode src={MarqueeSrc} showLines={[78,104]}/>"},{"id":"sectionlist","metadata":{"permalink":"/react-native-reanimated/examples/sectionlist","source":"@site/blog/section-list.md","title":"Section List","description":"Section lists allow you to organize long lists of content by dividing them with headings.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"sectionlist","title":"Section List"},"unlisted":false,"prevItem":{"title":"Marquee","permalink":"/react-native-reanimated/examples/marquee"},"nextItem":{"title":"Slider","permalink":"/react-native-reanimated/examples/slider"}},"content":"import SectionList from \'@site/static/examples/SectionList\';\\nimport SectionListSrc from \'!!raw-loader!@site/static/examples/SectionList\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\nSection lists allow you to organize long lists of content by dividing them with headings.\\n\\n<InteractiveExample src={SectionListSrc} component={SectionList} />\\n\\nThe primary component, **SectionList**, acts as the main orchestrator of the entire Section List interface. It coordinates the rendering of the table of contents and individual content sections.\\n\\n<samp id=\\"SectionList\\">Section List</samp>\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[150,174]}/>\\n\\nWithin **SectionList**, there are two key components: **TableOfContents** and **SectionCards**.\\n\\n**TableOfContents** is responsible for rendering the list of section names as a table of contents. It receives props such as `data`, `visibleIndex`, `sectionCardsRef`, and `tableOfContentsRef` to manage navigation and synchronization between the table of contents and section content.\\n\\n<samp id=\\"SectionList\\">Section List</samp>\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[123,148]}/>\\n\\n**SectionCards**, on the other hand, manages the rendering of individual sections and their corresponding content. It receives props: `sections`, `visibleIndex`, `sectionCardsRef`, and `tableOfContentsRef` to render the content sections and handle scrolling interactions.\\n\\n<samp id=\\"SectionList\\">Section List</samp>\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[198,256]}/>\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/section_list_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/section_list_ios.mov\\"\\n  }}\\n/>\\n\\nThe `onScroll` in **SectionCards** calculates the offset as the user scrolls through the content and determines which section is currently most visible on the screen. It is done by comparing the distance of each section from the top of the screen - it identifies the section closest to the viewport\'s top edge.\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[204,227]}/>\\n\\nWe use the `useSharedValue` hook to create mutable shared values across different components. For instance, `selectedItem` and `visibleIndex` are [shared values](/docs/fundamentals/glossary#shared-value) used to manage the currently selected section and its visibility index.\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[151,152]}/>\\n\\nAdditionally, we use `useAnimatedStyle` hook to define [animated styles](/docs/core/useAnimatedStyle/) based on the shared values. Then, we apply these animated styles to components to create dynamic visual effects, such as changing font weights and adding bottom borders.\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[96,99]}/>\\n\\nTo enable interaction with the FlashList component - such as scrolling to specific sections, the code utilizes variables created using `useRef` such as `sectionCardsRef` and `tableContentsRef`\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[154,155]}/>\\n\\nHere, the `debounce` function throttles the invocations of `onScroll` event handler which improves the performance.\\n\\n<CollapsibleCode src={SectionListSrc} showLines={[85,93]}/>"},{"id":"slider","metadata":{"permalink":"/react-native-reanimated/examples/slider","source":"@site/blog/slider.md","title":"Slider","description":"Slider allows users to adjust a value or control a setting by sliding a handle along a track. It is commonly used to adjust settings such as volume, brightness, or in this case, the width of a box.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"slider","title":"Slider"},"unlisted":false,"prevItem":{"title":"Section List","permalink":"/react-native-reanimated/examples/sectionlist"},"nextItem":{"title":"Switch","permalink":"/react-native-reanimated/examples/switch"}},"content":"Slider allows users to adjust a value or control a setting by sliding a handle along a track. It is commonly used to adjust settings such as volume, brightness, or in this case, the width of a box.\\n\\nimport Slider from \'@site/static/examples/Slider\';\\nimport SliderSrc from \'!!raw-loader!@site/static/examples/Slider\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\n<InteractiveExample src={SliderSrc} component={Slider} />\\n\\nWe use the `useSharedValue` hook to store the offset of the slider handle, allowing for smooth animation during sliding.\\n\\n<CollapsibleCode src={SliderSrc} showLines={[24,24]}/>\\n\\nThis example is done using [Pan gesture](https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture) from `react-native-gesture-handler` library. It adjusts the handle\'s position and width of the box accordingly to the current offset. The offset is a [shared value](/docs/fundamentals/glossary#shared-value) and is updated during the `onChange` event of the pan gesture.\\n\\n<samp id=\\"Slider\\">Slider</samp>\\n\\n<CollapsibleCode src={SliderSrc} showLines={[28,41]}/>\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/slider_android.mov\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/slider_ios.mov\\"\\n  }}\\n/>\\n\\nThe `useAnimatedStyle` hook is used to create animated styles for both the box and the slider handle. This ensures that changes to the offset value result in smooth animations for both components.\\n\\n<samp id=\\"Slider\\">Slider</samp>\\n\\n<CollapsibleCode src={SliderSrc} showLines={[42,52]}/>\\n\\nLeveraging animated props allows us to run them on the UI thread instead of the JS thread. To prevent unnecessary re-renders when the text displaying the current width of the box changes, we used the `useAnimatedProps` hook.\\n\\nAdditionally, we opted for **TextInput** instead of **Text** because **TextInput** has a `text` property that can be animated, whereas **Text** only has children.\\n\\nThis approach also enabled us to animate **TextInput** using [shared values](/docs/fundamentals/glossary#shared-value).\\n\\n<samp id=\\"Slider\\">Slider</samp>\\n\\n<CollapsibleCode src={SliderSrc} showLines={[58,63]}/>"},{"id":"switch","metadata":{"permalink":"/react-native-reanimated/examples/switch","source":"@site/blog/switch.md","title":"Switch","description":"A switch element is a user interface component that allows users to toggle between two or more states. It is commonly used to turn on/off a setting, enable/disable a feature, or select between options.","date":"2025-10-29T11:10:57.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"switch","title":"Switch"},"unlisted":false,"prevItem":{"title":"Slider","permalink":"/react-native-reanimated/examples/slider"}},"content":"A switch element is a user interface component that allows users to toggle between two or more states. It is commonly used to turn on/off a setting, enable/disable a feature, or select between options.\\n\\nimport Switch from \'@site/static/examples/Switch\';\\nimport SwitchSrc from \'!!raw-loader!@site/static/examples/Switch\';\\nimport CollapsibleCode from \'@site/src/components/CollapsibleCode\';\\n\\n<InteractiveExample src={SwitchSrc} component={Switch} />\\n\\nThe following implementation of a switch relies on [animatable values](/docs/fundamentals/glossary#animatable-value). Leveraging animatable values of color and position enables smooth transition between the two states.\\n\\n<samp id=\\"Switch\\">Switch</samp>\\n\\n<CollapsibleCode src={SwitchSrc} showLines={[26,52]}/>\\n\\n<ExampleVideo\\nsources={{\\n    android: \\"/react-native-reanimated/recordings/examples/switch_android.mp4\\",\\n    ios: \\"/react-native-reanimated/recordings/examples/switch_ios.mov\\"\\n  }}\\n/>\\n\\nWe use the `useSharedValue` hook to store the dimensions of the element, which allows for precise calculation of position changes during the animation. The hook is there to prevent unnecessary re-renders.\\n\\n<CollapsibleCode src={SwitchSrc} showLines={[23,25]}/>\\n\\nThe values are updated during the `onLayout` event of the element.\\n\\n<CollapsibleCode src={SwitchSrc} showLines={[56,61]}/>\\n\\nThe **Switch** component can represent any boolean value passed as a prop. The state dynamically adjusts based on the `value` prop resulting in smooth transition animations. It enables passing any function using the `onPress` prop. The `duration` prop controls the duration of the animation. The `style` and `trackColors` props enable personalization.\\n\\n<samp id=\\"Switch\\">Switch</samp>\\n\\n<CollapsibleCode src={SwitchSrc} showLines={[16,67]}/>"}],"blogListPaginated":[{"items":["accordion","bottomsheet","flipCard","floatingactionbutton","marquee","sectionlist","slider","switch"],"metadata":{"permalink":"/react-native-reanimated/examples","page":1,"postsPerPage":10,"totalPages":1,"totalCount":8,"blogDescription":"Blog","blogTitle":"Blog"}}],"blogTags":{},"blogTagsListPath":"/react-native-reanimated/examples/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/react-native-reanimated/","source":"@site/src/pages/index.tsx"},{"type":"mdx","permalink":"/react-native-reanimated/privacy-policy","source":"@site/src/pages/privacy-policy.md","title":"Privacy Policy","description":"Effective communication is vital for any successful operation, and we are dedicated to making our practices as transparent and secure as possible. This Privacy Policy is our commitment to you, designed to meet modern standards and expectations. Its purpose is to help you understand what kind of information and personal data we gather and how we use it to operate our website and provide our services.","frontMatter":{},"unlisted":false},{"type":"jsx","permalink":"/react-native-reanimated/cheatsheet/","source":"@site/src/pages/cheatsheet/index.tsx"}]},"docusaurus-plugin-google-gtag":{},"docusaurus-plugin-sitemap":{},"docusaurus-plugin-svgr":{},"docusaurus-theme-classic":{},"docusaurus-theme-search-algolia":{},"svg-module-plugin":{},"docusaurus-plugin-debug":{},"react-native-reanimated/docusaurus-plugin":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}}')}}]);