"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[7605],{18202:(e,t,n)=>{n.d(t,{A:()=>r});var o=n(30185),i=n(14442);const r=()=>{const{colorScheme:e}=(0,o.Ut)();return"light"===e?s.darkText:s.lightText},s=i.A.create({lightText:{color:"var(--swm-off-white)"},darkText:{color:"var(--swm-navy-light-100)"}})},19887:(e,t,n)=>{n.d(t,{A:()=>h});var o=n(39471),i=n(8589),r=n(31071),s=n(14442),a=n(19727),d=n(56398),l=n(18202),c=n(47671);const u={code:"function RelativeCoordsTsx1(event){const{getRelativeCoords,animatedRef,setCoords}=this.__closure;const relativeCoords=getRelativeCoords(animatedRef,event.absoluteX,event.absoluteY);if(relativeCoords){setCoords(relativeCoords);}}"},m=s.A.create({container:{flex:1,justifyContent:"center",alignItems:"center"},innerView:{width:300,height:300,backgroundColor:"var(--swm-purple-light-80)",justifyContent:"center",alignItems:"center",borderRadius:40,cursor:"pointer"},coordsData:{fontSize:20,fontFamily:"Aeonik",color:"var(--swm-navy-light-100)"},coords:{marginBottom:16,fontWeight:"500"},text:{color:"var(--swm-off-white)",fontFamily:"Aeonik",fontSize:16,fontWeight:"bold"}}),h=()=>{const e=(0,a.useAnimatedRef)(),t=(0,l.A)(),[n,s]=(0,o.useState)({x:0,y:0}),h=d.q6.Tap().onEnd(function({_worklet_1505519536525_init_data:e,getRelativeCoords:t,animatedRef:n,setCoords:o}){const i=function(e){const i=t(n,e.absoluteX,e.absoluteY);i&&o(i)};return i.__closure={getRelativeCoords:t,animatedRef:n,setCoords:o},i.__workletHash=1505519536525,i.__initData=e,i}({_worklet_1505519536525_init_data:u,getRelativeCoords:a.getRelativeCoords,animatedRef:e,setCoords:s}));return(0,c.jsxs)(i.A,{style:m.container,children:[(0,c.jsx)(r.A,{style:[m.coordsData,t],children:"Relative coordinates to parent:"}),(0,c.jsxs)(r.A,{style:[m.coordsData,m.coords,t],children:["x=",n.x.toFixed()," y=",n.y.toFixed()]}),(0,c.jsx)(d.Sl,{gesture:h,children:(0,c.jsx)(a.default.View,{ref:e,style:m.innerView,children:(0,c.jsx)(r.A,{style:m.text,children:"Tap anywhere inside."})})})]})}},30620:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(39471);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}},60224:(e,t,n)=>{n.d(t,{A:()=>o});const o="import React, { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedRef,\n  getRelativeCoords,\n} from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport useThemedTextStyle from '@site/src/hooks/useThemedTextStyle';\n\nconst RelativeCoords = () => {\n  const animatedRef = useAnimatedRef();\n  const textColor = useThemedTextStyle();\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\n\n  const tapGesture = Gesture.Tap().onEnd((event) => {\n    const relativeCoords = getRelativeCoords(\n      animatedRef,\n      event.absoluteX,\n      event.absoluteY\n    );\n    if (relativeCoords) {\n      setCoords(relativeCoords);\n    }\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.coordsData, textColor]}>\n        Relative coordinates to parent:\n      </Text>\n      <Text style={[styles.coordsData, styles.coords, textColor]}>\n        x={coords.x.toFixed()} y=\n        {coords.y.toFixed()}\n      </Text>\n      <GestureDetector gesture={tapGesture}>\n        <Animated.View ref={animatedRef} style={styles.innerView}>\n          <Text style={styles.text}>Tap anywhere inside.</Text>\n        </Animated.View>\n      </GestureDetector>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  innerView: {\n    width: 300,\n    height: 300,\n    backgroundColor: 'var(--swm-purple-light-80)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 40,\n    cursor: 'pointer',\n  },\n  coordsData: {\n    fontSize: 20,\n    fontFamily: 'Aeonik',\n    color: 'var(--swm-navy-light-100)',\n  },\n  coords: {\n    marginBottom: 16,\n    fontWeight: '500',\n  },\n  text: {\n    color: 'var(--swm-off-white)',\n    fontFamily: 'Aeonik',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RelativeCoords;\n"},87626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"utilities/getRelativeCoords","title":"getRelativeCoords","description":"getRelativeCoords determines the location on the screen, relative to the given view.","source":"@site/docs/utilities/getRelativeCoords.mdx","sourceDirName":"utilities","slug":"/utilities/getRelativeCoords","permalink":"/react-native-reanimated/docs/utilities/getRelativeCoords","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/utilities/getRelativeCoords.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"interpolateColor","permalink":"/react-native-reanimated/docs/utilities/interpolateColor"},"next":{"title":"Advanced APIs","permalink":"/react-native-reanimated/docs/category/advanced-apis"}}');var i=n(47671),r=n(30620),s=n(19887),a=n(60224);const d={sidebar_position:4},l="getRelativeCoords",c={},u=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>absoluteX</code>",id:"absolutex",level:4},{value:"<code>absoluteY</code>",id:"absolutey",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function m(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Details:n,InteractiveExample:o,PlatformCompatibility:d}=t;return n||f("Details",!0),o||f("InteractiveExample",!0),d||f("PlatformCompatibility",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getrelativecoords",children:"getRelativeCoords"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"getRelativeCoords"})," determines the location on the screen, relative to the given view."]}),"\n",(0,i.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { getRelativeCoords } from 'react-native-reanimated';\n\nconst Comp = () => {\n  const animatedRef = useAnimatedRef();\n  // ...\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onEnd: (event) => {\n      const coords = getRelativeCoords(\n        animatedRef,\n        event.absoluteX,\n        event.absoluteY\n      );\n    },\n  });\n\n  return (\n    <View ref={animatedRef}>\n      <PanGestureHandler onGestureEvent={gestureHandler}>\n        <Animated.View style={[styles.box]} />\n      </PanGestureHandler>\n    </View>\n  );\n};\n"})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"function getRelativeCoords(\n  animatedRef: AnimatedRef<Component>,\n  absoluteX: number,\n  absoluteY: number\n): ComponentCoords | null;\n\ninterface ComponentCoords {\n  x: number;\n  y: number;\n}\n"})})]}),"\n",(0,i.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(t.h4,{id:"animatedref",children:(0,i.jsx)(t.code,{children:"animatedRef"})}),"\n",(0,i.jsxs)(t.p,{children:["The product of ",(0,i.jsx)(t.a,{href:"/docs/core/useAnimatedRef",children:(0,i.jsx)(t.code,{children:"useAnimatedRef"})})," is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread). This ref should be passed as a prop to the view relative to which we want to know coordinates."]}),"\n",(0,i.jsx)(t.h4,{id:"absolutex",children:(0,i.jsx)(t.code,{children:"absoluteX"})}),"\n",(0,i.jsxs)(t.p,{children:["Number which is an absolute ",(0,i.jsx)(t.code,{children:"x"})," coordinate."]}),"\n",(0,i.jsx)(t.h4,{id:"absolutey",children:(0,i.jsx)(t.code,{children:"absoluteY"})}),"\n",(0,i.jsxs)(t.p,{children:["Number which is an absolute ",(0,i.jsx)(t.code,{children:"y"})," coordinate."]}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"Object which contains relative coordinates"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"x"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"y"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(o,{src:a.A,component:s.A}),"\n",(0,i.jsx)(t.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,i.jsx)(d,{android:!0,ios:!0,web:!0})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function f(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);