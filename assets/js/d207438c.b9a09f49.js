"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[9978],{15379:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"layout-animations/layout-transitions","title":"Layout transitions","description":"Layout transitions allows you to replace layout changes with smooth transitions. Each layout change may include changes of size and position and both of them can be animated.","source":"@site/versioned_docs/version-3.x/layout-animations/layout-transitions.mdx","sourceDirName":"layout-animations","slug":"/layout-animations/layout-transitions","permalink":"/react-native-reanimated/docs/3.x/layout-animations/layout-transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/layout-animations/layout-transitions.mdx","tags":[],"version":"3.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Keyframe animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/keyframe-animations"},"next":{"title":"Custom animations","permalink":"/react-native-reanimated/docs/3.x/layout-animations/custom-animations"}}');var s=i(47671),a=i(30620),o=i(94735),r=i(30698);const d={sidebar_position:3},l="Layout transitions",c={},h=[{value:"Predefined Transitions",id:"predefined-transitions",level:2},{value:"Linear transition",id:"linear-transition",level:2},{value:"Reference",id:"reference",level:3},{value:"Modifiers",id:"modifiers",level:3},{value:"Easing <Optional></Optional>",id:"easing-",level:4},{value:"Spring-based <Optional></Optional>",id:"spring-based-",level:4},{value:"Common <Optional></Optional>",id:"common-",level:4},{value:"Remarks",id:"remarks",level:3},{value:"Example",id:"example",level:3},{value:"Sequenced Transition",id:"sequenced-transition",level:2},{value:"Reference",id:"reference-1",level:3},{value:"Modifiers",id:"modifiers-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Fading Transition",id:"fading-transition",level:2},{value:"Reference",id:"reference-2",level:3},{value:"Modifiers",id:"modifiers-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Jumping Transition",id:"jumping-transition",level:2},{value:"Reference",id:"reference-3",level:3},{value:"Modifiers",id:"modifiers-3",level:3},{value:"Example",id:"example-3",level:3},{value:"Curved Transition",id:"curved-transition",level:2},{value:"Reference",id:"reference-4",level:3},{value:"Modifiers",id:"modifiers-4",level:3},{value:"Remarks",id:"remarks-1",level:3},{value:"Example",id:"example-4",level:3},{value:"Entry/Exit Transition",id:"entryexit-transition",level:2},{value:"Reference",id:"reference-5",level:3},{value:"Modifiers",id:"modifiers-5",level:3},{value:"Remarks",id:"remarks-2",level:3},{value:"Example",id:"example-5",level:3},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{ExampleVideo:i,InteractiveExample:t,Optional:d,PlatformCompatibility:l}=n;return i||x("ExampleVideo",!0),t||x("InteractiveExample",!0),d||x("Optional",!0),l||x("PlatformCompatibility",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"layout-transitions",children:"Layout transitions"})}),"\n",(0,s.jsx)(n.p,{children:"Layout transitions allows you to replace layout changes with smooth transitions. Each layout change may include changes of size and position and both of them can be animated."}),"\n","\n",(0,s.jsx)(t,{src:r.A,component:o.A}),"\n",(0,s.jsx)(n.h2,{id:"predefined-transitions",children:"Predefined Transitions"}),"\n",(0,s.jsxs)(n.p,{children:["Below we listed all of the currently available predefined layout transitions with their ",(0,s.jsx)(n.a,{href:"/docs/fundamentals/glossary#layout-animation-modifier",children:"layout animation modifiers"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"linear-transition",children:"Linear transition"}),"\n",(0,s.jsx)(n.p,{children:"Linear transition animates both position and dimension in the same way."}),"\n",(0,s.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { LinearTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={LinearTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers",children:"Modifiers"}),"\n",(0,s.jsxs)(n.h4,{id:"easing-",children:["Easing ",(0,s.jsx)(d,{})]}),"\n",(0,s.jsxs)(n.p,{children:["Easing modifiers are time-based modifiers that relay on ",(0,s.jsx)(n.a,{href:"/docs/animations/withTiming",children:(0,s.jsx)(n.code,{children:"withTiming"})})," function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"LinearTransition.easing(Easing.ease);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".easing(easingFunction: EasingFunction)"})," is an easing function which defines the animation curve. Defaults to ",(0,s.jsx)(n.code,{children:"Easing.inOut(Easing.quad)"})]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".easing(...)"})," modifiers have no effect when ",(0,s.jsx)(n.code,{children:".springify()"})," is used."]})}),"\n",(0,s.jsxs)(n.h4,{id:"spring-based-",children:["Spring-based ",(0,s.jsx)(d,{})]}),"\n",(0,s.jsxs)(n.p,{children:["Spring-based modifiers relay on ",(0,s.jsx)(n.a,{href:"/docs/animations/withSpring",children:(0,s.jsx)(n.code,{children:"withSpring"})})," function.\nJust as in ",(0,s.jsx)(n.code,{children:"withSpring"})," config, spring-based modifiers can be physics-based (have ",(0,s.jsx)(n.code,{children:"mass"})," and ",(0,s.jsx)(n.code,{children:"damping"})," modifiers) or duration-based (have ",(0,s.jsx)(n.code,{children:"duration"})," and ",(0,s.jsx)(n.code,{children:"dampingRatio"})," modifiers)."]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"mass"})," and ",(0,s.jsx)(n.code,{children:"damping"})," (physics-based) properties can't be used at the same time as ",(0,s.jsx)(n.code,{children:"duration"})," and ",(0,s.jsx)(n.code,{children:"dampingRatio"})," (duration-based)."]}),(0,s.jsxs)(n.p,{children:["When used together ",(0,s.jsx)(n.code,{children:"duration"})," and ",(0,s.jsx)(n.code,{children:"dampingRatio"})," overrides ",(0,s.jsx)(n.code,{children:"mass"})," and ",(0,s.jsx)(n.code,{children:"damping"})," props."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"LinearTransition.springify()\n  .damping(30)\n  .mass(5)\n  .rotate(20)\n  .stiffness(10)\n  .overshootClamping(false)\n  .restDisplacementThreshold(0.1)\n  .restSpeedThreshold(5);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".springify()"})," enables the spring-based animation configuration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".damping(value: number)"})," decides how quickly a spring stops moving. Higher damping means the spring will come to rest faster. Defaults to ",(0,s.jsx)(n.code,{children:"10"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".dampingRatio(value: number)"})," decides how damped the spring is. Value ",(0,s.jsx)(n.code,{children:"1"})," means the spring is critically damped, and value ",(0,s.jsx)(n.code,{children:">1"})," means the spring is overdamped. Defaults to ",(0,s.jsx)(n.code,{children:"0.5"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".mass(value: number)"})," is the weight of the spring. Reducing this value makes the animation faster. Defaults to ",(0,s.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".rotate(degree: string)"})," lets you rotate the element."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".stiffness(value: number)"})," decides how bouncy the spring is - the higher the number, the less bouncy it is. Defaults to ",(0,s.jsx)(n.code,{children:"100"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".overshootClamping(value: boolean)"})," decides whether a spring can bounce over the designated position. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".restDisplacementThreshold(value: number)"})," is the displacement below which the spring will snap to the designated position without further oscillations. Defaults to ",(0,s.jsx)(n.code,{children:"0.001"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".restSpeedThreshold(value: number)"})," is the speed in pixels per second below which the spring will snap to the designated position without further oscillations. Defaults to ",(0,s.jsx)(n.code,{children:"2"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"common-",children:["Common ",(0,s.jsx)(d,{})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"LinearTransition.delay(500)\n  .reduceMotion(ReduceMotion.Never)\n  .withInitialValues({ transform: [{ translateY: 420 }] })\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Defaults to '300'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withInitialValues(values: StyleProps)"})," allows to override the initial config of the animation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The animation will end if ",(0,s.jsx)(n.strong,{children:"both"})," the animation speed is below ",(0,s.jsx)(n.code,{children:"restSpeedThreshold"})," and the distance to its end is less than ",(0,s.jsx)(n.code,{children:"restDisplacementThreshold"}),". Keep in mind that if you haven't set one of the thresholds, its value will be set to the default."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_linear_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_linear_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"sequenced-transition",children:"Sequenced Transition"}),"\n",(0,s.jsx)(n.p,{children:"Sequenced transition animates x-position and width first, then y-position and height."}),"\n",(0,s.jsx)(n.h3,{id:"reference-1",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { SequencedTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={SequencedTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers-1",children:"Modifiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"SequencedTransition.duration(1000)\n  .delay(500)\n  .reverse()\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Defaults to '500'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reverse()"})," determines if the animation should run in reverse. Defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_sequenced_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_sequenced_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"fading-transition",children:"Fading Transition"}),"\n",(0,s.jsx)(n.p,{children:"Fading transition animates the opacity of component. It will disappear while having previous position and dimensions and appear with new ones."}),"\n",(0,s.jsx)(n.h3,{id:"reference-2",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { FadingTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={FadingTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers-2",children:"Modifiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"FadingTransition.duration(1000)\n  .delay(500)\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Defaults to '500'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_fading_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_fading_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"jumping-transition",children:"Jumping Transition"}),"\n",(0,s.jsx)(n.p,{children:'Jumping transition makes components "jump" to the new position.'}),"\n",(0,s.jsx)(n.h3,{id:"reference-3",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { JumpingTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={JumpingTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers-3",children:"Modifiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"JumpingTransition.duration(1000)\n  .delay(500)\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Defaults to '300'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_jumping_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_jumping_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"curved-transition",children:"Curved Transition"}),"\n",(0,s.jsxs)(n.p,{children:["Curved transition enables animation of all parameters (",(0,s.jsx)(n.code,{children:"X"}),", ",(0,s.jsx)(n.code,{children:"Y"}),", ",(0,s.jsx)(n.code,{children:"width"}),", ",(0,s.jsx)(n.code,{children:"height"}),") with different easing each. It makes component movement path look curved."]}),"\n",(0,s.jsx)(n.h3,{id:"reference-4",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { CurvedTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={CurvedTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers-4",children:"Modifiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"CurvedTransition.duration(1000)\n  .delay(500)\n  .easingX(Easing.in(Easing.exp))\n  .easingY(Easing.out(Easing.quad))\n  .easingWidth(Easing.in(Easing.ease))\n  .easingHeight(Easing.out(Easing.exp))\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Defaults to '300'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".easingX(easing: EasingFunction)"})," defines easing animation for x-position."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".easingY(easing: EasingFunction)"})," defines easing animation for y-position."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".easingWidth(easing: EasingFunction)"})," defines easing animation for width."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".easingHeight(easing: EasingFunction)"})," defines easing animation for height."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"remarks-1",children:"Remarks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Length of the duration is shared for all of the easings."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_curved_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_curved_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"entryexit-transition",children:"Entry/Exit Transition"}),"\n",(0,s.jsx)(n.p,{children:"Entry/Exit transition lets you choose layout animations for entering and exiting. It combines both of them into a one and applies to the layout. Moreover, instead of picking currently available animations, you are welcome to create your own one."}),"\n",(0,s.jsx)(n.h3,{id:"reference-5",children:"Reference"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { EntryExitTransition } from 'react-native-reanimated';\n\nfunction App() {\n  return <Animated.View layout={EntryExitTransition} />;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifiers-5",children:"Modifiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"EntryExitTransition.duration(1000)\n  .delay(500)\n  .entering(FlipInEasyX)\n  .exiting(FlipOutEasyY)\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".duration(duration: number)"})," sets length of the animation (in milliseconds). Default depends on entry/exit animation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".delay(duration: number)"})," is the delay before the animation starts (in milliseconds). Defaults to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".exiting(animation)"})," determines animation shown when element is removed from position. Defaults to ",(0,s.jsx)(n.code,{children:"FadeOut"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".entering(animation)"})," determines animation shown when element is added to new position. Defaults to ",(0,s.jsx)(n.code,{children:"FadeIn"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".reduceMotion(reduceMotion: ReduceMotion)"})," determines how the animation responds to the device's reduced motion ",(0,s.jsx)(n.a,{href:"/docs/guides/accessibility",children:"accessibility"})," setting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".withCallback(callback: (finished: boolean) => void)"})," is the callback that will fire after the animation ends. Sets ",(0,s.jsx)(n.code,{children:"finished"})," to ",(0,s.jsx)(n.code,{children:"true"})," when animation ends without interruptions, and ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"remarks-2",children:"Remarks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Duration equals sum of entering and exiting durations."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-5",children:"Example"}),"\n",(0,s.jsx)(i,{sources:{android:"/react-native-reanimated/recordings/layout_transitions/android_entryexit_transition.mov",ios:"/react-native-reanimated/recordings/layout_transitions/ios_entryexit_transition.mov"}}),"\n",(0,s.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,s.jsx)(l,{android:!0,ios:!0,web:!0})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},30698:(e,n,i)=>{i.d(n,{A:()=>t});const t="import React, { useState, useRef, Dispatch } from 'react';\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport Animated, {\n  LinearTransition,\n  SequencedTransition,\n  FadingTransition,\n  FadeOut,\n  JumpingTransition,\n  CurvedTransition,\n  EntryExitTransition,\n  FlipOutYLeft,\n  FlipInEasyY,\n  Easing,\n} from 'react-native-reanimated';\nimport { FormControl, MenuItem, Select } from '@mui/material';\n\nconst INITIAL_LIST = [\n  { id: 1, emoji: '\ud83c\udf4c', color: '#b58df1' },\n  { id: 2, emoji: '\ud83c\udf4e', color: '#ffe780' },\n  { id: 3, emoji: '\ud83e\udd5b', color: '#fa7f7c' },\n  { id: 4, emoji: '\ud83c\udf59', color: '#82cab2' },\n  { id: 5, emoji: '\ud83c\udf47', color: '#fa7f7c' },\n  { id: 6, emoji: '\ud83c\udf55', color: '#b58df1' },\n  { id: 7, emoji: '\ud83c\udf54', color: '#ffe780' },\n  { id: 8, emoji: '\ud83c\udf5f', color: '#b58df1' },\n  { id: 9, emoji: '\ud83c\udf69', color: '#82cab2' },\n];\n\ninterface TRANSITION {\n  label: string;\n  value: any;\n}\n\nconst LAYOUT_TRANSITIONS = [\n  { label: 'Linear Transition', value: LinearTransition },\n  { label: 'Sequenced Transition', value: SequencedTransition },\n  { label: 'Fading Transition', value: FadingTransition },\n  { label: 'Jumping Transition', value: JumpingTransition },\n  {\n    label: 'Curved Transition',\n    value: CurvedTransition.easingX(Easing.sin).easingY(Easing.exp),\n  },\n  {\n    label: 'Entry/Exit Transition',\n    value: EntryExitTransition.entering(FlipInEasyY).exiting(FlipOutYLeft),\n  },\n];\n\ninterface SelectProps {\n  value: string;\n  onChange: any;\n  options: TRANSITION[];\n  disabled?: boolean;\n  disabledOptions?: string[];\n}\n\nconst SelectStyling = {\n  fontSize: 14,\n  color: 'text.secondary',\n  backgroundColor: 'background.default',\n  borderRadius: 0,\n  '& fieldset': {\n    borderColor: 'text.secondary',\n  },\n};\n\nexport function SelectOption({\n  value,\n  onChange,\n  options,\n  disabled,\n  disabledOptions,\n}: SelectProps) {\n  return (\n    <View style={{ width: '30%' }}>\n      <FormControl sx={{ minWidth: 85 }} size=\"small\">\n        <Select\n          value={value}\n          sx={SelectStyling}\n          onChange={(e) => onChange(e.target)}\n          disabled={disabled}>\n          {options.map((option) => (\n            <MenuItem\n              key={option.label}\n              value={option.value}\n              disabled={disabledOptions?.includes(option.label)}\n              sx={{ color: 'text.secondary' }}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </View>\n  );\n}\n\nexport default function App() {\n  const [items, setItems] = useState(INITIAL_LIST);\n  const [selected, setSelected] = useState(LAYOUT_TRANSITIONS[0]);\n\n  const removeItem = (idToRemove) => {\n    const updatedItems = items.filter((item) => item.id !== idToRemove);\n    setItems(updatedItems);\n  };\n\n  const onSelect = (item) => {\n    setSelected(item);\n    setItems(INITIAL_LIST);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.dropdownContainer}>\n        <SelectOption\n          value={selected.value}\n          onChange={onSelect}\n          options={LAYOUT_TRANSITIONS}\n        />\n      </View>\n      <View>\n        <Items selected={selected} items={items} onRemove={removeItem} />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nfunction Items({ selected, items, onRemove }) {\n  return (\n    <View style={styles.gridContainer}>\n      {items.map((item) => (\n        <Animated.View\n          key={item.id}\n          layout={selected.value}\n          exiting={FadeOut}\n          style={[styles.tileContainer, { backgroundColor: item.color }]}>\n          <Tile emoji={item.emoji} onRemove={() => onRemove(item.id)} />\n        </Animated.View>\n      ))}\n    </View>\n  );\n}\n\nfunction Tile({ emoji, onRemove }) {\n  return (\n    <TouchableOpacity onPress={onRemove} style={styles.tile}>\n      <Animated.Text style={styles.tileLabel}>{emoji}</Animated.Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 32,\n    width: 'auto',\n    display: 'flex',\n    minHeight: 300,\n  },\n  gridContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n  },\n  dropdownContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  tileContainer: {\n    width: '20%',\n    margin: '1%',\n    borderRadius: 16,\n    minHeight: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  tile: {\n    flex: 1,\n    height: '100%',\n    width: ' 100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  tileLabel: {\n    color: '#f8f9ff',\n    fontSize: 24,\n  },\n  wrapper: {\n    width: '100%',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  animatedView: {\n    width: '100%',\n    overflow: 'hidden',\n  },\n});\n"},90441:(e,n,i)=>{i.d(n,{A:()=>m});var t=i(82195),s=i(21098),a=i(39471),o=i(14442),r=i(8589),d=i(42805),l=["style"],c=d.A&&window.CSS&&window.CSS.supports&&window.CSS.supports("top: constant(safe-area-inset-top)")?"constant":"env",h=a.forwardRef(((e,n)=>{var i=e.style,o=(0,s.A)(e,l);return a.createElement(r.A,(0,t.A)({},o,{ref:n,style:[u.root,i]}))}));h.displayName="SafeAreaView";var u=o.A.create({root:{paddingTop:c+"(safe-area-inset-top)",paddingRight:c+"(safe-area-inset-right)",paddingBottom:c+"(safe-area-inset-bottom)",paddingLeft:c+"(safe-area-inset-left)"}});const m=h},94735:(e,n,i)=>{i.d(n,{A:()=>j});var t=i(39471),s=i(8589),a=i(90441),o=i(21844),r=i(14442),d=i(19727),l=i(14388),c=i(76760),h=i(70975),u=i(47671);const m=[{id:1,emoji:"\ud83c\udf4c",color:"#b58df1"},{id:2,emoji:"\ud83c\udf4e",color:"#ffe780"},{id:3,emoji:"\ud83e\udd5b",color:"#fa7f7c"},{id:4,emoji:"\ud83c\udf59",color:"#82cab2"},{id:5,emoji:"\ud83c\udf47",color:"#fa7f7c"},{id:6,emoji:"\ud83c\udf55",color:"#b58df1"},{id:7,emoji:"\ud83c\udf54",color:"#ffe780"},{id:8,emoji:"\ud83c\udf5f",color:"#b58df1"},{id:9,emoji:"\ud83c\udf69",color:"#82cab2"}],x=[{label:"Linear Transition",value:d.LinearTransition},{label:"Sequenced Transition",value:d.SequencedTransition},{label:"Fading Transition",value:d.FadingTransition},{label:"Jumping Transition",value:d.JumpingTransition},{label:"Curved Transition",value:d.CurvedTransition.easingX(d.Easing.sin).easingY(d.Easing.exp)},{label:"Entry/Exit Transition",value:d.EntryExitTransition.entering(d.FlipInEasyY).exiting(d.FlipOutYLeft)}],f={fontSize:14,color:"text.secondary",backgroundColor:"background.default",borderRadius:0,"& fieldset":{borderColor:"text.secondary"}};function p({value:e,onChange:n,options:i,disabled:t,disabledOptions:a}){return(0,u.jsx)(s.A,{style:{width:"30%"},children:(0,u.jsx)(l.A,{sx:{minWidth:85},size:"small",children:(0,u.jsx)(c.A,{value:e,sx:f,onChange:e=>n(e.target),disabled:t,children:i.map((e=>(0,u.jsx)(h.A,{value:e.value,disabled:a?.includes(e.label),sx:{color:"text.secondary"},children:e.label},e.label)))})})})}function j(){const[e,n]=(0,t.useState)(m),[i,o]=(0,t.useState)(x[0]);return(0,u.jsxs)(a.A,{style:y.container,children:[(0,u.jsx)(s.A,{style:y.dropdownContainer,children:(0,u.jsx)(p,{value:i.value,onChange:e=>{o(e),n(m)},options:x})}),(0,u.jsx)(s.A,{children:(0,u.jsx)(g,{selected:i,items:e,onRemove:i=>{const t=e.filter((e=>e.id!==i));n(t)}})})]})}function g({selected:e,items:n,onRemove:i}){return(0,u.jsx)(s.A,{style:y.gridContainer,children:n.map((n=>(0,u.jsx)(d.default.View,{layout:e.value,exiting:d.FadeOut,style:[y.tileContainer,{backgroundColor:n.color}],children:(0,u.jsx)(v,{emoji:n.emoji,onRemove:()=>i(n.id)})},n.id)))})}function v({emoji:e,onRemove:n}){return(0,u.jsx)(o.A,{onPress:n,style:y.tile,children:(0,u.jsx)(d.default.Text,{style:y.tileLabel,children:e})})}const y=r.A.create({container:{flex:1,padding:32,width:"auto",display:"flex",minHeight:300},gridContainer:{flexDirection:"row",flexWrap:"wrap",alignItems:"flex-start",justifyContent:"center",paddingHorizontal:32},dropdownContainer:{display:"flex",justifyContent:"center",alignItems:"center",marginBottom:16},tileContainer:{width:"20%",margin:"1%",borderRadius:16,minHeight:80,justifyContent:"center",alignItems:"center"},tile:{flex:1,height:"100%",width:" 100%",justifyContent:"center",alignItems:"center"},tileLabel:{color:"#f8f9ff",fontSize:24},wrapper:{width:"100%",position:"absolute",display:"flex",alignItems:"center"},animatedView:{width:"100%",overflow:"hidden"}})}}]);