"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5770],{2005:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/animations/withDecay","title":"withDecay","description":"Starts a velocity based \\"scroll\\" animation.","source":"@site/versioned_docs/version-2.x/api/animations/withDecay.md","sourceDirName":"api/animations","slug":"/api/animations/withDecay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDecay","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-2.x/api/animations/withDecay.md","tags":[],"version":"2.x","frontMatter":{"id":"withDecay","title":"withDecay","sidebar_label":"withDecay"},"sidebar":"docs","previous":{"title":"cancelAnimation","permalink":"/react-native-reanimated/docs/2.x/api/animations/cancelAnimation"},"next":{"title":"withDelay","permalink":"/react-native-reanimated/docs/2.x/api/animations/withDelay"}}');var a=n(47671),r=n(30620);const c={id:"withDecay",title:"withDecay",sidebar_label:"withDecay"},o=void 0,s={},l=[{value:"Arguments",id:"arguments",level:3},{value:"<code>options</code> [object]",id:"options-object",level:4},{value:"<code>velocityFactor</code>",id:"velocityfactor",level:5},{value:"<code>callback</code> [function](optional)",id:"callback-functionoptional",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:'Starts a velocity based "scroll" animation.'}),"\n",(0,a.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(t.h4,{id:"options-object",children:[(0,a.jsx)(t.code,{children:"options"})," [object]"]}),"\n",(0,a.jsx)(t.p,{children:"Object containing animation configuration.\nAllowed parameters are listed below:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Options"}),(0,a.jsx)(t.th,{children:"Default"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"velocity"}),(0,a.jsx)(t.td,{children:"0"}),(0,a.jsx)(t.td,{children:"Initial velocity"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"deceleration"}),(0,a.jsx)(t.td,{children:"0.998"}),(0,a.jsx)(t.td,{children:"Rate of decay"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"clamp"}),(0,a.jsx)(t.td,{children:"[]"}),(0,a.jsx)(t.td,{children:"Array of two animation boundaries (optional)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"velocityFactor"}),(0,a.jsx)(t.td,{children:"1"}),(0,a.jsx)(t.td,{children:"Factor to modify velocity unit (optional)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"rubberBandEffect"}),(0,a.jsx)(t.td,{children:"false"}),(0,a.jsx)(t.td,{children:"Rubber band effect after reach clamp limit (optional)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"rubberBandFactor"}),(0,a.jsx)(t.td,{children:"0.6"}),(0,a.jsx)(t.td,{children:"Factor to modify rubberBandEffect force (optional)"})]})]})]}),"\n",(0,a.jsx)(t.h5,{id:"velocityfactor",children:(0,a.jsx)(t.code,{children:"velocityFactor"})}),"\n",(0,a.jsxs)(t.p,{children:["The default unit of velocity in decay is pixels per second but it can be problematic when you want to animate a value not related to pixels for example opacity ",(0,a.jsx)(t.code,{children:"[0, 1]"})," or progress bar ",(0,a.jsx)(t.code,{children:"[0, 1]"}),". In this case, you can use ",(0,a.jsx)(t.code,{children:"velocityFactor"})," property with value ",(0,a.jsx)(t.code,{children:"< 1"})," to modify the velocity of change to fit the required domain."]}),"\n",(0,a.jsxs)(t.h4,{id:"callback-functionoptional",children:[(0,a.jsx)(t.code,{children:"callback"})," [function](optional)"]}),"\n",(0,a.jsxs)(t.p,{children:["The provided function will be called when the animation is complete.\nIn case the animation is cancelled, the callback will receive ",(0,a.jsx)(t.code,{children:"false"})," as the argument, otherwise it will receive ",(0,a.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,a.jsxs)(t.p,{children:["This method returns an animation object. It can be either assigned directly to a Shared Value or can be used as a value for a style object returned from ",(0,a.jsx)(t.a,{href:"/docs/2.x/api/hooks/useAnimatedStyle",children:(0,a.jsx)(t.code,{children:"useAnimatedStyle"})}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import Animated, {\n  useSharedValue,\n  withSpring,\n  useAnimatedStyle,\n  useAnimatedGestureHandler,\n} from 'react-native-reanimated';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\n\nfunction App() {\n  const x = useSharedValue(0);\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onStart: (_, ctx) => {\n      ctx.startX = x.value;\n    },\n    onActive: (event, ctx) => {\n      x.value = ctx.startX + event.translationX;\n    },\n    onEnd: (evt) => {\n      x.value = withDecay({\n        velocity: evt.velocityX,\n        clamp: [0, 200], // optionally define boundaries for the animation\n      });\n    },\n  });\n\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateX: x.value,\n        },\n      ],\n    };\n  });\n\n  return (\n    <PanGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View style={[styles.box, animatedStyle]} />\n    </PanGestureHandler>\n  );\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},30620:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(39471);const a={},r=i.createContext(a);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);