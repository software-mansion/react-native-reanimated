"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[2803],{30620:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(39471);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},92020:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>y,frontMatter:()=>f,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"css-animations/animation-fill-mode","title":"animationFillMode","description":"animationFillMode lets you specify how the computed styles will be persisted before the animation runs and after it finishes. Defaults to none.","source":"@site/docs/css-animations/animation-fill-mode.mdx","sourceDirName":"css-animations","slug":"/css-animations/animation-fill-mode","permalink":"/react-native-reanimated/docs/css-animations/animation-fill-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-animations/animation-fill-mode.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"animationIterationCount","permalink":"/react-native-reanimated/docs/css-animations/animation-iteration-count"},"next":{"title":"animationPlayState","permalink":"/react-native-reanimated/docs/css-animations/animation-play-state"}}');var a=i(47671),o=i(30620),s=i(8589),r=i(14442),l=i(19727);const d={from:{transform:[{scale:.8},{rotateZ:"-15deg"}]},to:{transform:[{scale:1.2},{rotateZ:"15deg"}]}};function c(){return(0,a.jsx)(s.A,{style:m.container,children:(0,a.jsx)(l.default.View,{style:[m.box,{animationName:d,animationDuration:"1s",animationTimingFunction:"ease-in-out",animationFillMode:"forwards"}]})})}const m=r.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#fa7f7c",margin:64}}),h="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { CSSAnimationKeyframes } from 'react-native-reanimated';\n\nconst pulse: CSSAnimationKeyframes = {\n  from: {\n    transform: [{ scale: 0.8 }, { rotateZ: '-15deg' }],\n  },\n  to: {\n    transform: [{ scale: 1.2 }, { rotateZ: '15deg' }],\n  },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            animationName: pulse,\n            animationDuration: '1s',\n            animationTimingFunction: 'ease-in-out',\n            // highlight-next-line\n            animationFillMode: 'forwards',\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#fa7f7c',\n    margin: 64,\n  },\n});\n",f={sidebar_position:7},p="animationFillMode",u={},x=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>none</code>",id:"none",level:4},{value:"<code>forwards</code>",id:"forwards",level:4},{value:"<code>backwards</code>",id:"backwards",level:4},{value:"<code>both</code>",id:"both",level:4},{value:"<code>&lt;animation fill mode[]&gt;</code>",id:"animation-fill-mode",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:i,Indent:t,InteractiveExample:s,PlatformCompatibility:r}=n;return i||w("Details",!0),t||w("Indent",!0),s||w("InteractiveExample",!0),r||w("PlatformCompatibility",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"animationfillmode",children:"animationFillMode"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"animationFillMode"})," lets you specify how the computed styles will be persisted before the animation runs and after it finishes. Defaults to ",(0,a.jsx)(n.code,{children:"none"}),"."]}),"\n","\n",(0,a.jsx)(s,{src:h,component:c}),"\n",(0,a.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function App() {\n  return (\n    <Animated.View\n      style={{\n        animationName: {\n          '100%': {\n            transform: [{ translateX: 100 }],\n          },\n        },\n        animationDuration: '300ms',\n        // highlight-next-line\n        animationFillMode: 'forwards',\n      }}\n    />\n  );\n}\n"})}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"Type definitions"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"type CSSAnimationFillMode = 'none' | 'forwards' | 'backwards' | 'both';\n\nanimationFillMode: CSSAnimationFillMode | CSSAnimationFillMode[];\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"values",children:"Values"}),"\n",(0,a.jsx)(n.h4,{id:"none",children:(0,a.jsx)(n.code,{children:"none"})}),"\n",(0,a.jsx)(n.p,{children:"After the animation finishes the styles computed from keyframes are discarded."}),"\n",(0,a.jsx)(n.h4,{id:"forwards",children:(0,a.jsx)(n.code,{children:"forwards"})}),"\n",(0,a.jsx)(n.p,{children:"Persists the last keyframe of an animation."}),"\n",(0,a.jsx)(n.h4,{id:"backwards",children:(0,a.jsx)(n.code,{children:"backwards"})}),"\n",(0,a.jsx)(n.p,{children:"Persists the first keyframe of an animation."}),"\n",(0,a.jsx)(n.h4,{id:"both",children:(0,a.jsx)(n.code,{children:"both"})}),"\n",(0,a.jsx)(n.p,{children:"Styles computed from both from first and last keyframes are persisted."}),"\n",(0,a.jsx)(n.h4,{id:"animation-fill-mode",children:(0,a.jsx)(n.code,{children:"<animation fill mode[]>"})}),"\n",(0,a.jsxs)(n.p,{children:["An array of animation fill mode values. The order in this array corresponds to the array of style properties passed to the ",(0,a.jsx)(n.a,{href:"/docs/css-animations/animation-name",children:(0,a.jsx)(n.code,{children:"animationName"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// highlight-next-line\nanimationFillMode: ['forwards', 'backwards', 'none'];\nanimationName: [bounceIn, move, slide];\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In the following example, ",(0,a.jsx)(n.code,{children:"bounceIn"})," animation would persist the last keyframe of an animation, ",(0,a.jsx)(n.code,{children:"move"})," would persist the first keyframe, and ",(0,a.jsx)(n.code,{children:"slide"})," would discard the computed styles."]}),"\n",(0,a.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["The retained computed style also depends on the ",(0,a.jsx)(n.code,{children:"animationDirection"})," and ",(0,a.jsx)(n.code,{children:"animationIterationCount"})," properties."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"forwards"})," and ",(0,a.jsx)(n.code,{children:"both"})," fill mode options may not work correctly when combined with fractional ",(0,a.jsx)(n.code,{children:"animationIterationCount"}),", particularly when relative units are used, and those relative values change after the animation ends."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(n.p,{children:"For instance, if a child view's size depends on its parent's size and the parent resizes after the animation ends, the child view may not reflect this change. This issue occurs when keyframes use a mix of relative (e.g., percentage-based) and absolute (numeric) units. Once the animation completes, the view retains the size from the last calculated keyframe and does not update according to the new parent size."}),(0,a.jsx)(n.p,{children:"In such cases, the view remains static instead of adapting to the updated size as expected."})]}),"\n",(0,a.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,a.jsx)(r,{android:!0,ios:!0,web:!0})]})}function y(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}function w(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);