"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[2390],{24882:(e,n,t)=>{t.d(n,{A:()=>r});const r="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { useAnimatedRef } from 'react-native-reanimated';\n\nexport default function App() {\n  // highlight-next-line\n  const animatedRef = useAnimatedRef<Animated.View>();\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        // highlight-next-line\n        ref={animatedRef}\n        style={styles.box}\n        onLayout={() => {\n          // Returns a reference to the component\n          // highlight-next-line\n          const component = animatedRef.current;\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    width: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n  },\n});\n"},30620:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(39471);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},70850:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core/useAnimatedRef","title":"useAnimatedRef","description":"useAnimatedRef lets you get a reference of a view. Used alongside measure, scrollTo, and useScrollViewOffset functions.","source":"@site/versioned_docs/version-3.x/core/useAnimatedRef.mdx","sourceDirName":"core","slug":"/core/useAnimatedRef","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedRef","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/core/useAnimatedRef.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/3.x/core/useAnimatedProps"},"next":{"title":"useDerivedValue","permalink":"/react-native-reanimated/docs/3.x/core/useDerivedValue"}}');var i=t(47671),s=t(30620),a=t(24882);const o={sidebar_position:4},d="useAnimatedRef",c={},l=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{CollapsibleCode:t,Details:r,Indent:o,PlatformCompatibility:d}=n;return t||h("CollapsibleCode",!0),r||h("Details",!0),o||h("Indent",!0),d||h("PlatformCompatibility",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"useanimatedref",children:"useAnimatedRef"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useAnimatedRef"})," lets you get a reference of a view. Used alongside ",(0,i.jsx)(n.a,{href:"/docs/advanced/measure",children:(0,i.jsx)(n.code,{children:"measure"})}),", ",(0,i.jsx)(n.a,{href:"/docs/scroll/scrollTo",children:(0,i.jsx)(n.code,{children:"scrollTo"})}),", and ",(0,i.jsx)(n.a,{href:"/docs/3.x/scroll/useScrollViewOffset",children:(0,i.jsx)(n.code,{children:"useScrollViewOffset"})})," functions."]}),"\n",(0,i.jsxs)(n.p,{children:["You need to pass the object defined using ",(0,i.jsx)(n.code,{children:"useAnimatedRef"})," to the ",(0,i.jsx)(n.code,{children:"ref"})," property of a component."]}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { useAnimatedRef } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedRef = useAnimatedRef();\n\n  return <Animated.View ref={animatedRef} />;\n}\n"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function useAnimatedRef<T extends Component>(): AnimatedRef<T>;\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useAnimatedRef"})," doesn't take any arguments."]}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useAnimatedRef"})," returns an object with a ",(0,i.jsx)(n.code,{children:"current"})," property which contains an instance of a component."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(t,{showLines:[4,23],src:a.A}),"\n",(0,i.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You can use ",(0,i.jsx)(n.code,{children:"useAnimatedRef"})," to reference not only the Animated versions of components, but any React Native component."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The value stored in the current property becomes available after the component is mounted."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function App() {\n  const animatedRef = useAnimatedRef();\n\n  console.log(animatedRef.current); // \ud83d\udea9 Returns null\n\n  useEffect(() => {\n    console.log(animatedRef.current); // \u2705 Returns the component\n  }, []);\n\n  return <View ref={animatedRef} />;\n}\n"})}),(0,i.jsxs)(n.p,{children:["Alternatively, you can get the value stored in the ",(0,i.jsx)(n.code,{children:"current"})," in ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/responding-to-events",children:"event handlers"})," or in a ",(0,i.jsx)(n.code,{children:"onLayout"})," property."]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The value stored in the ",(0,i.jsx)(n.code,{children:"current"})," property isn't available on the ",(0,i.jsx)(n.a,{href:"/docs/fundamentals/glossary#ui-thread",children:"UI thread"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,i.jsx)(d,{android:!0,ios:!0,web:!0})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);