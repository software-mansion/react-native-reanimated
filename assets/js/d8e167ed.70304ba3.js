"use strict";(globalThis.webpackChunkdocs_reanimated=globalThis.webpackChunkdocs_reanimated||[]).push([[4119],{25479:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/hooks/useAnimatedKeyboard","title":"useAnimatedKeyboard","description":"useAnimatedKeyboard is available since v2.10.0","source":"@site/versioned_docs/version-2.x/api/hooks/useAnimatedKeyboard.md","sourceDirName":"api/hooks","slug":"/api/hooks/useAnimatedKeyboard","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedKeyboard","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/versioned_docs/version-2.x/api/hooks/useAnimatedKeyboard.md","tags":[],"version":"2.x","frontMatter":{"id":"useAnimatedKeyboard","title":"useAnimatedKeyboard","sidebar_label":"useAnimatedKeyboard"},"sidebar":"docs","previous":{"title":"useAnimatedGestureHandler","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedGestureHandler"},"next":{"title":"useAnimatedProps","permalink":"/react-native-reanimated/docs/2.x/api/hooks/useAnimatedProps"}}');var i=o(47671),a=o(30620);const d={id:"useAnimatedKeyboard",title:"useAnimatedKeyboard",sidebar_label:"useAnimatedKeyboard"},s=void 0,r={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>options</code> [AnimatedKeyboardOptions]",id:"options-animatedkeyboardoptions",level:4},{value:"Returns",id:"returns",level:3},{value:"Types",id:"types",level:3},{value:"<code>AnimatedKeyboardInfo: [object]</code>",id:"animatedkeyboardinfo-object",level:4},{value:"<code>AnimatedKeyboardOptions: [object]</code>",id:"animatedkeyboardoptions-object",level:4},{value:"Example",id:"example",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"useAnimatedKeyboard is available since v2.10.0"})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["Android implementation of ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," is an experimental feature."]})}),"\n",(0,i.jsxs)(n.p,{children:["With the ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," hook, you can create animations based on current keyboard position."]}),"\n",(0,i.jsxs)(n.p,{children:["On Android, make sure to set ",(0,i.jsx)(n.code,{children:"android:windowSoftInputMode"})," in your ",(0,i.jsx)(n.code,{children:"AndroidManifest.xml"})," to ",(0,i.jsx)(n.code,{children:"adjustResize"}),". Then, using the ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," hook disables\nthe default Android behavior (resizing the view to accommodate keyboard) in the whole app. Using values from ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," hook you can handle the keyboard yourself. Unmounting all components that use ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," hook brings back the default Android behavior."]}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.h4,{id:"options-animatedkeyboardoptions",children:[(0,i.jsx)(n.code,{children:"options"})," [AnimatedKeyboardOptions]"]}),"\n",(0,i.jsx)(n.p,{children:"Optional object containing additional configuration."}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["Hook ",(0,i.jsx)(n.code,{children:"useAnimatedKeyboard"})," returns an instance of ",(0,i.jsx)(n.a,{href:"#animatedkeyboardinfo-object",children:"AnimatedKeyboardInfo"}),";"]}),"\n",(0,i.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,i.jsx)(n.h4,{id:"animatedkeyboardinfo-object",children:(0,i.jsx)(n.code,{children:"AnimatedKeyboardInfo: [object]"})}),"\n",(0,i.jsx)(n.p,{children:"Properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": [",(0,i.jsx)(n.a,{href:"/docs/2.x/api/hooks/useSharedValue",children:"SharedValue"}),"] contains ",(0,i.jsx)(n.code,{children:"[number]"}),"\ncontains current height of the keyboard"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"state"}),": [",(0,i.jsx)(n.a,{href:"/docs/2.x/api/hooks/useSharedValue",children:"SharedValue"}),"] contains ",(0,i.jsx)(n.code,{children:"[enum]"}),"\ncontains current state of the keyboard. Possible states: ",(0,i.jsx)(n.code,{children:"{ CLOSED, OPEN, CLOSING, OPENING }"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"animatedkeyboardoptions-object",children:(0,i.jsx)(n.code,{children:"AnimatedKeyboardOptions: [object]"})}),"\n",(0,i.jsx)(n.p,{children:"Properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"isStatusBarTranslucentAndroid"}),"[bool] - if you want to use translucent status bar on Android, set this option to ",(0,i.jsx)(n.code,{children:"true"}),". Defaults to ",(0,i.jsx)(n.code,{children:"false"}),". Ignored on iOS."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"isNavigationBarTranslucentAndroid"}),"[bool] - if you want to use translucent navigation bar on Android, set this option to ",(0,i.jsx)(n.code,{children:"true"}),". Defaults to ",(0,i.jsx)(n.code,{children:"false"}),". Ignored on iOS."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function AnimatedKeyboardExample() {\n  const keyboard = useAnimatedKeyboard();\n  const translateStyle = useAnimatedStyle(() => {\n    return {\n      transform: [{ translateY: -keyboard.height.value }],\n    };\n  });\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <Animated.View style={translateStyle}>\n        <TextInput />\n      </Animated.View>\n    </ScrollView>\n  );\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},30620:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>s});var t=o(39471);const i={},a=t.createContext(i);function d(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);