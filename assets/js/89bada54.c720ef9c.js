"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[543],{47822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>w,contentTitle:()=>j,default:()=>k,frontMatter:()=>g,metadata:()=>i,toc:()=>v});const i=JSON.parse('{"id":"css-transitions/transition-behavior","title":"transitionBehavior","description":"transitionBehavior lets you determine whether the transition is applied to discrete properties. Defaults to normal which transitions only continuous properties and discards discrete properties.","source":"@site/docs/css-transitions/transition-behavior.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-behavior","permalink":"/react-native-reanimated/docs/css-transitions/transition-behavior","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/docs-reanimated/docs/css-transitions/transition-behavior.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"transitionTimingFunction","permalink":"/react-native-reanimated/docs/css-transitions/transition-timing-function"},"next":{"title":"CSS Animations","permalink":"/react-native-reanimated/docs/category/css-animations"}}');var r=t(47671),o=t(30620),s=t(39471),a=t(8589),l=t(90424),c=t(14442),d=t(19727);function h(){const[e,n]=(0,s.useReducer)(e=>!e,!1);return(0,r.jsxs)(a.A,{style:u.container,children:[(0,r.jsx)(d.default.View,{style:[u.box,{alignSelf:e?"flex-start":"flex-end",backgroundColor:e?"#fa7f7c":"#82cab2",transitionProperty:["alignSelf","backgroundColor"],transitionDuration:"1s",transitionBehavior:"allow-discrete"}]}),(0,r.jsx)(l.A,{onPress:n,title:"Click me"})]})}const u=c.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,margin:64}}),p="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            alignSelf: isToggled ? 'flex-start' : 'flex-end',\n            backgroundColor: isToggled ? '#fa7f7c' : '#82cab2',\n            transitionProperty: ['alignSelf', 'backgroundColor'],\n            transitionDuration: '1s',\n            // highlight-next-line\n            transitionBehavior: 'allow-discrete',\n          },\n        ]}\n      />\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    margin: 64,\n  },\n});\n",m=["start","space-between","end"],f=["#82cab2","#fa7f7c","#b58df1"];function x(){const[e,n]=(0,s.useReducer)(e=>(e+1)%3,0);return(0,r.jsxs)(a.A,{style:y.container,children:[(0,r.jsx)(d.default.View,{style:[y.row,{justifyContent:m[e],transitionProperty:["justifyContent"],transitionDuration:"1s",transitionBehavior:"allow-discrete"}],children:f.map((n,t)=>(0,r.jsx)(d.default.View,{style:[y.box,{backgroundColor:f[e],transitionProperty:"backgroundColor",transitionDuration:"1s"}]},t))}),(0,r.jsx)(d.default.View,{style:[y.row,{justifyContent:m[e],transitionProperty:["justifyContent"],transitionDuration:"1s",transitionBehavior:"normal"}],children:f.map((n,t)=>(0,r.jsx)(d.default.View,{style:[y.box,{backgroundColor:f[e],transitionProperty:"backgroundColor",transitionDuration:"1s"}]},t))}),(0,r.jsx)(l.A,{onPress:n,title:"Click me"})]})}const y=c.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},row:{flexDirection:"row",width:"100%"},box:{height:80,width:80,backgroundColor:"#82cab2",margin:8}}),b="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst justify = ['start', 'space-between', 'end'] as const;\nconst colors = ['#82cab2', '#fa7f7c', '#b58df1'];\n\nexport default function App() {\n  const [state, toggle] = useReducer((s) => (s + 1) % 3, 0);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.row,\n          {\n            justifyContent: justify[state] as 'start' | 'space-between' | 'end',\n            transitionProperty: ['justifyContent'],\n            transitionDuration: '1s',\n            // highlight-next-line\n            transitionBehavior: 'allow-discrete',\n          },\n        ]}>\n        {colors.map((_, id) => (\n          <Animated.View\n            key={id}\n            style={[\n              styles.box,\n              {\n                backgroundColor: colors[state],\n                transitionProperty: 'backgroundColor',\n                transitionDuration: '1s',\n              },\n            ]}\n          />\n        ))}\n      </Animated.View>\n      <Animated.View\n        style={[\n          styles.row,\n          {\n            justifyContent: justify[state] as 'start' | 'space-between' | 'end',\n            transitionProperty: ['justifyContent'],\n            transitionDuration: '1s',\n            // highlight-next-line\n            transitionBehavior: 'normal',\n          },\n        ]}>\n        {colors.map((_, id) => (\n          <Animated.View\n            key={id}\n            style={[\n              styles.box,\n              {\n                backgroundColor: colors[state],\n                transitionProperty: 'backgroundColor',\n                transitionDuration: '1s',\n              },\n            ]}\n          />\n        ))}\n      </Animated.View>\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  box: {\n    height: 80,\n    width: 80,\n    backgroundColor: '#82cab2',\n    margin: 8,\n  },\n});\n",g={sidebar_position:6},j="transitionBehavior",w={},v=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>allowDiscrete</code>",id:"allowdiscrete",level:4},{value:"<code>normal</code>",id:"normal",level:4},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function C(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:t,InteractiveExample:i,PlatformCompatibility:s}=n;return t||D("Details",!0),i||D("InteractiveExample",!0),s||D("PlatformCompatibility",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"transitionbehavior",children:"transitionBehavior"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"transitionBehavior"})," lets you determine whether the transition is applied to discrete properties. Defaults to ",(0,r.jsx)(n.code,{children:"normal"})," which transitions only continuous properties and discards discrete properties."]}),"\n","\n",(0,r.jsx)(i,{src:p,component:h}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function App() {\n  return (\n    <Animated.View\n      style={{\n        transitionProperty: 'alignItems',\n        transitionDuration: 500,\n        // highlight-next-line\n        transitionBehavior: 'allow-discrete',\n      }}\n    />\n  );\n}\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Type definitions"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"type CSSTransitionBehavior = 'normal' | 'allow-discrete';\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"values",children:"Values"}),"\n",(0,r.jsx)(n.h4,{id:"allowdiscrete",children:(0,r.jsx)(n.code,{children:"allowDiscrete"})}),"\n",(0,r.jsx)(n.p,{children:"Allows transitions to be applied to discrete properties, resulting in delayed changes."}),"\n",(0,r.jsx)(n.h4,{id:"normal",children:(0,r.jsx)(n.code,{children:"normal"})}),"\n",(0,r.jsx)(n.p,{children:"Doesn't allow transitions to be applied to discrete properties, resulting in changes applied immediately."}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,r.jsx)(i,{src:b,component:x,label:"Comparison between allowDiscrete and normal"}),"\n",(0,r.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Discrete style properties (like ",(0,r.jsx)(n.code,{children:"flexDirection"}),", ",(0,r.jsx)(n.code,{children:"justifyContent"}),") can't be smoothly animated using the ",(0,r.jsx)(n.code,{children:"transitionProperty"})," property. For example, you can't animate smoothly from ",(0,r.jsx)(n.code,{children:"alignItems: start"})," to ",(0,r.jsx)(n.code,{children:"alignItems: center"}),". You can use ",(0,r.jsx)(n.a,{href:"/docs/layout-animations/layout-transitions",children:"Layout Animations"})," to animate discrete style properties instead."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When using ",(0,r.jsx)(n.code,{children:"allowDiscrete"})," the discrete properties flip between two values at the midpoint of the animation, except for the ",(0,r.jsx)(n.code,{children:"display"})," property, which is immediately at the moment of the transition start."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,r.jsx)(s,{android:!0,ios:!0,web:!0})]})}function k(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(C,{...e})}):C(e)}function D(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},90424:(e,n,t)=>{t.d(n,{A:()=>c});var i=t(39471),r=t(14442),o=t(21844),s=t(31071),a=i.forwardRef((e,n)=>{var t=e.accessibilityLabel,r=e.color,a=e.disabled,c=e.onPress,d=e.testID,h=e.title;return i.createElement(o.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:a,focusable:!a,onPress:c,ref:n,style:[l.button,r&&{backgroundColor:r},a&&l.buttonDisabled],testID:d},i.createElement(s.A,{style:[l.text,a&&l.textDisabled]},h))});a.displayName="Button";var l=r.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const c=a}}]);