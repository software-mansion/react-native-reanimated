"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5428],{30620:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(39471);const i={},s=a.createContext(i);function o(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:t},e.children)}},65644:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api/miscellaneous/getRelativeCoords","title":"getRelativeCoords","description":"Determines the location on the screen, relative to the given view. It might be useful when there are only absolute coordinates available and you need coordinates relative to the parent.","source":"@site/versioned_docs/version-2.x/api/miscellaneous/getRelativeCoords.md","sourceDirName":"api/miscellaneous","slug":"/api/miscellaneous/getRelativeCoords","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/getRelativeCoords","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-2.x/api/miscellaneous/getRelativeCoords.md","tags":[],"version":"2.x","frontMatter":{"id":"getRelativeCoords","title":"getRelativeCoords","sidebar_label":"getRelativeCoords"},"sidebar":"docs","previous":{"title":"scrollTo","permalink":"/react-native-reanimated/docs/2.x/api/nativeMethods/scrollTo"},"next":{"title":"Interpolate","permalink":"/react-native-reanimated/docs/2.x/api/miscellaneous/interpolate"}}');var i=n(47671),s=n(30620);const o={id:"getRelativeCoords",title:"getRelativeCoords",sidebar_label:"getRelativeCoords"},r=void 0,l={},d=[{value:"Arguments",id:"arguments",level:3},{value:"animatedRef",id:"animatedref",level:4},{value:"x",id:"x",level:4},{value:"y",id:"y",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function c(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Determines the location on the screen, relative to the given view. It might be useful when there are only absolute coordinates available and you need coordinates relative to the parent."}),"\n",(0,i.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(t.h4,{id:"animatedref",children:"animatedRef"}),"\n",(0,i.jsxs)(t.p,{children:["The product of ",(0,i.jsx)(t.a,{href:"/docs/2.x/api/hooks/useAnimatedRef",children:(0,i.jsx)(t.code,{children:"useAnimatedRef"})})," is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread). This ref should be passed as a prop to the view relative to which we want to know coordinates."]}),"\n",(0,i.jsx)(t.h4,{id:"x",children:"x"}),"\n",(0,i.jsxs)(t.p,{children:["Absolute ",(0,i.jsx)(t.code,{children:"x"})," coordinate."]}),"\n",(0,i.jsx)(t.h4,{id:"y",children:"y"}),"\n",(0,i.jsxs)(t.p,{children:["Absolute ",(0,i.jsx)(t.code,{children:"y"})," coordinate"]}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"Object which contains relative coordinates"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"x"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"y"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"const Comp = () => {\n  const aref = useAnimatedRef();\n  // ...\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onEnd: (event) => {\n      getRelativeCoords(aref, event.absoluteX, event.absoluteY);\n    },\n  });\n\n  return (\n    <View ref={aref}>\n      <PanGestureHandler onGestureEvent={gestureHandler}>\n        <Animated.View style={[styles.box]} />\n      </PanGestureHandler>\n    </View>\n  );\n};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);