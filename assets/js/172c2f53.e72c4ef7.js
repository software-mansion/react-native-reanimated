"use strict";(globalThis.webpackChunkdocs_reanimated=globalThis.webpackChunkdocs_reanimated||[]).push([[9482],{27384:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"1.x","label":"1.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-1.x","isLast":false,"docsSidebars":{"docs":[{"type":"category","label":"Overview","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/","label":"About","docId":"about","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/getting_started","label":"Getting started","docId":"getting_started","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/declarative","label":"Declarative Animation API","docId":"declarative","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/examples","label":"Examples","docId":"examples","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/transitions","label":"Transitions","docId":"transitions","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/config","label":"Additional configuration","docId":"config","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Features","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/value","label":"Value","docId":"value","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/clock","label":"Clock","docId":"clock","unlisted":false},{"type":"category","label":"Animations","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/animations/timing","label":"Timing","docId":"animations/timing","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/animations/decay","label":"Decay","docId":"animations/decay","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/animations/spring","label":"Spring","docId":"animations/spring","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/animations/spring_utils","label":"SpringUtils","docId":"animations/spring_utils","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Nodes","items":[{"type":"category","label":"Math","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/abs","label":"abs","docId":"nodes/abs","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/add","label":"add","docId":"nodes/add","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/ceil","label":"ceil","docId":"nodes/ceil","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/divide","label":"divide","docId":"nodes/divide","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/exp","label":"exp","docId":"nodes/exp","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/floor","label":"floor","docId":"nodes/floor","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/log","label":"log","docId":"nodes/log","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/max","label":"max","docId":"nodes/max","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/min","label":"min","docId":"nodes/min","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/modulo","label":"modulo","docId":"nodes/modulo","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/multiply","label":"multiply","docId":"nodes/multiply","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/pow","label":"pow","docId":"nodes/pow","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/round","label":"round","docId":"nodes/round","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/sqrt","label":"sqrt","docId":"nodes/sqrt","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/sub","label":"sub","docId":"nodes/sub","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Trigonometry","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/acos","label":"acos","docId":"nodes/acos","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/asin","label":"asin","docId":"nodes/asin","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/atan","label":"atan","docId":"nodes/atan","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/cos","label":"cos","docId":"nodes/cos","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/sin","label":"sin","docId":"nodes/sin","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/tan","label":"tan","docId":"nodes/tan","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Logical expressions","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/and","label":"and","docId":"nodes/and","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/eq","label":"eq","docId":"nodes/eq","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/greaterOrEq","label":"greaterOrEq","docId":"nodes/greaterOrEq","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/greaterThan","label":"greaterThan","docId":"nodes/greaterThan","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/lessOrEq","label":"lessOrEq","docId":"nodes/lessOrEq","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/lessThan","label":"lessThan","docId":"nodes/lessThan","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/neq","label":"neq","docId":"nodes/neq","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/not","label":"not","docId":"nodes/not","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/or","label":"or","docId":"nodes/or","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Clock","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/clockRunning","label":"clockRunning","docId":"nodes/clockRunning","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/startClock","label":"startClock","docId":"nodes/startClock","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/stopClock","label":"stopClock","docId":"nodes/stopClock","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Others","items":[{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/acc","label":"acc","docId":"nodes/acc","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/block","label":"block","docId":"nodes/block","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/call","label":"call","docId":"nodes/call","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/color","label":"color","docId":"nodes/color","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/concat","label":"concat","docId":"nodes/concat","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/cond","label":"cond","docId":"nodes/cond","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/debug","label":"debug","docId":"nodes/debug","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/defined","label":"defined","docId":"nodes/defined","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/diff","label":"diff","docId":"nodes/diff","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/diffClamp","label":"diffClamp","docId":"nodes/diffClamp","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/event","label":"event","docId":"nodes/event","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/interpolate","label":"interpolate","docId":"nodes/interpolate","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/interpolateColors","label":"interpolateColors","docId":"nodes/interpolateColors","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/onChange","label":"onChange","docId":"nodes/onChange","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/proc","label":"proc","docId":"nodes/proc","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/nodes/set","label":"set","docId":"nodes/set","unlisted":false}],"collapsed":false,"collapsible":false}],"collapsed":false,"collapsible":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/event","label":"Event handling","docId":"event","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/view","label":"View, Props, etc","docId":"view","unlisted":false},{"type":"link","href":"/react-native-reanimated/docs/1.x/code","label":"Animated.Code","docId":"code","unlisted":false}],"collapsed":false,"collapsible":false}]},"docs":{"about":{"id":"about","title":"About React Native Reanimated","description":"React Native\'s Animated library reimplemented.","sidebar":"docs"},"animations/decay":{"id":"animations/decay","title":"Decay","description":"Updates position and velocity nodes by running a single step of animation each time this node evaluates. State variable finished is set to 1 when the animation gets to the final point (that is the velocity drops under the level of significance). The time state node is populated automatically by this node and refers to the last clock time this node got evaluated. It is expected to be reset each time we want to restart the animation. Decay animation can be configured using deceleration config param and it controls how fast the animation decelerates. The value should be between 0 and 1 but only values that are close to 1 will yield meaningful results.","sidebar":"docs"},"animations/spring":{"id":"animations/spring","title":"Spring","description":"When evaluated, updates position and velocity nodes by running a single step of spring based animation. Check the original Animated API docs to learn about the config parameters like damping, mass, stiffness, overshootClamping, restSpeedThreshold and restDisplacementThreshold. The finished state updates to 1 when the position reaches the destination set by toValue. The time state variable also updates when the node evaluates and it represents the clock value at the time when the node got evaluated for the last time. It is expected that time variable is reset before spring animation can be restarted.","sidebar":"docs"},"animations/spring_utils":{"id":"animations/spring_utils","title":"SpringUtils","description":"For developers\' convenience, it\'s possible to use a different way of configuring spring animation which follows behavior known from React Native core.","sidebar":"docs"},"animations/timing":{"id":"animations/timing","title":"Timing","description":"Updates position node by running timing based animation from a given position to a destination determined by toValue. The animation is expected to last duration milliseconds and use easing function that could be set to one of the nodes exported by the Easing object.","sidebar":"docs"},"clock":{"id":"clock","title":"Clock","description":"Original Animated API makes an \\"animation\\" object a first class citizen.","sidebar":"docs"},"code":{"id":"code","title":"Animated.Code","description":"Animated.Code component allows you to define reanimated nodes that you want to execute when their input nodes updates, but aren\'t necessarily strictly related to some view properties and hence it does not feel right to place them under translate or other prop of an Animated.View. This component renders null, so you can place it in any place you want in your render method. It is required that your code is put inside component as we rely on componentDidMount and componentWillUnmount callbacks to install and cleanup animated nodes. Note that the code you put is going to be executed only once. We currently have no way of telling if your code changes and so it will only be run in componentDidMount. If you wish for your reanimated nodes to be updated when the component updates, you can update the key property of the Animated.Code component, which will effectively unmount the old and mount the new versions of it in the React tree. You can provide dependencies key which works just like the second argument in useCode.","sidebar":"docs"},"config":{"id":"config","title":"Additional configuration","description":"Reanimated exports two functions that control which properties can be animated natively:","sidebar":"docs"},"declarative":{"id":"declarative","title":"Declarative Animation API","description":"Invoking animation differs from the way it is done when using the original Animated API.","sidebar":"docs"},"event":{"id":"event","title":"Event handling with reanimated nodes","description":"react-native-reanimated\'s new syntax is possible to be used with Animated.event. Instead of providing only a mapping from event fields to animated nodes, it is allowed to write a function that takes reanimated values map as an input and return a block (or any other reanimated function) that will be then used to handle the event.","sidebar":"docs"},"examples":{"id":"examples","title":"Examples","description":"The source code for the example (showcase) app is under the Example/ directory.","sidebar":"docs"},"getting_started":{"id":"getting_started","title":"Getting started","description":"Before you get started you should definitely familiarize yourself with the original Animated API. It will do you well to be comfortable with how animations are generally done in Animated. (Fun Fact: Reanimated is also backwards compatible with the Animated API. \ud83d\ude4c)","sidebar":"docs"},"nodes/abs":{"id":"nodes/abs","title":"abs","description":"abs","sidebar":"docs"},"nodes/acc":{"id":"nodes/acc","title":"acc","description":"acc","sidebar":"docs"},"nodes/acos":{"id":"nodes/acos","title":"acos","description":"acos","sidebar":"docs"},"nodes/add":{"id":"nodes/add","title":"add","description":"add","sidebar":"docs"},"nodes/and":{"id":"nodes/and","title":"and","description":"and","sidebar":"docs"},"nodes/asin":{"id":"nodes/asin","title":"asin","description":"asin","sidebar":"docs"},"nodes/atan":{"id":"nodes/atan","title":"atan","description":"atan","sidebar":"docs"},"nodes/block":{"id":"nodes/block","title":"block","description":"block","sidebar":"docs"},"nodes/call":{"id":"nodes/call","title":"call","description":"call","sidebar":"docs"},"nodes/ceil":{"id":"nodes/ceil","title":"ceil","description":"ceil","sidebar":"docs"},"nodes/clockRunning":{"id":"nodes/clockRunning","title":"clockRunning","description":"clockRunning","sidebar":"docs"},"nodes/color":{"id":"nodes/color","title":"color","description":"color","sidebar":"docs"},"nodes/concat":{"id":"nodes/concat","title":"concat","description":"concat","sidebar":"docs"},"nodes/cond":{"id":"nodes/cond","title":"cond","description":"cond","sidebar":"docs"},"nodes/cos":{"id":"nodes/cos","title":"cos","description":"cos","sidebar":"docs"},"nodes/debug":{"id":"nodes/debug","title":"debug","description":"debug","sidebar":"docs"},"nodes/defined":{"id":"nodes/defined","title":"defined","description":"defined","sidebar":"docs"},"nodes/diff":{"id":"nodes/diff","title":"diff","description":"diff","sidebar":"docs"},"nodes/diffClamp":{"id":"nodes/diffClamp","title":"diffClamp","description":"diffClamp","sidebar":"docs"},"nodes/divide":{"id":"nodes/divide","title":"divide","description":"divide","sidebar":"docs"},"nodes/eq":{"id":"nodes/eq","title":"eq","description":"eq","sidebar":"docs"},"nodes/event":{"id":"nodes/event","title":"event","description":"event","sidebar":"docs"},"nodes/exp":{"id":"nodes/exp","title":"exp","description":"exp","sidebar":"docs"},"nodes/floor":{"id":"nodes/floor","title":"floor","description":"floor","sidebar":"docs"},"nodes/greaterOrEq":{"id":"nodes/greaterOrEq","title":"greaterOrEq","description":"greaterOrEq","sidebar":"docs"},"nodes/greaterThan":{"id":"nodes/greaterThan","title":"greaterThan","description":"greaterThan","sidebar":"docs"},"nodes/interpolate":{"id":"nodes/interpolate","title":"interpolate","description":"interpolate","sidebar":"docs"},"nodes/interpolateColors":{"id":"nodes/interpolateColors","title":"interpolateColors","description":"interpolateColors","sidebar":"docs"},"nodes/lessOrEq":{"id":"nodes/lessOrEq","title":"lessOrEq","description":"lessOrEq","sidebar":"docs"},"nodes/lessThan":{"id":"nodes/lessThan","title":"lessThan","description":"lessThan","sidebar":"docs"},"nodes/log":{"id":"nodes/log","title":"log","description":"log","sidebar":"docs"},"nodes/max":{"id":"nodes/max","title":"max","description":"max","sidebar":"docs"},"nodes/min":{"id":"nodes/min","title":"min","description":"min","sidebar":"docs"},"nodes/modulo":{"id":"nodes/modulo","title":"modulo","description":"modulo","sidebar":"docs"},"nodes/multiply":{"id":"nodes/multiply","title":"multiply","description":"multiply","sidebar":"docs"},"nodes/neq":{"id":"nodes/neq","title":"neq","description":"neq","sidebar":"docs"},"nodes/not":{"id":"nodes/not","title":"not","description":"not","sidebar":"docs"},"nodes/onChange":{"id":"nodes/onChange","title":"onChange","description":"onChange","sidebar":"docs"},"nodes/or":{"id":"nodes/or","title":"or","description":"or","sidebar":"docs"},"nodes/pow":{"id":"nodes/pow","title":"pow","description":"pow","sidebar":"docs"},"nodes/proc":{"id":"nodes/proc","title":"proc","description":"proc","sidebar":"docs"},"nodes/round":{"id":"nodes/round","title":"round","description":"round","sidebar":"docs"},"nodes/set":{"id":"nodes/set","title":"set","description":"set","sidebar":"docs"},"nodes/sin":{"id":"nodes/sin","title":"sin","description":"sin","sidebar":"docs"},"nodes/sqrt":{"id":"nodes/sqrt","title":"sqrt","description":"sqrt","sidebar":"docs"},"nodes/startClock":{"id":"nodes/startClock","title":"startClock","description":"startClock","sidebar":"docs"},"nodes/stopClock":{"id":"nodes/stopClock","title":"stopClock","description":"stopClock","sidebar":"docs"},"nodes/sub":{"id":"nodes/sub","title":"sub","description":"sub","sidebar":"docs"},"nodes/tan":{"id":"nodes/tan","title":"tan","description":"tan","sidebar":"docs"},"transitions":{"id":"transitions","title":"Transitions","description":"Transitions is an experimental API distributed as a part of reanimated which serves the purpose of animating between two states of view hierarchy. It is conceptually similar to LayoutAnimation concept from react native but gives much better control of what and how is going to be animated.","sidebar":"docs"},"value":{"id":"value","title":"Value","description":"Animated.Value is a container for storing values. It\'s is initialized with new Value(0) constructor. For backward compatibility there are provided API for setting value after it has been initialized:","sidebar":"docs"},"view":{"id":"view","title":"View, Props, etc","description":"Follow the original Animated library guides to learn how values can be connected to View attributes.","sidebar":"docs"}}}}')}}]);