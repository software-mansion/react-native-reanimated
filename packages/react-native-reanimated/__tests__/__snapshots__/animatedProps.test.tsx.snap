// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`animatedProps Custom animated component 1`] = `
<View>
  <RNSVGSvgView
    bbHeight="100%"
    bbWidth="100%"
    focusable={false}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      // SVG components strip our jest props and cannot be tested
      <RNSVGCircle
        cx="50%"
        cy="50%"
        fill={
          {
            "payload": 4290088433,
            "type": 0,
          }
        }
        propList={
          [
            "fill",
          ]
        }
        r={20}
        testID="circle"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <TextInput
    collapsable={false}
    defaultValue="Box width: 20"
    jestAnimatedProps={
      {
        "value": {
          "defaultValue": "Box width: 20",
          "text": "Box width: 20",
        },
      }
    }
    jestAnimatedStyle={
      {
        "value": {},
      }
    }
    testID="text"
    text="Box width: 20"
  />
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="button"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Click me
      </Text>
    </View>
  </View>
</View>
`;

exports[`animatedProps SVG component cannot be tested 1`] = `
<View>
  <RNSVGSvgView
    bbHeight="100%"
    bbWidth="100%"
    focusable={false}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      // SVG components strip our jest props and cannot be tested
      <RNSVGCircle
        cx="50%"
        cy="50%"
        fill={
          {
            "payload": 4290088433,
            "type": 0,
          }
        }
        propList={
          [
            "fill",
          ]
        }
        r={20}
        testID="circle"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <TextInput
    collapsable={false}
    defaultValue="Box width: 20"
    jestAnimatedProps={
      {
        "value": {
          "defaultValue": "Box width: 20",
          "text": "Box width: 20",
        },
      }
    }
    jestAnimatedStyle={
      {
        "value": {},
      }
    }
    testID="text"
    text="Box width: 20"
  />
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="button"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Click me
      </Text>
    </View>
  </View>
</View>
`;
