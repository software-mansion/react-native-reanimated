def isExpoLinked = false
rootProject.getSubprojects().forEach({ project ->
    if (project.plugins.hasPlugin("com.android.application")) {
        if (project.configurations.implementation.getDependencies().find { dep -> dep.name == "expo" }) {
            isExpoLinked = true
        }
    }
})

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

if (isExpoLinked) {
    apply plugin: 'com.android.library'

    android {
        compileSdkVersion safeExtGet('compileSdkVersion', 30)

        sourceSets {
            main.manifest.srcFile 'src/AndroidManifest.xml'
            main.java.srcDirs = [ 'expo/src/main/java' ]
        }

        libraryVariants.all {
            generateBuildConfigProvider?.get()?.enabled = false
        }
    }

    dependencies {
        implementation 'com.facebook.react:react-native:+'
        implementation project(':expo-modules-core')

        project.configurations.default.artifacts.each { artifact ->
            api files(artifact.file)
        }
    }
}
